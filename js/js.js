!function() {
    define("lib/utils/ted", [], function() {
        "use strict";
        return function(a) {
            return window.TED ? window.TED[a] : ""
        }
    }),
    define("lib/utils/query_param", [], function() {
        "use strict";
        return function(a) {
            a = a.replace(/[\[]/, "\\[").replace(/[\]]/, "\\]");
            var b = new RegExp("[\\?&]" + a + "=([^&#]*)")
              , c = b.exec(location.search);
            return null === c ? "" : decodeURIComponent(c[1].replace(/\+/g, " "))
        }
    });
    var fetchText, _buildMap = {};
    define("es6", ["module"], function(a) {
        return {
            load: function(a, b, c, d) {},
            write: function(a, b, c) {
                b in _buildMap && c.asModule(a + "!" + b, _buildMap[b])
            }
        }
    }),
    define("es6!components/companion-ads/slot-spot.babel", ["exports", "module"], function(a, b) {
        "use strict";
        function c(a, b) {
            if (!(a instanceof b))
                throw new TypeError("Cannot call a class as a function")
        }
        var d = function() {
            function a(a, b) {
                for (var c = 0; c < b.length; c++) {
                    var d = b[c];
                    d.enumerable = d.enumerable || !1,
                    d.configurable = !0,
                    "value"in d && (d.writable = !0),
                    Object.defineProperty(a, d.key, d)
                }
            }
            return function(b, c, d) {
                return c && a(b.prototype, c),
                d && a(b, d),
                b
            }
        }()
          , e = function() {
            function a(b, d, e) {
                c(this, a),
                this.adUnitPath = b,
                this.targetingKey = d,
                this.size = e.slice(0);
                var f = document.createElement("div")
                  , g = "ad-" + Math.floor(Math.random() * Math.pow(2, 52) - 1).toString(36);
                this.el = f,
                this.el.setAttribute("id", g),
                this.id = g,
                this.fillChangeHandlers = [],
                this.filled = !1,
                this.wiped = !1
            }
            return d(a, [{
                key: "handleFillChange",
                value: function(a) {
                    var b = this;
                    this.filled = a,
                    this.wiped = !this.filled && this.wiped,
                    this.fillChangeHandlers.forEach(function(a) {
                        return a(b.filled, b.wiped)
                    })
                }
            }, {
                key: "addFillChangeHandler",
                value: function(a) {
                    this.fillChangeHandlers.push(a)
                }
            }, {
                key: "removeFillChangeHandler",
                value: function(a) {
                    var b = this.fillChangeHandlers.indexOf(a);
                    b !== -1 && this.fillChangeHandlers.splice(b, 1)
                }
            }, {
                key: "setContainer",
                value: function(a) {
                    this.container && this.container === a || (a.appendChild(this.el),
                    this.container = a,
                    this.filled && (this.wiped = !0,
                    this.handleFillChange(!1)))
                }
            }, {
                key: "unsetContainer",
                value: function(a) {
                    this.container && this.container === a && (a.removeChild(this.el),
                    this.container = null)
                }
            }, {
                key: "setTargetingValue",
                value: function(a) {
                    var b = this;
                    this.targetingValue && this.targetingValue === a || window.googletag.cmd.push(function() {
                        var c = !!b.slot;
                        b.slot = b.slot || window.googletag.defineSlot(b.adUnitPath, b.size, b.id).addService(window.googletag.pubads()),
                        b.handleFillChange(!1),
                        b.slot.clearTargeting(),
                        b.slot.setTargeting(b.targetingKey, a),
                        b.targetingValue = a,
                        c ? window.googletag.pubads().refresh([b.slot]) : window.googletag.display(b.id)
                    })
                }
            }]),
            a
        }();
        b.exports = e
    }),
    define("es6!components/companion-ads/slot-spot-lot.babel", ["exports", "es6!./slot-spot.babel"], function(a, b) {
        "use strict";
        function c(a) {
            return a && a.__esModule ? a : {
                default: a
            }
        }
        function d(a, b) {
            return j.find(function(c) {
                return c.adUnitPath === a && c.targetingKey === b
            })
        }
        function e(a) {
            return j.find(function(b) {
                return b.slot === a
            })
        }
        function f() {
            k || (k = !0,
            window.googletag.cmd.push(function() {
                window.googletag.pubads().addEventListener("slotRenderEnded", function(a) {
                    if (a && a.slot && !a.isEmpty) {
                        var b = e(a.slot);
                        b && b.handleFillChange(!0)
                    }
                })
            }))
        }
        function g(a) {
            var b = a.props
              , c = b.adUnitPath
              , e = b.targetingKey
              , g = b.targetingValue
              , h = b.size
              , k = a.el
              , l = a.handleFillChange;
            if (c && e && g && h && k) {
                f();
                var m = d(c, e);
                m || (m = new i.default(c,e,h),
                j.push(m)),
                m.setContainer(k),
                m.setTargetingValue(g),
                m.addFillChangeHandler(l),
                l(m.filled, m.wiped)
            }
        }
        function h(a) {
            var b = a.props
              , c = b.adUnitPath
              , e = b.targetingKey
              , f = a.el
              , g = a.handleFillChange
              , h = d(c, e);
            h && (h.unsetContainer(f),
            h.removeFillChangeHandler(g))
        }
        Object.defineProperty(a, "__esModule", {
            value: !0
        }),
        a.findByPathAndKey = d,
        a.findBySlot = e,
        a.init = f,
        a.register = g,
        a.unregister = h;
        var i = c(b)
          , j = []
          , k = !1
    }),
    define("jqueryui/widget", ["jquery"], function(a) {
        return function(a, b) {
            var c = 0
              , d = Array.prototype.slice
              , e = a.cleanData;
            a.cleanData = function(b) {
                for (var c, d = 0; null != (c = b[d]); d++)
                    try {
                        a(c).triggerHandler("remove")
                    } catch (a) {}
                e(b)
            }
            ,
            a.widget = function(b, c, d) {
                var e, f, g, h, i = {}, j = b.split(".")[0];
                b = b.split(".")[1],
                e = j + "-" + b,
                d || (d = c,
                c = a.Widget),
                a.expr[":"][e.toLowerCase()] = function(b) {
                    return !!a.data(b, e)
                }
                ,
                a[j] = a[j] || {},
                f = a[j][b],
                g = a[j][b] = function(a, b) {
                    return this._createWidget ? void (arguments.length && this._createWidget(a, b)) : new g(a,b)
                }
                ,
                a.extend(g, f, {
                    version: d.version,
                    _proto: a.extend({}, d),
                    _childConstructors: []
                }),
                h = new c,
                h.options = a.widget.extend({}, h.options),
                a.each(d, function(b, d) {
                    return a.isFunction(d) ? void (i[b] = function() {
                        var a = function() {
                            return c.prototype[b].apply(this, arguments)
                        }
                          , e = function(a) {
                            return c.prototype[b].apply(this, a)
                        };
                        return function() {
                            var b, c = this._super, f = this._superApply;
                            return this._super = a,
                            this._superApply = e,
                            b = d.apply(this, arguments),
                            this._super = c,
                            this._superApply = f,
                            b
                        }
                    }()) : void (i[b] = d)
                }),
                g.prototype = a.widget.extend(h, {
                    widgetEventPrefix: f ? h.widgetEventPrefix || b : b
                }, i, {
                    constructor: g,
                    namespace: j,
                    widgetName: b,
                    widgetFullName: e
                }),
                f ? (a.each(f._childConstructors, function(b, c) {
                    var d = c.prototype;
                    a.widget(d.namespace + "." + d.widgetName, g, c._proto)
                }),
                delete f._childConstructors) : c._childConstructors.push(g),
                a.widget.bridge(b, g)
            }
            ,
            a.widget.extend = function(c) {
                for (var e, f, g = d.call(arguments, 1), h = 0, i = g.length; h < i; h++)
                    for (e in g[h])
                        f = g[h][e],
                        g[h].hasOwnProperty(e) && f !== b && (a.isPlainObject(f) ? c[e] = a.isPlainObject(c[e]) ? a.widget.extend({}, c[e], f) : a.widget.extend({}, f) : c[e] = f);
                return c
            }
            ,
            a.widget.bridge = function(c, e) {
                var f = e.prototype.widgetFullName || c;
                a.fn[c] = function(g) {
                    var h = "string" == typeof g
                      , i = d.call(arguments, 1)
                      , j = this;
                    return g = !h && i.length ? a.widget.extend.apply(null, [g].concat(i)) : g,
                    h ? this.each(function() {
                        var d, e = a.data(this, f);
                        return e ? a.isFunction(e[g]) && "_" !== g.charAt(0) ? (d = e[g].apply(e, i),
                        d !== e && d !== b ? (j = d && d.jquery ? j.pushStack(d.get()) : d,
                        !1) : void 0) : a.error("no such method '" + g + "' for " + c + " widget instance") : a.error("cannot call methods on " + c + " prior to initialization; attempted to call method '" + g + "'")
                    }) : this.each(function() {
                        var b = a.data(this, f);
                        b ? b.option(g || {})._init() : a.data(this, f, new e(g,this))
                    }),
                    j
                }
            }
            ,
            a.Widget = function() {}
            ,
            a.Widget._childConstructors = [],
            a.Widget.prototype = {
                widgetName: "widget",
                widgetEventPrefix: "",
                defaultElement: "<div>",
                options: {
                    disabled: !1,
                    create: null
                },
                _createWidget: function(b, d) {
                    d = a(d || this.defaultElement || this)[0],
                    this.element = a(d),
                    this.uuid = c++,
                    this.eventNamespace = "." + this.widgetName + this.uuid,
                    this.options = a.widget.extend({}, this.options, this._getCreateOptions(), b),
                    this.bindings = a(),
                    this.hoverable = a(),
                    this.focusable = a(),
                    d !== this && (a.data(d, this.widgetFullName, this),
                    this._on(!0, this.element, {
                        remove: function(a) {
                            a.target === d && this.destroy()
                        }
                    }),
                    this.document = a(d.style ? d.ownerDocument : d.document || d),
                    this.window = a(this.document[0].defaultView || this.document[0].parentWindow)),
                    this._create(),
                    this._trigger("create", null, this._getCreateEventData()),
                    this._init()
                },
                _getCreateOptions: a.noop,
                _getCreateEventData: a.noop,
                _create: a.noop,
                _init: a.noop,
                destroy: function() {
                    this._destroy(),
                    this.element.unbind(this.eventNamespace).removeData(this.widgetName).removeData(this.widgetFullName).removeData(a.camelCase(this.widgetFullName)),
                    this.widget().unbind(this.eventNamespace).removeAttr("aria-disabled").removeClass(this.widgetFullName + "-disabled ui-state-disabled"),
                    this.bindings.unbind(this.eventNamespace),
                    this.hoverable.removeClass("ui-state-hover"),
                    this.focusable.removeClass("ui-state-focus")
                },
                _destroy: a.noop,
                widget: function() {
                    return this.element
                },
                option: function(c, d) {
                    var e, f, g, h = c;
                    if (0 === arguments.length)
                        return a.widget.extend({}, this.options);
                    if ("string" == typeof c)
                        if (h = {},
                        e = c.split("."),
                        c = e.shift(),
                        e.length) {
                            for (f = h[c] = a.widget.extend({}, this.options[c]),
                            g = 0; g < e.length - 1; g++)
                                f[e[g]] = f[e[g]] || {},
                                f = f[e[g]];
                            if (c = e.pop(),
                            1 === arguments.length)
                                return f[c] === b ? null : f[c];
                            f[c] = d
                        } else {
                            if (1 === arguments.length)
                                return this.options[c] === b ? null : this.options[c];
                            h[c] = d
                        }
                    return this._setOptions(h),
                    this
                },
                _setOptions: function(a) {
                    var b;
                    for (b in a)
                        this._setOption(b, a[b]);
                    return this
                },
                _setOption: function(a, b) {
                    return this.options[a] = b,
                    "disabled" === a && (this.widget().toggleClass(this.widgetFullName + "-disabled ui-state-disabled", !!b).attr("aria-disabled", b),
                    this.hoverable.removeClass("ui-state-hover"),
                    this.focusable.removeClass("ui-state-focus")),
                    this
                },
                enable: function() {
                    return this._setOption("disabled", !1)
                },
                disable: function() {
                    return this._setOption("disabled", !0)
                },
                _on: function(b, c, d) {
                    var e, f = this;
                    "boolean" != typeof b && (d = c,
                    c = b,
                    b = !1),
                    d ? (c = e = a(c),
                    this.bindings = this.bindings.add(c)) : (d = c,
                    c = this.element,
                    e = this.widget()),
                    a.each(d, function(d, g) {
                        function h() {
                            if (b || f.options.disabled !== !0 && !a(this).hasClass("ui-state-disabled"))
                                return ("string" == typeof g ? f[g] : g).apply(f, arguments)
                        }
                        "string" != typeof g && (h.guid = g.guid = g.guid || h.guid || a.guid++);
                        var i = d.match(/^(\w+)\s*(.*)$/)
                          , j = i[1] + f.eventNamespace
                          , k = i[2];
                        k ? e.delegate(k, j, h) : c.bind(j, h)
                    })
                },
                _off: function(a, b) {
                    b = (b || "").split(" ").join(this.eventNamespace + " ") + this.eventNamespace,
                    a.unbind(b).undelegate(b)
                },
                _delay: function(a, b) {
                    function c() {
                        return ("string" == typeof a ? d[a] : a).apply(d, arguments)
                    }
                    var d = this;
                    return setTimeout(c, b || 0)
                },
                _hoverable: function(b) {
                    this.hoverable = this.hoverable.add(b),
                    this._on(b, {
                        mouseenter: function(b) {
                            a(b.currentTarget).addClass("ui-state-hover")
                        },
                        mouseleave: function(b) {
                            a(b.currentTarget).removeClass("ui-state-hover")
                        }
                    })
                },
                _focusable: function(b) {
                    this.focusable = this.focusable.add(b),
                    this._on(b, {
                        focusin: function(b) {
                            a(b.currentTarget).addClass("ui-state-focus")
                        },
                        focusout: function(b) {
                            a(b.currentTarget).removeClass("ui-state-focus")
                        }
                    })
                },
                _trigger: function(b, c, d) {
                    var e, f, g = this.options[b];
                    if (d = d || {},
                    c = a.Event(c),
                    c.type = (b === this.widgetEventPrefix ? b : this.widgetEventPrefix + b).toLowerCase(),
                    c.target = this.element[0],
                    f = c.originalEvent)
                        for (e in f)
                            e in c || (c[e] = f[e]);
                    return this.element.trigger(c, d),
                    !(a.isFunction(g) && g.apply(this.element[0], [c].concat(d)) === !1 || c.isDefaultPrevented())
                }
            },
            a.each({
                show: "fadeIn",
                hide: "fadeOut"
            }, function(b, c) {
                a.Widget.prototype["_" + b] = function(d, e, f) {
                    "string" == typeof e && (e = {
                        effect: e
                    });
                    var g, h = e ? e === !0 || "number" == typeof e ? c : e.effect || c : b;
                    e = e || {},
                    "number" == typeof e && (e = {
                        duration: e
                    }),
                    g = !a.isEmptyObject(e),
                    e.complete = f,
                    e.delay && d.delay(e.delay),
                    g && a.effects && a.effects.effect[h] ? d[b](e) : h !== b && d[h] ? d[h](e.duration, e.easing, f) : d.queue(function(c) {
                        a(this)[b](),
                        f && f.call(d[0]),
                        c()
                    })
                }
            })
        }(a),
        a
    }),
    define("lib/widgets/ad", ["lodash", "jquery", "jqueryui/widget"], function(a, b) {
        "use strict";
        b.widget("ted.ad", {
            _rendered: !1,
            $image: null,
            $text: null,
            $link: null,
            blocked: function() {
                this.element.hide()
            },
            refreshJsonAd: function() {
                if (this.options.blocked)
                    return void this.blocked();
                if (this._rendered || (this._addAdClass(),
                this.element.children().addClass("ad__prefill"),
                this._getAppreciationText().appendTo(this.element),
                this.$link = b('<a class="ad__unit" href="#" rel="nofollow" target="_blank">').appendTo(this.element),
                this.$image = b("<img>").appendTo(this.$link),
                this._rendered = !0),
                !this.options.ad)
                    return void this.element.hide();
                var a = this._getRenderDetails();
                this.$link.attr("href", a.click),
                this.$image.attr({
                    src: a.currentCreative.url,
                    width: a.dimensions.width,
                    height: a.dimensions.height
                }),
                this.element[this.options.ad.hasDisplay === !1 ? "hide" : "show"](),
                this._impress()
            },
            refreshHtmlAd: function() {
                this._addAdClass(),
                this._getAppreciationText().prependTo(this.element)
            },
            _init: function() {
                var a = String(this.options.mode);
                this._rendered = !1,
                "json" === a ? this.refreshJsonAd() : "html" === a && this.refreshHtmlAd()
            },
            _fireImpression: function(a) {
                var b = new Image;
                b.src = a
            },
            _impress: function() {
                this._fireImpression(this.options.ad.impression),
                a.forEach(this.options.ad.thirdPartyImpressions, this._fireImpression)
            },
            _getCreative: function() {
                var b = a.filter(this.options.ad.creative, function(a) {
                    return "" !== a.url
                })
                  , c = Math.max(window.devicePixelRatio || 1, 1);
                return a.reduce(b, function(a, b) {
                    return b.density <= c ? b : a || b
                }, {})
            },
            _getRenderDetails: function() {
                return a.extend({
                    currentCreative: this._getCreative()
                }, this.options.ad)
            },
            _getAppreciationText: function() {
                return this.$text = b('<div class="ad__text">TED Talks are free thanks to our partners &amp; advertisers</div>'),
                this.$text
            },
            _addAdClass: function() {
                this.element.addClass("ad")
            }
        })
    }),
    define("hbs/underscore", {}),
    function(window) {
        var JSON = window.JSON || {};
        !function() {
            "use strict";
            function f(a) {
                return a < 10 ? "0" + a : a
            }
            function quote(a) {
                return escapable.lastIndex = 0,
                escapable.test(a) ? '"' + a.replace(escapable, function(a) {
                    var b = meta[a];
                    return "string" == typeof b ? b : "\\u" + ("0000" + a.charCodeAt(0).toString(16)).slice(-4)
                }) + '"' : '"' + a + '"'
            }
            function str(a, b) {
                var c, d, e, f, g, h = gap, i = b[a];
                switch (i && "object" == typeof i && "function" == typeof i.toJSON && (i = i.toJSON(a)),
                "function" == typeof rep && (i = rep.call(b, a, i)),
                typeof i) {
                case "string":
                    return quote(i);
                case "number":
                    return isFinite(i) ? String(i) : "null";
                case "boolean":
                case "null":
                    return String(i);
                case "object":
                    if (!i)
                        return "null";
                    if (gap += indent,
                    g = [],
                    "[object Array]" === Object.prototype.toString.apply(i)) {
                        for (f = i.length,
                        c = 0; c < f; c += 1)
                            g[c] = str(c, i) || "null";
                        return e = 0 === g.length ? "[]" : gap ? "[\n" + gap + g.join(",\n" + gap) + "\n" + h + "]" : "[" + g.join(",") + "]",
                        gap = h,
                        e
                    }
                    if (rep && "object" == typeof rep)
                        for (f = rep.length,
                        c = 0; c < f; c += 1)
                            "string" == typeof rep[c] && (d = rep[c],
                            e = str(d, i),
                            e && g.push(quote(d) + (gap ? ": " : ":") + e));
                    else
                        for (d in i)
                            Object.prototype.hasOwnProperty.call(i, d) && (e = str(d, i),
                            e && g.push(quote(d) + (gap ? ": " : ":") + e));
                    return e = 0 === g.length ? "{}" : gap ? "{\n" + gap + g.join(",\n" + gap) + "\n" + h + "}" : "{" + g.join(",") + "}",
                    gap = h,
                    e
                }
            }
            "function" != typeof Date.prototype.toJSON && (Date.prototype.toJSON = function(a) {
                return isFinite(this.valueOf()) ? this.getUTCFullYear() + "-" + f(this.getUTCMonth() + 1) + "-" + f(this.getUTCDate()) + "T" + f(this.getUTCHours()) + ":" + f(this.getUTCMinutes()) + ":" + f(this.getUTCSeconds()) + "Z" : null
            }
            ,
            String.prototype.toJSON = Number.prototype.toJSON = Boolean.prototype.toJSON = function(a) {
                return this.valueOf()
            }
            );
            var cx = /[\u0000\u00ad\u0600-\u0604\u070f\u17b4\u17b5\u200c-\u200f\u2028-\u202f\u2060-\u206f\ufeff\ufff0-\uffff]/g, escapable = /[\\\"\x00-\x1f\x7f-\x9f\u00ad\u0600-\u0604\u070f\u17b4\u17b5\u200c-\u200f\u2028-\u202f\u2060-\u206f\ufeff\ufff0-\uffff]/g, gap, indent, meta = {
                "\b": "\\b",
                "\t": "\\t",
                "\n": "\\n",
                "\f": "\\f",
                "\r": "\\r",
                '"': '\\"',
                "\\": "\\\\"
            }, rep;
            "function" != typeof JSON.stringify && (JSON.stringify = function(a, b, c) {
                var d;
                if (gap = "",
                indent = "",
                "number" == typeof c)
                    for (d = 0; d < c; d += 1)
                        indent += " ";
                else
                    "string" == typeof c && (indent = c);
                if (rep = b,
                b && "function" != typeof b && ("object" != typeof b || "number" != typeof b.length))
                    throw new Error("JSON.stringify");
                return str("", {
                    "": a
                })
            }
            ),
            "function" != typeof JSON.parse && (JSON.parse = function(text, reviver) {
                function walk(a, b) {
                    var c, d, e = a[b];
                    if (e && "object" == typeof e)
                        for (c in e)
                            Object.prototype.hasOwnProperty.call(e, c) && (d = walk(e, c),
                            void 0 !== d ? e[c] = d : delete e[c]);
                    return reviver.call(a, b, e)
                }
                var j;
                if (text = String(text),
                cx.lastIndex = 0,
                cx.test(text) && (text = text.replace(cx, function(a) {
                    return "\\u" + ("0000" + a.charCodeAt(0).toString(16)).slice(-4)
                })),
                /^[\],:{}\s]*$/.test(text.replace(/\\(?:["\\\/bfnrt]|u[0-9a-fA-F]{4})/g, "@").replace(/"[^"\\\n\r]*"|true|false|null|-?\d+(?:\.\d*)?(?:[eE][+\-]?\d+)?/g, "]").replace(/(?:^|:|,)(?:\s*\[)+/g, "")))
                    return j = eval("(" + text + ")"),
                    "function" == typeof reviver ? walk({
                        "": j
                    }, "") : j;
                throw new SyntaxError("JSON.parse")
            }
            )
        }(),
        define("hbs/json2", [], function() {
            return JSON
        })
    }
    .call(this, this),
    define("hbs", {
        load: function(a) {
            throw new Error("Dynamic load not allowed: " + a)
        }
    }),
    define("hbs!lib/templates/sponsorshipBug", ["hbs", "hbs/handlebars"], function(a, b) {
        var c = b.template({
            compiler: [6, ">= 2.0.0-beta.1"],
            main: function(a, b, c, d) {
                return '\n<a class="sponsorship-bug__link" href="#" rel="nofollow" target="_blank" style="display:block"><img src="" alt=""></a>\n'
            },
            useData: !0
        });
        return b.registerPartial("lib/templates/sponsorshipBug", c),
        c
    }),
    define("lib/widgets/sponsorshipBug", ["jquery", "hbs!lib/templates/sponsorshipBug", "lib/widgets/ad"], function(a, b) {
        "use strict";
        a.widget("ted.sponsorshipBug", a.ted.ad, {
            blocked: function() {},
            refreshHtmlAd: function() {},
            refreshJsonAd: function() {
                return this.options.blocked ? this.blocked() : (this._rendered || (this.element.children().addClass("sponsorship-bug__prefill"),
                this.element.append(b()),
                this.$image = this.element.find("img"),
                this.$link = this.element.find("a.sponsorship-bug__link"),
                this._rendered = !0),
                void this._super())
            },
            _init: function() {
                this.element.closest("div.sponsorship-bug").addClass("sponsorship-bug--active"),
                this._super()
            }
        })
    }),
    define("lib/ads", ["jquery", "lodash", "lib/utils/ted", "lib/utils/query_param", "es6!components/companion-ads/slot-spot-lot.babel", "exports", "lib/widgets/ad", "lib/widgets/sponsorshipBug"], function(a, b, c, d, e, f) {
        "use strict";
        function g(a) {
            var b = new Image;
            b.src = a
        }
        function h(b) {
            var c = String(b.type)
              , d = n[b.type];
            "master" === c ? o.deferred.resolve(b) : void 0 === d ? window.console && console.log && (console.log("Unknown ad type"),
            console.log(b)) : a(d.id)[d.widget]({
                ad: b,
                mode: "json"
            })
        }
        function i(c) {
            b.forEach(o.companionAdSlots, function(b) {
                if (b.gptSlot.setTargeting(b.key, c.target),
                b.displayed) {
                    var d = a("#" + b.containerId);
                    d.data("tedAd") ? d.ad("destroy") : d.data("sponsorshipBug") && d.sponsorshipBug("destroy"),
                    f.refreshAd(b.gptSlot)
                } else
                    f.displayAd(b.containerId);
                b.displayed = !0
            }),
            c.impression && g(c.impression)
        }
        function j(a) {
            return a.replace("{adUnit}", o.slot.adUnit)
        }
        function k(a) {
            p.done(function(b) {
                b.isMai || f.player.player("sendAds", {
                    postroll: j(a.postrollURL),
                    preroll: j(a.prerollURL)
                })
            })
        }
        function l(b) {
            var d = f.player = b;
            if (d) {
                var e = d.player("isMai")
                  , g = f.playerMode = String(d.player("mode"))
                  , j = "flash" === g
                  , l = !e && (j || "surprise_me" === c("controller"));
                if (f.setMasterDeets({
                    isMai: d.player("isMai"),
                    isGptProxy: l,
                    maiAdUnitId: d.player("maiAdUnitId")
                }),
                e)
                    d.on({
                        playerad: function(a, b) {
                            h(b.ad)
                        }
                    }),
                    o.deferred.done(i);
                else if (l) {
                    o.deferred.done(i),
                    d.on({
                        playeradblock: function() {
                            var b = n.bug;
                            a(b.id)[b.widget]({
                                blocked: !0
                            })
                        }
                    });
                    var m = !0;
                    d.on({
                        playertalk: function(a, b) {
                            var c = String(d.player("talks")[0].id)
                              , e = String(b.id);
                            m && c === e ? (m = !1,
                            "flash" === g && o.deferred.done(k)) : f.refreshMasterAd({
                                targeting: b.targeting
                            }),
                            m = !1
                        }
                    })
                }
            }
        }
        function m() {
            b.forEach(o.slot.targeting, function(a, c) {
                o.slot.gptSlot.setTargeting(c, b.isArray(a) ? a.join(",") : a)
            });
            var a = d("dfptest");
            a && o.slot.gptSlot.setTargeting("dfptest", a)
        }
        var n = {
            bug: {
                id: "#sponsorship-bug-placeholder",
                widget: "sponsorshipBug"
            },
            companion: {
                id: "#ad-unit",
                widget: "ad"
            },
            "companion-mobile": {
                id: "#ad-unit-mobile",
                widget: "ad"
            },
            devil: {
                id: "#devil-ad",
                widget: "ad"
            },
            onPage: {
                id: "#ad-unit",
                widget: "ad"
            }
        }
          , o = {
            companionAdSlots: [],
            deferred: a.Deferred(),
            slot: {
                adUnit: null,
                containerId: null,
                gptSlot: null,
                targeting: {}
            }
        };
        f._masterAd = o,
        f.player = null;
        var p = a.Deferred();
        window.googletag = window.googletag || {
            cmd: []
        },
        f.slotRenderEndedHandler = function(c) {
            if (c && c.slot && !c.isEmpty && !e.findBySlot(c.slot)) {
                var d, f = "ad", g = "tedAd", h = b.find(o.companionAdSlots, function(a) {
                    return a.gptSlot === c.slot
                }), i = h && String(h.containerId);
                "ad-unit" === i && (d = a("#ad-unit")),
                "sponsorship-bug-placeholder" === i && (d = a("#sponsorship-bug-placeholder"),
                f = "sponsorshipBug",
                g = "tedSponsorshipBug");
                var j = c.slot.getSlotElementId && c.slot.getSlotElementId();
                if (!h && j && (d = a("#" + j)),
                "master-gpt" !== i && "master-gpt" !== j && d && d.length) {
                    var k = d.data(g);
                    k || d[f]({
                        mode: "html"
                    })
                }
            }
        }
        ,
        f.displayMasterAd = function(a) {
            p.done(function(c) {
                c.isMai || (o.slot.containerId = a.containerId,
                o.slot.adUnit = c.adUnitId,
                window.googletag.cmd.push(function() {
                    o.slot.gptSlot = googletag.defineOutOfPageSlot(o.slot.adUnit, o.slot.containerId).addService(googletag.pubads()),
                    b.assign(o.slot.targeting, a.targeting),
                    m(),
                    f.displayAd(o.slot.containerId)
                }))
            })
        }
        ,
        f.refreshMasterAd = function(c) {
            o.slot.gptSlot && (o.deferred = a.Deferred(),
            o.deferred.done(i),
            "flash" === f.playerMode && o.deferred.done(k),
            o.slot.gptSlot.clearTargeting(),
            b.forEach(o.companionAdSlots, function(a) {
                a.gptSlot.clearTargeting()
            }),
            b.assign(o.slot.targeting, c.targeting),
            m(),
            f.refreshAd(o.slot.gptSlot))
        }
        ,
        f.displayAd = function(b) {
            a(function() {
                window.googletag.cmd.push(function() {
                    googletag.display(b)
                })
            })
        }
        ,
        f.refreshAd = function(a) {
            window.googletag.cmd.push(function() {
                googletag.pubads().refresh([a])
            })
        }
        ,
        f.createStandardSlot = function(a) {
            window.googletag.cmd.push(function() {
                var b = googletag.defineSlot(a.adUnitId, a.size, a.containerId).addService(googletag.pubads())
                  , c = d("dfptest");
                c && b.setTargeting("dfptest", c),
                f.displayAd(a.containerId)
            })
        }
        ,
        f.createCompanionSlot = function(a) {
            p.done(function(b) {
                b.isMai || b.isGptProxy ? window.googletag.cmd.push(function() {
                    var c = googletag.defineSlot(b.adUnitId, a.size, a.containerId).addService(googletag.pubads());
                    o.companionAdSlots.push({
                        containerId: a.containerId,
                        gptSlot: c,
                        key: a.key
                    })
                }) : f.createStandardSlot({
                    adUnitId: b.adUnitId,
                    size: a.size,
                    containerId: a.containerId
                })
            })
        }
        ;
        var q = {};
        f.setMasterDeets = function(b) {
            a.extend(q, b),
            q.hasOwnProperty("isMai") && q.hasOwnProperty("gptAdUnitId") && q.hasOwnProperty("maiAdUnitId") && p.resolve({
                isMai: q.isMai,
                isGptProxy: q.isGptProxy,
                adUnitId: q.isMai ? q.maiAdUnitId : q.gptAdUnitId
            })
        }
        ,
        f.initPlayer = l,
        f.gptAd = function(a) {
            h(a.ad)
        }
        ,
        window.googletag.cmd.push(function() {
            googletag.pubads().addEventListener("slotRenderEnded", f.slotRenderEndedHandler)
        })
    }),
    define("hbs!components/embeddable/templates/error", ["hbs", "hbs/handlebars"], function(a, b) {
        var c = b.template({
            1: function(a, b, c, d) {
                return "        Sorry:\n        we can't play video on this browser.\n        Please make sure it's up to date\n        and that Flash 11.1 or higher is installed.\n"
            },
            3: function(a, b, c, d) {
                return "        We're sorry:\n        video playback cannot be initialized\n        on your browser at this time.\n"
            },
            5: function(a, b, c, d) {
                return "        We're sorry:\n        video playback has been interrupted.\n        You may need to refresh the page\n        to resume.\n"
            },
            compiler: [6, ">= 2.0.0-beta.1"],
            main: function(a, b, c, d) {
                var e, f;
                return '\n<div class="Embeddable__error vc inverse">\n  <div class="vc__wrap">\n    <div class="Embeddable__error__message">\n' + (null != (e = b.if.call(a, null != a ? a.isClient : a, {
                    name: "if",
                    hash: {},
                    fn: this.program(1, d, 0),
                    inverse: this.noop,
                    data: d
                })) ? e : "") + "\n" + (null != (e = b.if.call(a, null != a ? a.isInit : a, {
                    name: "if",
                    hash: {},
                    fn: this.program(3, d, 0),
                    inverse: this.noop,
                    data: d
                })) ? e : "") + "\n" + (null != (e = b.if.call(a, null != a ? a.isFatal : a, {
                    name: "if",
                    hash: {},
                    fn: this.program(5, d, 0),
                    inverse: this.noop,
                    data: d
                })) ? e : "") + '\n      <a href="' + this.escapeExpression((f = null != (f = b.url || (null != a ? a.url : a)) ? f : b.helperMissing,
                "function" == typeof f ? f.call(a, {
                    name: "url",
                    hash: {},
                    data: d
                }) : f)) + '" target="_blank">Load this talk on ted.com</a>\n    </div>\n  </div>\n</div>\n'
            },
            useData: !0
        });
        return b.registerPartial("components/embeddable/templates/error", c),
        c
    }),
    define("components/embeddable/models/talk", ["lodash", "Backbone"], function(a, b) {
        "use strict";
        var c = b.Model.extend({
            toPlayer: function() {
                var b = this.toJSON();
                return {
                    id: b.id,
                    resources: {
                        hls: {
                            stream: b.resources.hls.stream,
                            metadata: b.resources.hls.metadata,
                            adUrl: b.resources.hls.adUrl,
                            maiTargeting: b.resources.hls.maiTargeting || {}
                        },
                        h264: [{
                            file: b.resources.h264[0].file
                        }]
                    },
                    duration: b.duration,
                    introDuration: b.introDuration,
                    adDuration: b.adDuration,
                    postAdDuration: b.postAdDuration,
                    nativeLanguage: b.nativeLanguage,
                    languages: a.map(b.languages, function(a) {
                        return {
                            langaugeName: a.languageName,
                            languageCode: a.languageCode,
                            isRtl: a.isRtl
                        }
                    })
                }
            }
        });
        return c
    }),
    define("components/embeddable/collections/talks", ["lodash", "Backbone", "components/embeddable/models/talk"], function(a, b, c) {
        "use strict";
        var d = b.Collection.extend({
            model: c,
            before: function(a) {
                return this.at(this.indexOf(a) - 1)
            },
            after: function(a) {
                return this.at(this.indexOf(a) + 1)
            },
            toPlayer: function() {
                return this.map(function(a) {
                    return a.toPlayer()
                })
            }
        });
        return d
    }),
    define("lib/views/mixins/cached-find", ["exports"], function(a) {
        "use strict";
        a._findEls = null,
        a.find = function(a) {
            if (this._findEls || (this._findEls = {}),
            this._findEls[a])
                return this._findEls[a];
            var b = this.$el.find(a);
            return b.length && (this._findEls[a] = b),
            b
        }
    }),
    define("components/embeddable/views/base", ["lodash", "Backbone", "lib/views/mixins/cached-find"], function(a, b, c) {
        "use strict";
        var d = b.View.extend({
            propsDefaults: null,
            stateDefaults: null,
            propsEvents: null,
            stateEvents: null,
            adoptView: function(b) {
                a.extend(this.propsDefaults, b.prototype.propsDefaults),
                a.extend(this.stateDefaults, b.prototype.stateDefaults),
                a.extend(this.propsEvents, b.prototype.propsEvents),
                a.extend(this.stateEvents, b.prototype.stateEvents)
            },
            initialize: function() {
                this.initializeState(),
                this.initializeProps()
            },
            initializeProps: function() {
                this.props = this._eventModel(this.propsDefaults, this.propsEvents)
            },
            initializeState: function() {
                this.state = this._eventModel(this.stateDefaults, this.stateEvents)
            },
            toggleClass: function(a, b, c) {
                this.find(a)[c ? "addClass" : "removeClass"](b)
            },
            _eventModel: function(c, d) {
                if (!c)
                    return !1;
                var e = new b.Model(c)
                  , f = this;
                return a.forOwn(d, function(b, c) {
                    a.isString(b) && (b = f[b]);
                    var d = c.split(":");
                    "on" === d[0] && (c = "change:" + d[1],
                    b = a.wrap(b, function(a, b, c) {
                        c && a.call(f)
                    })),
                    f.listenTo(e, c, b)
                }),
                e
            }
        });
        return a.extend(d.prototype, c),
        d
    }),
    define("components/embeddable/utils/toggle-class", [], function() {
        "use strict";
        return function(a, b) {
            return function(c, d) {
                this.toggleClass(a, b, d)
            }
        }
    }),
    define("components/embeddable/utils/untoggle-class", [], function() {
        "use strict";
        return function(a, b) {
            return function(c, d) {
                this.toggleClass(a, b, !d)
            }
        }
    }),
    define("lib/utils/formatDuration", [], function() {
        "use strict";
        function a(a) {
            return (a > 9 ? "" : "0") + a
        }
        return function(b) {
            var c = b % 60 | 0
              , d = b / 3600 | 0
              , e = b % 3600 / 60 | 0;
            return (d ? d + ":" + a(e) : e) + ":" + a(c)
        }
    }),
    define("lib/utils/extract-handlebars-helper-arguments", [], function() {
        "use strict";
        return function(a) {
            var b = Array.prototype.slice.call(a, 0)
              , c = b[b.length - 1];
            return c && "object" == typeof c && c.data && c.hash && c.name && b.pop(),
            b
        }
    }),
    define("lib/utils/iconHtml", ["Handlebars"], function(a) {
        "use strict";
        function b(a, b, d) {
            return a = c(a),
            b = c(b),
            d = c(d),
            '<i class="icon icon_' + a + " " + (d || "") + '">' + (b ? "<span class=screen-reader-text>" + b + "</span>" : "") + "</i>"
        }
        var c = a.Utils.escapeExpression;
        return b
    }),
    define("lib/templates/helpers/icon", ["Handlebars", "lib/utils/extract-handlebars-helper-arguments", "lib/utils/iconHtml"], function(a, b, c) {
        "use strict";
        function d() {
            return new a.SafeString(c.apply(window, b(arguments)))
        }
        return a.registerHelper("icon", d),
        d
    }),
    define("hbs!components/embeddable/templates/controls", ["hbs", "hbs/handlebars", "lib/templates/helpers/icon"], function(a, b) {
        var c = b.template({
            compiler: [6, ">= 2.0.0-beta.1"],
            main: function(a, b, c, d) {
                return '\n<div class="Embeddable__controls__bar">\n  <a class="Embeddable__button Embeddable__controls__unskip" href="#">\n    ' + this.escapeExpression((b.icon || a && a.icon || b.helperMissing).call(a, "control-unskip", "Previous talk", "Embeddable__button__icon", {
                    name: "icon",
                    hash: {},
                    data: d
                })) + '\n  </a>\n\n  <a class="Embeddable__button Embeddable__controls__play" href="#">\n    ' + this.escapeExpression((b.icon || a && a.icon || b.helperMissing).call(a, "control-play", "Play", "Embeddable__button__icon", {
                    name: "icon",
                    hash: {},
                    data: d
                })) + '\n  </a>\n\n  <a class="Embeddable__button Embeddable__controls__pause" href="#">\n    ' + this.escapeExpression((b.icon || a && a.icon || b.helperMissing).call(a, "control-pause", "Pause", "Embeddable__button__icon", {
                    name: "icon",
                    hash: {},
                    data: d
                })) + '\n  </a>\n\n  <a class="Embeddable__button Embeddable__controls__skip" href="#">\n    ' + this.escapeExpression((b.icon || a && a.icon || b.helperMissing).call(a, "control-skip", "Next talk", "Embeddable__button__icon", {
                    name: "icon",
                    hash: {},
                    data: d
                })) + '\n  </a>\n\n  <a class="Embeddable__button Embeddable__controls__volume" href="#">\n    ' + this.escapeExpression((b.icon || a && a.icon || b.helperMissing).call(a, "control-volume", "Volume", "Embeddable__button__icon", {
                    name: "icon",
                    hash: {},
                    data: d
                })) + '\n  </a>\n\n  <span class="Embeddable__controls__timing">\n    <span class="Embeddable__controls__current">0:00</span>/<span class="Embeddable__controls__duration">0:00</span>\n  </span>\n\n  <div class="Embeddable__controls__secondary">\n    <a class="Embeddable__button Embeddable__controls__subtitles" href="#">\n      ' + this.escapeExpression((b.icon || a && a.icon || b.helperMissing).call(a, "control-subtitles", "Subtitles", "Embeddable__button__icon", {
                    name: "icon",
                    hash: {},
                    data: d
                })) + '\n    </a>\n\n    <a class="Embeddable__button Embeddable__controls__playlist" href="#">\n      ' + this.escapeExpression((b.icon || a && a.icon || b.helperMissing).call(a, "control-playlist", "Show talks", "Embeddable__button__icon", {
                    name: "icon",
                    hash: {},
                    data: d
                })) + '\n    </a>\n\n    <a class="Embeddable__button Embeddable__controls__fullscreen" href="#">\n      ' + this.escapeExpression((b.icon || a && a.icon || b.helperMissing).call(a, "control-fullscreen", "Full screen", "Embeddable__button__icon", {
                    name: "icon",
                    hash: {},
                    data: d
                })) + '\n    </a>\n\n    <a class="Embeddable__button Embeddable__controls__outbound" href="htps://www.ted.com/" target="_blank">\n      ' + this.escapeExpression((b.icon || a && a.icon || b.helperMissing).call(a, "outbound", "Open on TED.com", "Embeddable__button__icon", {
                    name: "icon",
                    hash: {},
                    data: d
                })) + '\n    </a>\n\n    <a class="Embeddable__button Embeddable__controls__smallscreen" href="#">\n      ' + this.escapeExpression((b.icon || a && a.icon || b.helperMissing).call(a, "control-fullscreen-exit", "Exit full screen", "Embeddable__button__icon", {
                    name: "icon",
                    hash: {},
                    data: d
                })) + "\n    </a>\n  </div>\n</div>\n"
            },
            useData: !0
        });
        return b.registerPartial("components/embeddable/templates/controls", c),
        c
    }),
    define("components/embeddable/views/controls", ["./base", "components/embeddable/utils/toggle-class", "components/embeddable/utils/untoggle-class", "lib/utils/formatDuration", "hbs!components/embeddable/templates/controls"], function(a, b, c, d, e) {
        "use strict";
        var f = a.extend({
            className: "Embeddable__controls",
            propsDefaults: {
                unskipEnabled: !1,
                playEnabled: !1,
                pauseEnabled: !1,
                skipEnabled: !1,
                volumeActive: !1,
                volumeEnabled: !1,
                volumeMuted: !1,
                timingEnabled: !0,
                subtitlesEnabled: !1,
                subtitlesActive: !1,
                subtitlesEffective: !1,
                playlistEnabled: !1,
                playlistActive: !1,
                fullscreenEnabled: !1,
                fullscreen: !1,
                url: "https://www.ted.com/"
            },
            propsEvents: {
                "change:unskipEnabled": "renderUnskip",
                "change:playEnabled": "renderPlay",
                "change:pauseEnabled": "renderPause",
                "change:skipEnabled": "renderSkip",
                "change:volumeEnabled": "renderVolume",
                "change:volumeMuted": "renderVolume",
                "change:volumeActive": b("a.Embeddable__controls__volume", "Embeddable__button--active"),
                "change:timingEnabled": c("span.Embeddable__controls__timing", "Embeddable__controls__timing--inapplicable"),
                "change:subtitlesEnabled": "renderSubtitles",
                "change:subtitlesActive": b("a.Embeddable__controls__subtitles", "Embeddable__button--active"),
                "change:subtitlesEffective": b("a.Embeddable__controls__subtitles", "Embeddable__button--effective"),
                "change:playlistActive": b("a.Embeddable__controls__playlist", "Embeddable__button--active"),
                "change:playlistEnabled": "renderPlaylist",
                "change:fullscreenEnabled": "renderFullscreen",
                "change:fullscreen": "renderFullscreen",
                "change:url": "renderUrl"
            },
            render: function() {
                return this.$el.html(e()),
                this.renderUnskip(),
                this.renderPlay(),
                this.renderPause(),
                this.renderSkip(),
                this.renderVolume(),
                this.renderSubtitles(),
                this.renderPlaylist(),
                this.renderFullscreen(),
                this.renderUrl(),
                this
            },
            renderCurrent: function(a) {
                this.find("span.Embeddable__controls__current").text(d(a))
            },
            renderDuration: function(a) {
                this.find("span.Embeddable__controls__duration").text(d(a))
            },
            renderUnskip: c("a.Embeddable__controls__unskip", "Embeddable__button--disabled"),
            renderPlay: c("a.Embeddable__controls__play", "Embeddable__button--inapplicable"),
            renderPause: c("a.Embeddable__controls__pause", "Embeddable__button--inapplicable"),
            renderSkip: c("a.Embeddable__controls__skip", "Embeddable__button--disabled"),
            renderSubtitles: c("a.Embeddable__controls__subtitles", "Embeddable__button--inapplicable"),
            renderPlaylist: c("a.Embeddable__controls__skip,a.Embeddable__controls__unskip,a.Embeddable__controls__playlist", "Embeddable__button--inapplicable"),
            renderVolume: function() {
                var a = this.props.get("volumeEnabled")
                  , b = this.props.get("volumeMuted");
                this.find("a.Embeddable__controls__volume")[a ? "removeClass" : "addClass"]("Embeddable__button--inapplicable")[b ? "addClass" : "removeClass"]("Embeddable__button--effective")
            },
            renderUrl: function() {
                var a = this.props.get("url") || this.propsDefaults.url;
                this.find("a.Embeddable__controls__outbound").attr("href", a)
            },
            renderFullscreen: function() {
                var a = this.props.get("fullscreen")
                  , b = this.props.get("fullscreenEnabled");
                this.$el[b && a ? "addClass" : "removeClass"]("Embeddable__controls--fullscreen"),
                this.find("a.Embeddable__controls__fullscreen")[!b || a ? "addClass" : "removeClass"]("Embeddable__button--inapplicable"),
                this.find("a.Embeddable__controls__smallscreen")[b && a ? "removeClass" : "addClass"]("Embeddable__button--inapplicable"),
                this.find("a.Embeddable__controls__outbound")[b ? "addClass" : "removeClass"]("Embeddable__button--inapplicable");
            }
        });
        return f
    }),
    define("components/embeddable/views/play-button", ["./base"], function(a) {
        "use strict";
        var b = a.extend({
            className: "Embeddable__play-button g-button-play",
            propsDefaults: {
                enabled: !1,
                visible: !1
            },
            propsEvents: {
                "change:enabled": function(a, b) {
                    this.$el[b ? "addClass" : "removeClass"]("Embeddable__play-button--enabled")
                },
                "change:visible": function(a, b) {
                    this.$el[b ? "addClass" : "removeClass"]("Embeddable__play-button--visible")
                }
            }
        });
        return b
    }),
    define("lib/utils/applyAll", ["jquery"], function(a) {
        "use strict";
        function b(c, d, e) {
            var f, g;
            for (f = 0,
            g = d.length; f < g; f++)
                a.isArray(d[f]) ? b(c, d[f], e) : d[f].apply(c, e)
        }
        return b
    }),
    define("lib/utils/throwError", [], function() {
        "use strict";
        return function(a) {
            throw new Error("Error in TED: " + a)
        }
    }),
    define("lib/pubSub", ["jquery", "lib/utils/applyAll", "lib/utils/throwError"], function(a, b, c) {
        "use strict";
        function d(a) {
            var d = {
                publish: a.fire,
                subscribe: a.add,
                unsubscribe: a.remove
            }
              , e = null;
            a.add(function(a) {
                e = a
            }),
            d.read = function() {
                return e
            }
            ;
            var f;
            return d.publishUnique = function() {
                if (!window.JSON)
                    return c("JSON object not available. You may need to shim it on this client."),
                    !1;
                var b = Array.prototype.slice.call(arguments, 0)
                  , d = JSON.stringify(b);
                d !== f && (a.fire.apply(a, b),
                f = d)
            }
            ,
            d.once = function() {
                function c() {
                    b(a, d, arguments),
                    a.remove(c)
                }
                var d = arguments;
                return a.add(c)
            }
            ,
            d.future = function() {
                function c() {
                    f && b(a, e, arguments)
                }
                var d, e = arguments, f = !1;
                return d = a.add(c),
                f = !0,
                d
            }
            ,
            d
        }
        function e(b) {
            var c, e = b && f[b];
            return e || (c = a.Callbacks("memory"),
            e = d(c),
            b && (f[b] = e)),
            e
        }
        var f = {};
        return e._reset = function() {
            f = {}
        }
        ,
        e
    }),
    define("lib/resize", ["jquery", "lodash", "lib/pubSub"], function(a, b, c) {
        "use strict";
        function d(a) {
            for (var b, d = m; d--; )
                !b && a >= l[d].at && (b = l[d].its);
            c("sizeGroup").publishUnique(b)
        }
        function e() {
            var a = 0
              , b = k;
            if (f = window.innerHeight,
            g = window.innerWidth || document.documentElement.clientWidth,
            j)
                a = i;
            else
                for (; b--; )
                    !a && g >= h[b] && (a = h[b]);
            c("breakpoint").publishUnique(a),
            c("height").publishUnique(f),
            c("width").publishUnique(g)
        }
        var f, g, h = [320, 480, 600, 768, 1024, 1200], i = 1024, j = a("html").is(".oldie"), k = h.length, l = [{
            at: 0,
            its: "oh"
        }, {
            at: 480,
            its: "xs"
        }, {
            at: 768,
            its: "sm"
        }, {
            at: 1024,
            its: "lg"
        }], m = l.length;
        return a(window).on("resize", b.throttle(e, 100)),
        e(),
        c("breakpoint").subscribe(d),
        c
    }),
    define("components/embeddable/views/expandable", ["lodash", "./base", "lib/pubSub", "lib/resize"], function(a, b, c) {
        "use strict";
        var d = b.extend({
            className: "Embeddable__expandable",
            propsDefaults: {
                open: !1
            },
            propsEvents: {
                "change:open": function(a, b) {
                    this[b ? "open" : "close"]()
                }
            },
            open: function() {
                this._setCoords()
            },
            close: function() {
                this.$el.css("top", "-100%")
            },
            anchorTo: function(a) {
                this.$anchor = a,
                this._setCoords()
            },
            _setCoords: function() {
                var b = this.find("div.Embeddable__expandable__content");
                if (b.length && this.$anchor && this.props.get("open")) {
                    this._settedCoordsOnce || (this._setCoordsBound = a.bind(this._setCoords, this),
                    c("height").future(this._setCoordsBound),
                    c("width").future(this._setCoordsBound),
                    this._settedCoordsOnce = !0);
                    var d = {}
                      , e = this.$anchor.offset()
                      , f = e.left
                      , g = e.top
                      , h = b.outerHeight()
                      , i = g - h;
                    i < 0 ? (d.top = 0,
                    d.height = g + "px") : (d.top = i,
                    d.height = "auto");
                    var j = b.outerWidth()
                      , k = c("width").read();
                    k - f - j < 0 ? (d.left = "initial",
                    d.right = 0) : (d.left = f,
                    d.right = "initial"),
                    this.$el.css(d)
                }
            }
        });
        return d
    }),
    define("lib/templates/helpers/formatDuration", ["Handlebars", "lib/utils/formatDuration"], function(a, b) {
        "use strict";
        return a.registerHelper("formatDuration", b),
        b
    }),
    define("hbs!lib/templates/thumbHelperPartial", ["hbs", "hbs/handlebars", "lib/templates/helpers/formatDuration"], function(a, b) {
        var c = b.template({
            1: function(a, b, c, d) {
                return '    <span class="thumb__duration">\n      ' + this.escapeExpression((b.formatDuration || a && a.formatDuration || b.helperMissing).call(a, null != a ? a.playDuration : a, {
                    name: "formatDuration",
                    hash: {},
                    data: d
                })) + "\n    </span>\n"
            },
            compiler: [6, ">= 2.0.0-beta.1"],
            main: function(a, b, c, d) {
                var e, f;
                return '\n<span class="thumb thumb--' + this.escapeExpression((f = null != (f = b.ratio || (null != a ? a.ratio : a)) ? f : b.helperMissing,
                "function" == typeof f ? f.call(a, {
                    name: "ratio",
                    hash: {},
                    data: d
                }) : f)) + " " + this.escapeExpression((f = null != (f = b.cropClass || (null != a ? a.cropClass : a)) ? f : b.helperMissing,
                "function" == typeof f ? f.call(a, {
                    name: "cropClass",
                    hash: {},
                    data: d
                }) : f)) + '">\n  <span class="thumb__sizer"><span class="thumb__tugger"><img src="' + this.escapeExpression((f = null != (f = b.src || (null != a ? a.src : a)) ? f : b.helperMissing,
                "function" == typeof f ? f.call(a, {
                    name: "src",
                    hash: {},
                    data: d
                }) : f)) + '" class="thumb__image" alt=""><span class="thumb__aligner"></span></span></span>\n\n' + (null != (e = b.if.call(a, null != a ? a.playDuration : a, {
                    name: "if",
                    hash: {},
                    fn: this.program(1, d, 0),
                    inverse: this.noop,
                    data: d
                })) ? e : "") + "</span>\n"
            },
            useData: !0
        });
        return b.registerPartial("lib/templates/thumbHelperPartial", c),
        c
    }),
    define("lib/templates/helpers/thumb", ["Handlebars", "hbs!lib/templates/thumbHelperPartial"], function(a, b) {
        "use strict";
        function c(c, d, e) {
            var f = !!(e && e > 0) && e;
            return d = d || "video",
            new a.SafeString(b({
                cropClass: "video" === d ? "thumb--crop-top" : "",
                src: c,
                ratio: d,
                playDuration: f,
                playIcon: !f
            }))
        }
        return a.registerHelper("thumb", c),
        c
    }),
    define("hbs!components/embeddable/templates/playlist", ["hbs", "hbs/handlebars", "lib/templates/helpers/thumb"], function(a, b) {
        var c = b.template({
            1: function(a, b, c, d) {
                var e;
                return '    <a class="undec Embeddable__playlist__talk" href="' + this.escapeExpression((e = null != (e = b.canonical || (null != a ? a.canonical : a)) ? e : b.helperMissing,
                "function" == typeof e ? e.call(a, {
                    name: "canonical",
                    hash: {},
                    data: d
                }) : e)) + '" data-id="' + this.escapeExpression((e = null != (e = b.id || (null != a ? a.id : a)) ? e : b.helperMissing,
                "function" == typeof e ? e.call(a, {
                    name: "id",
                    hash: {},
                    data: d
                }) : e)) + '">\n      <div class="media">\n        <div class="Embeddable__playlist__talk__image media__image media__image--thumb">\n          ' + this.escapeExpression((b.thumb || a && a.thumb || b.helperMissing).call(a, null != a ? a.thumb : a, null, null != a ? a.duration : a, {
                    name: "thumb",
                    hash: {},
                    data: d
                })) + '\n        </div>\n\n        <div class="media__message">\n          <h4 class="Embeddable__playlist__talk__title">\n            ' + this.escapeExpression(this.lambda(null != a ? a.speaker : a, a)) + ":\n            " + this.escapeExpression(this.lambda(null != a ? a.title : a, a)) + "\n          </h4>\n        </div>\n      </div>\n    </a>\n"
            },
            compiler: [6, ">= 2.0.0-beta.1"],
            main: function(a, b, c, d) {
                var e;
                return '\n<div class="Embeddable__expandable__content Embeddable__playlist__bar">\n' + (null != (e = b.each.call(a, null != a ? a.talks : a, {
                    name: "each",
                    hash: {},
                    fn: this.program(1, d, 0),
                    inverse: this.noop,
                    data: d
                })) ? e : "") + "</div>\n"
            },
            useData: !0
        });
        return b.registerPartial("components/embeddable/templates/playlist", c),
        c
    }),
    define("components/embeddable/views/playlist", ["./expandable", "hbs!components/embeddable/templates/playlist"], function(a, b) {
        "use strict";
        var c = a.extend({
            className: "Embeddable__expandable Embeddable__playlist",
            initialize: function(a) {
                this.talks = a.talks,
                this.initializeState(),
                this.initializeProps()
            },
            render: function() {
                return this.$el.html(b({
                    talks: this.talks.toJSON()
                })),
                this
            }
        });
        return c
    }),
    define("hbs!components/embeddable/templates/subtitles", ["hbs", "hbs/handlebars"], function(a, b) {
        var c = b.template({
            1: function(a, b, c, d) {
                var e;
                return '      <li class="Embeddable__subtitles__item">\n        <a class="checkable Embeddable__subtitles__language" href="#" data-code="' + this.escapeExpression((e = null != (e = b.languageCode || (null != a ? a.languageCode : a)) ? e : b.helperMissing,
                "function" == typeof e ? e.call(a, {
                    name: "languageCode",
                    hash: {},
                    data: d
                }) : e)) + '">\n          <span class="checkable__label">\n            ' + this.escapeExpression((e = null != (e = b.languageName || (null != a ? a.languageName : a)) ? e : b.helperMissing,
                "function" == typeof e ? e.call(a, {
                    name: "languageName",
                    hash: {},
                    data: d
                }) : e)) + "\n          </span>\n        </a>\n      </li>\n"
            },
            compiler: [6, ">= 2.0.0-beta.1"],
            main: function(a, b, c, d) {
                var e;
                return '\n<div class="Embeddable__expandable__content">\n  <ul class="sl">\n    <li class="Embeddable__subtitles__item">\n      <a class="checkable Embeddable__subtitles__language" href="#">\n        <span class="checkable__label">\n          Turn subtitles off\n        </span>\n      </a>\n    </li>\n\n' + (null != (e = b.each.call(a, null != a ? a.languages : a, {
                    name: "each",
                    hash: {},
                    fn: this.program(1, d, 0),
                    inverse: this.noop,
                    data: d
                })) ? e : "") + "  </ul>\n</div>\n"
            },
            useData: !0
        });
        return b.registerPartial("components/embeddable/templates/subtitles", c),
        c
    }),
    define("components/embeddable/views/subtitles", ["./expandable", "hbs!components/embeddable/templates/subtitles"], function(a, b) {
        "use strict";
        var c = a.extend({
            className: "Embeddable__expandable Embeddable__subtitles",
            propsDefaults: {
                activeSubtitle: null,
                languages: []
            },
            propsEvents: {
                "change:activeSubtitle": "renderActiveSubtitle",
                "change:languages": "render"
            },
            initialize: function() {
                this.adoptView(a),
                this.initializeProps(),
                this.initializeState()
            },
            render: function() {
                var a = this.props.get("languages");
                return a && a.length && (this.$el.html(b({
                    languages: a
                })),
                this.renderActiveSubtitle()),
                this
            },
            renderActiveSubtitle: function() {
                var a = this.props.get("activeSubtitle")
                  , b = "Embeddable__subtitles__language--active checkable--checked"
                  , c = this.find("a.Embeddable__subtitles__language");
                c.removeClass(b),
                a && c.filter("[data-code=" + a + "]").addClass(b)
            }
        });
        return c
    }),
    define("hbs!components/embeddable/templates/volume", ["hbs", "hbs/handlebars", "lib/templates/helpers/icon"], function(a, b) {
        var c = b.template({
            compiler: [6, ">= 2.0.0-beta.1"],
            main: function(a, b, c, d) {
                return '\n<div class="Embeddable__expandable__content Embeddable__volume__inner">\n  <div class="Embeddable__volume__meter"><div class="Embeddable__volume__meter__level"></div><div class="Embeddable__volume__slider"></div></div>\n\n  <a class="Embeddable__volume__unmute Embeddable__button Embeddable__button--effective" href="#">' + this.escapeExpression((b.icon || a && a.icon || b.helperMissing).call(a, "control-mute", "Mute", "Embeddable__button__icon", {
                    name: "icon",
                    hash: {},
                    data: d
                })) + '</a>\n  <a class="Embeddable__volume__mute Embeddable__button" href="#">' + this.escapeExpression((b.icon || a && a.icon || b.helperMissing).call(a, "control-mute", "Mute", "Embeddable__button__icon", {
                    name: "icon",
                    hash: {},
                    data: d
                })) + "</a>\n</div>\n"
            },
            useData: !0
        });
        return b.registerPartial("components/embeddable/templates/volume", c),
        c
    }),
    define("deferLink", ["jquery"], function(a) {
        "use strict";
        function b(a) {
            return function(b) {
                return c.call(this, b, a)
            }
        }
        function c(b, c) {
            function d() {
                var a = +e.data(h) - 1;
                e.data(h, a),
                a <= 0 && !e.data(j) && (e.removeData(i),
                k.location.href = l)
            }
            var e = "A" === this.nodeName ? a(this) : a(b.target).closest("a")
              , l = e.attr("href")
              , m = e.attr("target")
              , n = e.length && l && 1 === b.which && !b.metaKey && !b.shiftKey
              , o = c;
            if (a.isFunction(c) && (o = c.call(this, b),
            o === !1))
                return !1;
            n && b.isDefaultPrevented() && !e.data(h) && (n = !1),
            n && m && "_self" !== m && (n = !1),
            n && g && e.is("[download]") && (n = !1),
            n && e.hasClass(f) && (n = !1);
            var p = +(e.data(h) || 0);
            n && (e.data(h, p + 1),
            o.when ? ("resolved" === o.state() && d(),
            o.done(d)) : a.isNumeric(o) ? k.setTimeout(d, o) : (n = !1,
            e.data(h, p))),
            n && !p && (b.preventDefault(),
            e.data(i, !0))
        }
        function d(d) {
            return d.when || a.isNumeric(d) || a.isFunction(d) ? b(d) : void c.call(this, d, e)
        }
        var e = 50
          , f = "no-defer"
          , g = "download"in document.createElement("a")
          , h = "defer-link-pends"
          , i = "defer-link-preventable"
          , j = "defer-link-prevented"
          , k = window
          , l = a.Event.prototype.preventDefault;
        return a.Event.prototype.preventDefault = function() {
            var b = a(this.target);
            return b.data(i) && b.data(j, !0),
            l.apply(this, Array.prototype.slice.call(arguments))
        }
        ,
        d
    }),
    define("lib/browserDetect", ["exports"], function(a) {
        "use strict";
        function b(a) {
            for (var b = 0; b < a.length; b++) {
                var c = a[b].string
                  , e = a[b].prop;
                if (d = a[b].versionSearch || a[b].identity,
                c) {
                    if (c.indexOf(a[b].subString) !== -1)
                        return a[b].identity
                } else if (e)
                    return a[b].identity
            }
        }
        function c(a) {
            var b = a.indexOf(d);
            if (b !== -1)
                return parseFloat(a.substring(b + d.length + 1))
        }
        var d, e = window.navigator, f = [{
            string: e.userAgent,
            subString: "Chrome",
            identity: "Chrome"
        }, {
            string: e.vendor,
            subString: "Apple",
            identity: "Safari",
            versionSearch: "Version"
        }, {
            prop: window.opera,
            identity: "Opera"
        }, {
            string: e.userAgent,
            subString: "Firefox",
            identity: "Firefox"
        }, {
            string: e.userAgent,
            subString: "MSIE",
            identity: "Explorer",
            versionSearch: "MSIE"
        }, {
            string: e.userAgent,
            subString: "Gecko",
            identity: "Mozilla",
            versionSearch: "rv"
        }];
        a.browser = b(f) || "Unknown Browser",
        a.version = c(window.navigator.userAgent) || c(window.navigator.appVersion) || "Unknown Version"
    }),
    function(a) {
        "use strict";
        var b = function(a, c, d) {
            return 1 === arguments.length ? b.get(a) : b.set(a, c, d)
        };
        b._document = document,
        b._navigator = navigator,
        b.defaults = {
            path: "/"
        },
        b.get = function(a) {
            return b._cachedDocumentCookie !== b._document.cookie && b._renewCache(),
            b._cache[a]
        }
        ,
        b.set = function(c, d, e) {
            return e = b._getExtendedOptions(e),
            e.expires = b._getExpiresDate(d === a ? -1 : e.expires),
            b._document.cookie = b._generateCookieString(c, d, e),
            b
        }
        ,
        b.expire = function(c, d) {
            return b.set(c, a, d)
        }
        ,
        b._getExtendedOptions = function(c) {
            return {
                path: c && c.path || b.defaults.path,
                domain: c && c.domain || b.defaults.domain,
                expires: c && c.expires || b.defaults.expires,
                secure: c && c.secure !== a ? c.secure : b.defaults.secure
            }
        }
        ,
        b._isValidDate = function(a) {
            return "[object Date]" === Object.prototype.toString.call(a) && !isNaN(a.getTime())
        }
        ,
        b._getExpiresDate = function(a, c) {
            switch (c = c || new Date,
            typeof a) {
            case "number":
                a = new Date(c.getTime() + 1e3 * a);
                break;
            case "string":
                a = new Date(a)
            }
            if (a && !b._isValidDate(a))
                throw new Error("`expires` parameter cannot be converted to a valid Date instance");
            return a
        }
        ,
        b._generateCookieString = function(a, b, c) {
            a = encodeURIComponent(a),
            b = (b + "").replace(/[^!#$&-+\--:<-\[\]-~]/g, encodeURIComponent),
            c = c || {};
            var d = a + "=" + b;
            return d += c.path ? ";path=" + c.path : "",
            d += c.domain ? ";domain=" + c.domain : "",
            d += c.expires ? ";expires=" + c.expires.toGMTString() : "",
            d += c.secure ? ";secure" : ""
        }
        ,
        b._getCookieObjectFromString = function(c) {
            for (var d = {}, e = c ? c.split("; ") : [], f = 0; f < e.length; f++) {
                var g = b._getKeyValuePairFromCookieString(e[f]);
                d[g.key] === a && (d[g.key] = g.value)
            }
            return d
        }
        ,
        b._getKeyValuePairFromCookieString = function(a) {
            var b = a.indexOf("=");
            return b = b < 0 ? a.length : b,
            {
                key: decodeURIComponent(a.substr(0, b)),
                value: decodeURIComponent(a.substr(b + 1))
            }
        }
        ,
        b._renewCache = function() {
            b._cache = b._getCookieObjectFromString(b._document.cookie),
            b._cachedDocumentCookie = b._document.cookie
        }
        ,
        b._areEnabled = function() {
            return b._navigator.cookieEnabled || "1" === b.set("cookies.js", 1).get("cookies.js")
        }
        ,
        b.enabled = b._areEnabled(),
        "function" == typeof define && define.amd ? define("Cookies", [], function() {
            return b
        }) : "undefined" != typeof exports ? ("undefined" != typeof module && module.exports && (exports = module.exports = b),
        exports.Cookies = b) : window.Cookies = b
    }(),
    define("lib/currentUserId", ["Cookies"], function(a) {
        "use strict";
        var b = "_ted_user_id";
        return {
            get: function() {
                return a.get(b)
            }
        }
    }),
    define("lib/errorCollector", ["jquery", "lodash", "lib/browserDetect", "lib/currentUserId", "lib/utils/ted", "exports"], function(a, b, c, d, e, f) {
        "use strict";
        var g = window && window.console;
        f.postUnthrottled = function(b) {
            a.post("https://error-collector.ted.com/", {
                message: b
            })
        }
        ,
        f.post = b.throttle(f.postUnthrottled, 5e3),
        f.log = function(b, h) {
            if (h = a.extend({
                console: !0,
                error: !0,
                message: b,
                context: "js",
                uri: window.location.href,
                throttled: !0,
                client_name: c.browser,
                client_version: c.version,
                elapsed_seconds: Math.floor((+new Date - e("startTime")) / 1e3),
                profile_id: d.get() || "N/A",
                user_agent: window.navigator ? window.navigator.userAgent : "Unknown User Agent"
            }, h || {}),
            f[h.throttled ? "post" : "postUnthrottled"](h),
            h.console && g && g.log) {
                var i = h.error ? "#FCF1CC" : "#999999";
                g.log("%c" + b, "color:" + i)
            }
        }
    }),
    define("lib/ga-cookie", ["Cookies"], function(a) {
        "use strict";
        var b = "_ga"
          , c = {};
        return c.get = function() {
            return a.get(b)
        }
        ,
        c.getClientId = function() {
            var a = String(c.get())
              , b = a.split(".")[2] + "." + a.split(".")[3];
            return b.indexOf("undefined") === -1 ? b : void 0
        }
        ,
        c
    }),
    define("lib/source-context", ["Cookies", "exports"], function(a, b) {
        "use strict";
        function c() {
            d = void 0
        }
        b.key = "sourceContext",
        b.get = function() {
            var a;
            if (a = b.getFromStash())
                return a;
            if (a = b.getFromCookie())
                return a;
            var c = b.getReferrer();
            if ("" === c)
                return "direct";
            var d = b.getLocation()
              , e = b.extractHost(c)
              , f = b.extractHost(d);
            return e === f ? "internal" : "external"
        }
        ,
        b.set = function(a, c) {
            var d = b.extractPath(a)
              , e = b.prepareContext(c) + "@" + d;
            d && (b.setStash(e),
            b.setCookie(e, d))
        }
        ,
        b.extractHost = function(a) {
            var b = String(a).match(/^\w+:\/\/([^\/]+)/);
            return b && b[1]
        }
        ,
        b.extractPath = function(a) {
            var b = String(a).match(/^(?:\w+:)?(?:\/\/[^\/]+)?((?:\/[^?\/#]+)+)/);
            return b && b[1]
        }
        ,
        b.getFromValue = function(a) {
            var c = String(a).match(/^([^@]+)@(.*)/);
            return !(!c || 0 !== b.extractPath(b.getLocation()).indexOf(c[2])) && c[1]
        }
        ,
        b.setCookie = function(c, d) {
            a.set(b.key, c, {
                expires: 30,
                path: d
            })
        }
        ,
        b.getCookie = function() {
            return String(a.get(b.key))
        }
        ,
        b.getFromCookie = function() {
            return b.getFromValue(b.getCookie())
        }
        ;
        var d;
        b.setStash = function(a) {
            d = a,
            window.setTimeout(c, 3e4)
        }
        ,
        b.getFromStash = function() {
            return b.getFromValue(d)
        }
        ,
        b.getReferrer = function() {
            return document && document.referrer || ""
        }
        ,
        b.getLocation = function() {
            return location && location.href || ""
        }
        ,
        b.prepareContext = function(a) {
            return String(a).replace("@", "")
        }
    }),
    define("lib/ga", ["jquery", "lodash", "deferLink", "lib/utils/ted", "lib/errorCollector", "lib/ga-cookie", "lib/currentUserId", "lib/source-context", "lib/pubSub", "lib/resize"], function(a, b, c, d, e, f, g, h, i) {
        "use strict";
        function j() {
            var b = u[u.GoogleAnalyticsObject] || a.noop
              , c = t.slice.call(arguments);
            b === u.__gaIn || 42 === b.answer ? b.apply(u, c) : v.push(c)
        }
        function k() {
            var a = t.slice.call(arguments)
              , d = this;
            return function(e) {
                if (d.apply(j, a),
                b.has(e, "originalEvent") && b.has(this, "nodeName") && "click" === e.type)
                    return c.call(this, e)
            }
        }
        function l() {
            var a, b = 0;
            i("breakpoint").subscribe(function(c) {
                j.setDimension("breakpoint", c),
                b++ && j.sendEvent("breakpoint", "change", a + "|" + c, b),
                a = c
            })
        }
        function m() {
            var a = f.getClientId();
            a && j.setDimension("gaClientId", a);
            var b = g.get();
            b && j.setDimension("tedUserId", b),
            i("auth.login").subscribe(function(a) {
                j.setDimension("tedUserId", a.id)
            })
        }
        function n(a) {
            return a || window.location && location.pathname + location.search || location.href.replace(/^[^\/]*\/\/[^\/]+/, "")
        }
        function o(a) {
            var b = a && a.get && a.get("hitType")
              , c = h.get();
            return "pageview" === b && c && j.setDimension("sourceContext", c),
            a
        }
        function p(b) {
            var c = a(this)
              , d = "ga-"
              , e = a.extend(b || {}, {
                category: c.data(d + "category"),
                action: c.data(d + "action"),
                label: c.data(d + "label")
            });
            j.sendEvent(e.category, e.action, e.label);
            var f = c.data(d + "context");
            f && j.setContext(c.attr("href"), f)
        }
        function q(a) {
            (new Image).src = "https://" + ("production" === d("env") ? "www" : "master.staging") + ".ted.com/collect?" + a.get("hitPayload")
        }
        function r(a) {
            var b = a.get("buildHitTask");
            b && a.set("buildHitTask", function(a) {
                return b(o(a))
            })
        }
        var s = !1
          , t = []
          , u = window
          , v = [];
        return b.assign(j, {
            send: b.partial(j, "send"),
            set: b.partial(j, "set"),
            sendEvent: b.partial(j, "send", "event"),
            sendSocial: b.partial(j, "send", "social"),
            sendNonInteraction: b.partialRight(b.partial(j, "send", "event"), {
                nonInteraction: 1
            })
        }, function(a, b) {
            return b.recall = k,
            b
        }),
        j.sendFlaggedVirtualPageview = function(a) {
            var b = n(a);
            j.set("page", b + (b.indexOf("?") === -1 ? "?" : "&") + "vp="),
            j.send("pageview")
        }
        ,
        j.sendVirtualPageview = function(a) {
            j.set("page", n(a)),
            j.send("pageview")
        }
        ,
        j.sendTiming = function(a, c, f, g) {
            if (b.isUndefined(f) && (f = new Date),
            f && f.constructor === Date) {
                var h = d("headReady");
                if (h && h.constructor !== Date)
                    return void e.log("GA: headReady timing is missing");
                f = +f - +h
            }
            j("send", "timing", a, c, f, g)
        }
        ,
        j.setContext = function(a, b) {
            h.set(a, b)
        }
        ,
        j.setDimension = function(a, b) {
            var c = String(a);
            c.match(/^dimension\d+$/) || (c = (d("gaDimensions") || {})[c]),
            c ? j.set(c, b) : e.log('GA: missing dimension: "' + a + '"')
        }
        ,
        u.setTimeout(function() {
            var b = u[u.GoogleAnalyticsObject];
            if (s && (b === u.__gaIn || 42 !== b.answer)) {
                try {
                    b = u[u.GoogleAnalyticsObject] = u.__gaIn,
                    t.push.apply(b.q, v),
                    b.q.splice(1, 0, ["set", "sendHitTask", q])
                } catch (a) {}
                a.ajax({
                    cache: !0,
                    dataType: "script",
                    url: "/collect/001.js"
                })
            }
        }, 500),
        j(r),
        l(),
        m(),
        j.send("pageview"),
        a(function() {
            a(document).on("click", "a.ga-link", c(function() {
                return p.call(this, {
                    action: "click",
                    category: "site.link",
                    label: this.href
                }),
                50
            }))
        }),
        j
    }),
    define("jqueryui/mouse", ["jquery"], function(a) {
        return function(a, b) {
            var c = !1;
            a(document).mouseup(function() {
                c = !1
            }),
            a.widget("ui.mouse", {
                version: "@VERSION",
                options: {
                    cancel: "input,textarea,button,select,option",
                    distance: 1,
                    delay: 0
                },
                _mouseInit: function() {
                    var b = this;
                    this.element.bind("mousedown." + this.widgetName, function(a) {
                        return b._mouseDown(a)
                    }).bind("click." + this.widgetName, function(c) {
                        if (!0 === a.data(c.target, b.widgetName + ".preventClickEvent"))
                            return a.removeData(c.target, b.widgetName + ".preventClickEvent"),
                            c.stopImmediatePropagation(),
                            !1
                    }),
                    this.started = !1
                },
                _mouseDestroy: function() {
                    this.element.unbind("." + this.widgetName),
                    this._mouseMoveDelegate && a(document).unbind("mousemove." + this.widgetName, this._mouseMoveDelegate).unbind("mouseup." + this.widgetName, this._mouseUpDelegate)
                },
                _mouseDown: function(b) {
                    if (!c) {
                        this._mouseStarted && this._mouseUp(b),
                        this._mouseDownEvent = b;
                        var d = this
                          , e = 1 === b.which
                          , f = !("string" != typeof this.options.cancel || !b.target.nodeName) && a(b.target).closest(this.options.cancel).length;
                        return !(e && !f && this._mouseCapture(b)) || (this.mouseDelayMet = !this.options.delay,
                        this.mouseDelayMet || (this._mouseDelayTimer = setTimeout(function() {
                            d.mouseDelayMet = !0
                        }, this.options.delay)),
                        this._mouseDistanceMet(b) && this._mouseDelayMet(b) && (this._mouseStarted = this._mouseStart(b) !== !1,
                        !this._mouseStarted) ? (b.preventDefault(),
                        !0) : (!0 === a.data(b.target, this.widgetName + ".preventClickEvent") && a.removeData(b.target, this.widgetName + ".preventClickEvent"),
                        this._mouseMoveDelegate = function(a) {
                            return d._mouseMove(a)
                        }
                        ,
                        this._mouseUpDelegate = function(a) {
                            return d._mouseUp(a)
                        }
                        ,
                        a(document).bind("mousemove." + this.widgetName, this._mouseMoveDelegate).bind("mouseup." + this.widgetName, this._mouseUpDelegate),
                        b.preventDefault(),
                        c = !0,
                        !0))
                    }
                },
                _mouseMove: function(b) {
                    return a.ui.ie && (!document.documentMode || document.documentMode < 9) && !b.button ? this._mouseUp(b) : this._mouseStarted ? (this._mouseDrag(b),
                    b.preventDefault()) : (this._mouseDistanceMet(b) && this._mouseDelayMet(b) && (this._mouseStarted = this._mouseStart(this._mouseDownEvent, b) !== !1,
                    this._mouseStarted ? this._mouseDrag(b) : this._mouseUp(b)),
                    !this._mouseStarted)
                },
                _mouseUp: function(b) {
                    return a(document).unbind("mousemove." + this.widgetName, this._mouseMoveDelegate).unbind("mouseup." + this.widgetName, this._mouseUpDelegate),
                    this._mouseStarted && (this._mouseStarted = !1,
                    b.target === this._mouseDownEvent.target && a.data(b.target, this.widgetName + ".preventClickEvent", !0),
                    this._mouseStop(b)),
                    !1
                },
                _mouseDistanceMet: function(a) {
                    return Math.max(Math.abs(this._mouseDownEvent.pageX - a.pageX), Math.abs(this._mouseDownEvent.pageY - a.pageY)) >= this.options.distance
                },
                _mouseDelayMet: function() {
                    return this.mouseDelayMet
                },
                _mouseStart: function() {},
                _mouseDrag: function() {},
                _mouseStop: function() {},
                _mouseCapture: function() {
                    return !0
                }
            })
        }(a),
        a
    }),
    define("jqueryui/core", ["jquery"], function(a) {
        return function(a, b) {
            function c(b, c) {
                var e, f, g, h = b.nodeName.toLowerCase();
                return "area" === h ? (e = b.parentNode,
                f = e.name,
                !(!b.href || !f || "map" !== e.nodeName.toLowerCase()) && (g = a("img[usemap=#" + f + "]")[0],
                !!g && d(g))) : (/input|select|textarea|button|object/.test(h) ? !b.disabled : "a" === h ? b.href || c : c) && d(b)
            }
            function d(b) {
                return a.expr.filters.visible(b) && !a(b).parents().addBack().filter(function() {
                    return "hidden" === a.css(this, "visibility")
                }).length
            }
            var e = 0
              , f = /^ui-id-\d+$/;
            a.ui = a.ui || {},
            a.extend(a.ui, {
                version: "@VERSION",
                keyCode: {
                    BACKSPACE: 8,
                    COMMA: 188,
                    DELETE: 46,
                    DOWN: 40,
                    END: 35,
                    ENTER: 13,
                    ESCAPE: 27,
                    HOME: 36,
                    LEFT: 37,
                    NUMPAD_ADD: 107,
                    NUMPAD_DECIMAL: 110,
                    NUMPAD_DIVIDE: 111,
                    NUMPAD_ENTER: 108,
                    NUMPAD_MULTIPLY: 106,
                    NUMPAD_SUBTRACT: 109,
                    PAGE_DOWN: 34,
                    PAGE_UP: 33,
                    PERIOD: 190,
                    RIGHT: 39,
                    SPACE: 32,
                    TAB: 9,
                    UP: 38
                }
            }),
            a.fn.extend({
                focus: function(b) {
                    return function(c, d) {
                        return "number" == typeof c ? this.each(function() {
                            var b = this;
                            setTimeout(function() {
                                a(b).focus(),
                                d && d.call(b)
                            }, c)
                        }) : b.apply(this, arguments)
                    }
                }(a.fn.focus),
                scrollParent: function() {
                    var b;
                    return b = a.ui.ie && /(static|relative)/.test(this.css("position")) || /absolute/.test(this.css("position")) ? this.parents().filter(function() {
                        return /(relative|absolute|fixed)/.test(a.css(this, "position")) && /(auto|scroll)/.test(a.css(this, "overflow") + a.css(this, "overflow-y") + a.css(this, "overflow-x"))
                    }).eq(0) : this.parents().filter(function() {
                        return /(auto|scroll)/.test(a.css(this, "overflow") + a.css(this, "overflow-y") + a.css(this, "overflow-x"))
                    }).eq(0),
                    /fixed/.test(this.css("position")) || !b.length ? a(document) : b
                },
                zIndex: function(c) {
                    if (c !== b)
                        return this.css("zIndex", c);
                    if (this.length)
                        for (var d, e, f = a(this[0]); f.length && f[0] !== document; ) {
                            if (d = f.css("position"),
                            ("absolute" === d || "relative" === d || "fixed" === d) && (e = parseInt(f.css("zIndex"), 10),
                            !isNaN(e) && 0 !== e))
                                return e;
                            f = f.parent()
                        }
                    return 0
                },
                uniqueId: function() {
                    return this.each(function() {
                        this.id || (this.id = "ui-id-" + ++e)
                    })
                },
                removeUniqueId: function() {
                    return this.each(function() {
                        f.test(this.id) && a(this).removeAttr("id")
                    })
                }
            }),
            a.extend(a.expr[":"], {
                data: a.expr.createPseudo ? a.expr.createPseudo(function(b) {
                    return function(c) {
                        return !!a.data(c, b)
                    }
                }) : function(b, c, d) {
                    return !!a.data(b, d[3])
                }
                ,
                focusable: function(b) {
                    return c(b, !isNaN(a.attr(b, "tabindex")))
                },
                tabbable: function(b) {
                    var d = a.attr(b, "tabindex")
                      , e = isNaN(d);
                    return (e || d >= 0) && c(b, !e)
                }
            }),
            a("<a>").outerWidth(1).jquery || a.each(["Width", "Height"], function(c, d) {
                function e(b, c, d, e) {
                    return a.each(f, function() {
                        c -= parseFloat(a.css(b, "padding" + this)) || 0,
                        d && (c -= parseFloat(a.css(b, "border" + this + "Width")) || 0),
                        e && (c -= parseFloat(a.css(b, "margin" + this)) || 0)
                    }),
                    c
                }
                var f = "Width" === d ? ["Left", "Right"] : ["Top", "Bottom"]
                  , g = d.toLowerCase()
                  , h = {
                    innerWidth: a.fn.innerWidth,
                    innerHeight: a.fn.innerHeight,
                    outerWidth: a.fn.outerWidth,
                    outerHeight: a.fn.outerHeight
                };
                a.fn["inner" + d] = function(c) {
                    return c === b ? h["inner" + d].call(this) : this.each(function() {
                        a(this).css(g, e(this, c) + "px")
                    })
                }
                ,
                a.fn["outer" + d] = function(b, c) {
                    return "number" != typeof b ? h["outer" + d].call(this, b) : this.each(function() {
                        a(this).css(g, e(this, b, !0, c) + "px")
                    })
                }
            }),
            a.fn.addBack || (a.fn.addBack = function(a) {
                return this.add(null == a ? this.prevObject : this.prevObject.filter(a))
            }
            ),
            a("<a>").data("a-b", "a").removeData("a-b").data("a-b") && (a.fn.removeData = function(b) {
                return function(c) {
                    return arguments.length ? b.call(this, a.camelCase(c)) : b.call(this)
                }
            }(a.fn.removeData)),
            a.ui.ie = !!/msie [\w.]+/.exec(navigator.userAgent.toLowerCase()),
            a.support.selectstart = "onselectstart"in document.createElement("div"),
            a.fn.extend({
                disableSelection: function() {
                    return this.bind((a.support.selectstart ? "selectstart" : "mousedown") + ".ui-disableSelection", function(a) {
                        a.preventDefault()
                    })
                },
                enableSelection: function() {
                    return this.unbind(".ui-disableSelection")
                }
            }),
            a.extend(a.ui, {
                plugin: {
                    add: function(b, c, d) {
                        var e, f = a.ui[b].prototype;
                        for (e in d)
                            f.plugins[e] = f.plugins[e] || [],
                            f.plugins[e].push([c, d[e]])
                    },
                    call: function(a, b, c) {
                        var d, e = a.plugins[b];
                        if (e && a.element[0].parentNode && 11 !== a.element[0].parentNode.nodeType)
                            for (d = 0; d < e.length; d++)
                                a.options[e[d][0]] && e[d][1].apply(a.element, c)
                    }
                },
                hasScroll: function(b, c) {
                    if ("hidden" === a(b).css("overflow"))
                        return !1;
                    var d = c && "left" === c ? "scrollLeft" : "scrollTop"
                      , e = !1;
                    return b[d] > 0 || (b[d] = 1,
                    e = b[d] > 0,
                    b[d] = 0,
                    e)
                }
            })
        }(a),
        a
    }),
    define("touchPunch", ["jquery", "jqueryui/core", "jqueryui/mouse"], function(a, b, c) {
        return function(a) {
            function b(a, b) {
                if (!(a.originalEvent.touches.length > 1)) {
                    a.preventDefault();
                    var c = a.originalEvent.changedTouches[0]
                      , d = document.createEvent("MouseEvents");
                    d.initMouseEvent(b, !0, !0, window, 1, c.screenX, c.screenY, c.clientX, c.clientY, !1, !1, !1, !1, 0, null),
                    a.target.dispatchEvent(d)
                }
            }
            if (a.support.touch = "ontouchend"in document,
            a.support.touch) {
                var c, d = a.ui.mouse.prototype, e = d._mouseInit;
                d._touchStart = function(a) {
                    var d = this;
                    !c && d._mouseCapture(a.originalEvent.changedTouches[0]) && (c = !0,
                    d._touchMoved = !1,
                    b(a, "mouseover"),
                    b(a, "mousemove"),
                    b(a, "mousedown"))
                }
                ,
                d._touchMove = function(a) {
                    c && (this._touchMoved = !0,
                    b(a, "mousemove"))
                }
                ,
                d._touchEnd = function(a) {
                    c && (b(a, "mouseup"),
                    b(a, "mouseout"),
                    this._touchMoved || b(a, "click"),
                    c = !1)
                }
                ,
                d._mouseInit = function() {
                    var b = this;
                    b.element.bind("touchstart", a.proxy(b, "_touchStart")).bind("touchmove", a.proxy(b, "_touchMove")).bind("touchend", a.proxy(b, "_touchEnd")),
                    e.call(b)
                }
            }
        }(a),
        a
    }),
    define("lib/widgets/slider", ["jquery", "jqueryui/widget", "jqueryui/mouse", "touchPunch"], function(a) {
        "use strict";
        return a.widget("ted.slider", a.ui.mouse, {
            options: {
                distance: 0,
                orientation: "horizontal",
                value: 0,
                change: null,
                slide: null,
                start: null,
                stop: null
            },
            value: function(a) {
                return arguments.length && (this.options.value = a,
                this._refreshValue()),
                this.options.value
            },
            _change: function(a) {
                this._trigger("change", a, this._getData({
                    value: this.value()
                }))
            },
            _create: function() {
                this._detectOrientation(),
                this._mouseInit();
                var b = a("<div class=slider__progress></div>");
                this.progressElement = b,
                this.cursorElement = a("<div class=slider__cursor></div>").appendTo(this.progressElement),
                this.element.addClass("slider slider--" + this.orientation).append(this.progressElement)
            },
            _detectOrientation: function() {
                this.orientation = "vertical" === this.options.orientation ? "vertical" : "horizontal"
            },
            _getData: function(a) {
                return a
            },
            _mouseCapture: function(a) {
                var b, c;
                return this.elementSize = {
                    width: this.element.outerWidth(),
                    height: this.element.outerHeight()
                },
                this.elementOffset = this.element.offset(),
                b = {
                    x: a.pageX,
                    y: a.pageY
                },
                c = this._valueFromPosition(b),
                this._start(a),
                this._slide(a, c),
                !0
            },
            _mouseDrag: function(a) {
                var b = {
                    x: a.pageX,
                    y: a.pageY
                }
                  , c = this._valueFromPosition(b);
                return this._slide(a, c),
                !1
            },
            _mouseStart: function() {
                return !0
            },
            _mouseStop: function(a) {
                return this._mouseDrag(a),
                this._stop(a),
                this._change(a),
                !1
            },
            _refreshValue: function() {
                var a = this.value();
                this.progressElement.css("vertical" === this.orientation ? "height" : "width", 100 * a + "%")
            },
            _slide: function(a, b) {
                this._trigger("slide", a, this._getData({
                    value: b
                })),
                this.value(b)
            },
            _start: function(a) {
                this.element.addClass("slider--active"),
                this._trigger("start", a)
            },
            _stop: function(a) {
                this.element.removeClass("slider--active"),
                this._trigger("stop", a)
            },
            _valueFromPosition: function(a) {
                var b, c, d;
                return "vertical" === this.orientation ? (d = this.elementSize.height,
                c = a.y - this.elementOffset.top) : (d = this.elementSize.width,
                c = a.x - this.elementOffset.left),
                b = c / d,
                b > 1 && (b = 1),
                b < 0 && (b = 0),
                "vertical" === this.orientation && (b = 1 - b),
                b
            }
        }),
        function(b, c) {
            return a(b).slider(c)
        }
    }),
    define("lib/widgets/scrubber", ["jquery", "lib/ga", "lib/widgets/slider"], function(a, b) {
        "use strict";
        var c = "scrubber"
          , d = c + "--active"
          , e = c + "--hover"
          , f = c + "__cursor"
          , g = c + "__playhead"
          , h = c + "__progress";
        return a.widget("ted.scrubber", a.ted.slider, {
            options: {
                duration: null,
                player: null
            },
            _isScrubbing: !1,
            _isSeeking: !1,
            _progress: 0,
            _create: function() {
                this.options.player && this._setPlayer(),
                this.playheadElement = a("<div class=" + g + "></div>").prependTo(this.element),
                this._super(),
                this.element.addClass(c),
                this.cursorElement.addClass(f),
                this.progressElement.addClass(h),
                this._on(this._handleEvents)
            },
            _getData: function(b) {
                return a.extend({
                    cursor: b.value * this.options.duration,
                    playhead: this._progress * this.options.duration,
                    progress: this._progress,
                    duration: this.options.duration
                }, b)
            },
            _handleEvents: {
                mouseover: function() {
                    this.element.addClass(e)
                },
                mouseout: function() {
                    this.element.removeClass(e)
                },
                scrubberstart: function() {
                    this.element.addClass(d),
                    this._isScrubbing = !0
                },
                scrubberstop: function() {
                    this.element.removeClass(d),
                    this._isScrubbing = !1
                }
            },
            _setOption: function(a, b) {
                this._super(a, b),
                "duration" === a && this.progress(this._getData({
                    value: this._progress
                }).playhead / b)
            },
            _setPlayer: function() {
                var c = this
                  , d = a(this.options.player)
                  , e = d.player("talk");
                this.option("duration", e.duration),
                this._on({
                    scrubberchange: function(a, c) {
                        d.player("seek", c.cursor),
                        b.sendEvent("player", "seek", "scrubber", Math.round(c.cursor))
                    }
                }),
                d.on("playertalk", function(a, b) {
                    c.option("duration", b.duration),
                    c.progress(0)
                }).on("playerduration", function(a, b) {
                    c.option("duration", b.duration)
                }).on("playerseeking", function() {
                    c._isSeeking = !0
                }).on("playerseeked", function() {
                    c._isSeeking = !1
                }).on("playerprogress", function(a, b) {
                    c.progress(b.progress)
                })
            },
            isSeeking: function(a) {
                return arguments.length && (this._isSeeking = !!a),
                this._isScrubbing || this._isSeeking
            },
            progress: function(a) {
                if (arguments.length) {
                    var b = 100 * a + "%";
                    this.progressElement && !this.isSeeking() && this.progressElement.width(b),
                    this.playheadElement && this.playheadElement.width(b),
                    this._progress = a,
                    this._trigger("progress", null, this._getData({
                        value: a
                    }))
                }
                return this._progress
            }
        }),
        function(b, c) {
            return a(b).scrubber(c)
        }
    }),
    define("components/embeddable/views/volume", ["./expandable", "hbs!components/embeddable/templates/volume", "lib/widgets/scrubber"], function(a, b) {
        "use strict";
        var c = a.extend({
            className: "Embeddable__expandable Embeddable__volume",
            propsDefaults: {
                level: .5,
                muted: !1
            },
            propsEvents: {
                "change:level": "renderLevel",
                "change:muted": "renderMuted"
            },
            initialize: function() {
                this.adoptView(a),
                this.initializeProps(),
                this.initializeState()
            },
            render: function() {
                return this.$el.html(b()),
                this.renderLevel(),
                this.find("div.Embeddable__volume__slider").scrubber({
                    orientation: "vertical"
                }),
                this
            },
            renderLevel: function() {
                this.find("div.Embeddable__volume__meter__level").height(100 * this.props.get("level") + "%")
            },
            renderMuted: function() {
                this.$el[this.props.get("muted") ? "addClass" : "removeClass"]("Embeddable__volume--muted")
            }
        });
        return c
    }),
    define("hbs!components/embeddable/templates/scrubber", ["hbs", "hbs/handlebars"], function(a, b) {
        var c = b.template({
            compiler: [6, ">= 2.0.0-beta.1"],
            main: function(a, b, c, d) {
                return '\n<div class="Embeddable__scrubber__bar">\n  <div class="Embeddable__scrubber__meter"><div class="Embeddable__scrubber__meter__progress"></div></div>\n\n  <div class="Embeddable__scrubber__slider"></div>\n</div>\n'
            },
            useData: !0
        });
        return b.registerPartial("components/embeddable/templates/scrubber", c),
        c
    }),
    define("components/embeddable/views/scrubber", ["./base", "hbs!components/embeddable/templates/scrubber", "lib/widgets/scrubber"], function(a, b) {
        "use strict";
        var c = a.extend({
            className: "Embeddable__scrubber",
            events: {
                scrubberchange: function() {
                    this.find("div.Embeddable__scrubber__slider").scrubber("progress", 0)
                }
            },
            propsDefaults: {
                enabled: !0,
                currentTime: 0,
                duration: 0,
                fullscreen: !1
            },
            propsEvents: {
                "change:enabled": "renderEnabled",
                "change:currentTime": "renderTime",
                "change:duration": "renderTime",
                "change:fullscreen": "renderFullscreen"
            },
            render: function() {
                return this.$el.html(b()),
                this.renderEnabled(),
                this.renderFullscreen(),
                this.find("div.Embeddable__scrubber__slider").scrubber(),
                this
            },
            renderEnabled: function() {
                this.$el[this.props.get("enabled") ? "addClass" : "removeClass"]("Embeddable__scrubber--enabled")
            },
            renderFullscreen: function() {
                this.$el[this.props.get("fullscreen") ? "addClass" : "removeClass"]("Embeddable__scrubber--fullscreen")
            },
            renderTime: function() {
                this.find("div.Embeddable__scrubber__meter__progress").width(this.props.get("currentTime") / this.props.get("duration") * 100 + "%")
            }
        });
        return c
    }),
    define("components/embeddable/views/chrome", ["./base", "./controls", "./play-button", "./playlist", "./subtitles", "./volume", "./scrubber"], function(a, b, c, d, e, f, g) {
        "use strict";
        var h = a.extend({
            className: "Embeddable__chrome",
            events: {
                "click a:not(.Embeddable__controls__outbound)": function(a) {
                    a.preventDefault()
                },
                "click a.Embeddable__controls__pause": function() {
                    this.props.get("paused") || this.state.set("pausePending", !0)
                },
                "click a.Embeddable__controls__play": function() {
                    this.props.get("playing") || this.state.set("playPending", !0)
                },
                "click a.Embeddable__controls__skip": function() {
                    var a = this.props.get("next");
                    a && (this.state.set("skipPending", !0),
                    this.state.set("pendingTalk", a))
                },
                "click a.Embeddable__controls__unskip": function() {
                    var a = this.props.get("prev");
                    a && (this.state.set("unskipPending", !0),
                    this.state.set("pendingTalk", a))
                },
                "click a.Embeddable__controls__volume": function() {
                    this.state.set("volumeOpen", !this.state.get("volumeOpen"))
                },
                "click a.Embeddable__controls__subtitles": function() {
                    this.state.set("subtitlesOpen", !this.state.get("subtitlesOpen"))
                },
                "click a.Embeddable__controls__playlist": function() {
                    this.state.set("playlistOpen", !this.state.get("playlistOpen"))
                },
                "click a.Embeddable__controls__fullscreen": function() {
                    this.props.get("fullscreen") || this.state.set("fullscreenPending", !0)
                },
                "click a.Embeddable__controls__smallscreen": function() {
                    this.props.get("fullscreen") && this.state.set("smallscreenPending", !0)
                },
                "click a.Embeddable__controls__outbound": function() {
                    this.props.get("paused") || this.state.set("pausePending", !0)
                },
                "click div.Embeddable__play-button": function() {
                    this.props.get("playing") || this.state.set("playPending", !0)
                },
                "click a.Embeddable__playlist__talk": function(a) {
                    var b = +$(a.target).closest("a.Embeddable__playlist__talk").data("id");
                    this.state.set("pendingTalk", this.talks.get(b))
                },
                "click a.Embeddable__subtitles__language": function(a) {
                    var b = $(a.target).closest("a.Embeddable__subtitles__language").data("code");
                    b ? this.props.get("subtitle") === b ? this.state.set("pendingSubtitle", !1) : this.state.set("pendingSubtitle", b) : this.props.get("subtitle") && this.state.set("pendingSubtitle", !1)
                },
                "click a.Embeddable__volume__mute": function() {
                    this.props.get("muted") || this.state.set("mutePending", !0)
                },
                "click a.Embeddable__volume__unmute": function() {
                    this.props.get("muted") && this.state.set("unmutePending", !0)
                },
                "scrubberslide div.Embeddable__volume__slider": function(a, b) {
                    this.state.set("pendingVolume", b.value)
                },
                "scrubberchange div.Embeddable__scrubber__slider": function(a, b) {
                    var c = this.props.get("duration");
                    c && this.state.set("pendingSeek", b.value * c)
                }
            },
            stateDefaults: {
                pausePending: !1,
                playPending: !1,
                pendingTalk: null,
                skipPending: !1,
                unskipPending: !1,
                volumeOpen: !1,
                pendingVolume: null,
                mutePending: !1,
                unmutePending: !1,
                subtitlesAvailable: !1,
                subtitlesOpen: !1,
                pendingSubtitle: null,
                playlistOpen: !1,
                fullscreenPending: !1,
                smallscreenPending: !1,
                pendingSeek: null
            },
            stateEvents: {
                "on:playPending": function() {
                    this.playButton.props.set("visible", !1)
                },
                "change:pendingTalk": function(a, b) {
                    null !== b && this.state.set("playlistOpen", !1)
                },
                "change:volumeOpen": function(a, b) {
                    this.volume.props.set("open", b),
                    this.controls.props.set("volumeActive", b),
                    b && (this.state.set("subtitlesOpen", !1),
                    this.state.set("playlistOpen", !1))
                },
                "change:pendingVolume": function(a, b) {
                    this.volume.props.set("level", b)
                },
                "change:subtitlesAvailable": "_checkSubtitles",
                "change:subtitlesOpen": function(a, b) {
                    this.subtitles.props.set("open", b),
                    this.controls.props.set("subtitlesActive", b),
                    b && (this.state.set("volumeOpen", !1),
                    this.state.set("playlistOpen", !1))
                },
                "change:pendingSubtitle": function(a, b) {
                    null !== b && this.state.set("subtitlesOpen", !1)
                },
                "change:playlistOpen": function(a, b) {
                    this.playlist.props.set("open", b),
                    this.controls.props.set("playlistActive", b),
                    b && (this.state.set("volumeOpen", !1),
                    this.state.set("subtitlesOpen", !1))
                }
            },
            propsDefaults: {
                enabled: !0,
                activated: !1,
                hovering: !1,
                playing: !1,
                paused: !1,
                duration: null,
                currentTime: null,
                talk: null,
                next: null,
                prev: null,
                volume: .5,
                canVolume: !1,
                muted: !1,
                subtitle: !1,
                canSubtitle: !1,
                fullscreen: !1,
                canFullscreen: !1,
                postrolling: !1,
                url: "https://www.ted.com/",
                visible: !1
            },
            propsEvents: {
                "change:enabled": "_setActivation",
                "change:activated": "_setActivation",
                "change:visible": function(a, b) {
                    this.$el[b ? "addClass" : "removeClass"]("Embeddable__chrome--visible")
                },
                "change:playing": function() {
                    this._checkPlayPause()
                },
                "on:playing": function() {
                    this.state.set("playPending", !1),
                    this.playButton.props.set("visible", !1)
                },
                "on:paused": function() {
                    this.state.set("pausePending", !1),
                    this.playButton.props.set("enabled", !0),
                    this.playButton.props.set("visible", !0)
                },
                "change:duration": function(a, b) {
                    this.controls.renderDuration(b),
                    this.scrubber.props.set("duration", b)
                },
                "change:currentTime": function(a, b) {
                    this.controls.renderCurrent(b),
                    this.scrubber.props.set("currentTime", b)
                },
                "change:talk": function(a, b) {
                    this.state.set("pendingTalk", null),
                    this.state.set("skipPending", !1),
                    this.state.set("unskipPending", !1);
                    var c = b.get("languages");
                    this.subtitles.props.set("languages", c || []),
                    this.state.set("subtitlesAvailable", c && c.length > 0)
                },
                "change:next": "_checkSkip",
                "change:prev": "_checkSkip",
                "change:volume": function(a, b) {
                    this.volume.props.set("level", b)
                },
                "change:canVolume": function(a, b) {
                    this.controls.props.set("volumeEnabled", b)
                },
                "change:muted": function(a, b) {
                    this.state.set("mutePending", !1),
                    this.state.set("unmutePending", !1),
                    this.volume.props.set("muted", b),
                    this.controls.props.set("volumeMuted", b)
                },
                "change:subtitle": function(a, b) {
                    this.subtitles.props.set("activeSubtitle", b ? b : null),
                    this.controls.props.set("subtitlesEffective", !!b),
                    this.state.set("pendingSubtitle", null)
                },
                "change:canSubtitle": "_checkSubtitles",
                "change:fullscreen": function(a, b) {
                    this.state.set("fullscreenPending", !1),
                    this.state.set("smallscreenPending", !1),
                    this.controls.props.set("fullscreen", b),
                    this.scrubber.props.set("fullscreen", b)
                },
                "change:canFullscreen": function(a, b) {
                    this.controls.props.set("fullscreenEnabled", b)
                },
                "change:postrolling": function(a, b) {
                    this.scrubber.props.set("enabled", !b),
                    this.controls.props.set("timingEnabled", !b),
                    this._checkPlayPause(),
                    this._checkPlaylist(),
                    this._checkSkip(),
                    this._checkSubtitles()
                },
                "change:url": function(a, b) {
                    this.controls.props.set("url", b)
                }
            },
            initialize: function(a) {
                this.talks = a.talks,
                this.scrubber = new g,
                this.controls = new b,
                this.playButton = new c,
                this.playlist = new d({
                    talks: this.talks
                }),
                this.subtitles = new e,
                this.volume = new f,
                this.initializeState(),
                this.initializeProps(),
                this.listenTo(this.talks, "add", this._checkPlaylist),
                this.listenTo(this.talks, "all", this._checkPlaylist),
                this.listenTo(this.talks, "reset", this._checkPlaylist)
            },
            render: function() {
                this.$el.append(this.playButton.$el),
                this.playButton.render(),
                this.$el.append(this.controls.$el),
                this.controls.render(),
                this.$el.append(this.scrubber.$el),
                this.scrubber.render(),
                this.$el.append(this.volume.$el),
                this.volume.render(),
                this.$el.append(this.playlist.$el),
                this.playlist.render(),
                this.$el.append(this.subtitles.$el),
                this.subtitles.render(),
                this.volume.anchorTo(this.controls.find("a.Embeddable__controls__volume")),
                this.subtitles.anchorTo(this.controls.find("a.Embeddable__controls__subtitles")),
                this.playlist.anchorTo(this.controls.find("a.Embeddable__controls__playlist"))
            },
            _checkPlaylist: function() {
                var a = this.talks.length > 1
                  , b = !!this.props.get("postrolling");
                this.controls.props.set("playlistEnabled", !b && a)
            },
            _checkPlayPause: function() {
                var a = !!this.props.get("playing")
                  , b = !!this.props.get("postrolling");
                this.controls.props.set("playEnabled", !b && !a),
                this.controls.props.set("pauseEnabled", !b && a)
            },
            _checkSkip: function() {
                var a = !!this.props.get("next")
                  , b = !!this.props.get("prev")
                  , c = !!this.props.get("postrolling");
                this.controls.props.set("skipEnabled", !c && a),
                this.controls.props.set("unskipEnabled", !c && b)
            },
            _checkSubtitles: function() {
                this.controls.props.set("subtitlesEnabled", !this.props.get("postrolling") && this.state.get("subtitlesAvailable") && this.props.get("canSubtitle"))
            },
            _setActivation: function() {
                var a = this.props.get("enabled") && this.props.get("activated");
                this.$el[a ? "addClass" : "removeClass"]("Embeddable__chrome--activated")
            }
        });
        return h
    }),
    define("lib/utils/is_mobile", [], function() {
        "use strict";
        function a() {
            return a.isIOS() || a.isAndroid()
        }
        function b(b) {
            return !!a.ua.match(b)
        }
        var c = /Android/g
          , d = /(iPad|iPhone|iPod)/g;
        return a.isIOS = function() {
            return b(d)
        }
        ,
        a.isAndroid = function() {
            return b(c)
        }
        ,
        a.ua = window.navigator && window.navigator.userAgent || "",
        a
    }),
    define("hbs!components/embeddable/templates/player", ["hbs", "hbs/handlebars"], function(a, b) {
        var c = b.template({
            compiler: [6, ">= 2.0.0-beta.1"],
            main: function(a, b, c, d) {
                return '\n<div class="vc">\n  <div class="vc__wrap">\n    <div class="Embeddable__player__object"></div>\n  </div>\n</div>\n'
            },
            useData: !0
        });
        return b.registerPartial("components/embeddable/templates/player", c),
        c
    }),
    define("Modernizr", [], function() {
        "use strict";
        return window.Modernizr
    }),
    define("lib/widgets/player/ga-tracker", ["lodash", "Modernizr", "lib/ga"], function(a, b, c) {
        "use strict";
        function d(a) {
            this._data = {
                currentPlayerTime: null,
                hasPlayed: !1,
                hasRequested: !1,
                lastPlayedTalkId: null,
                lastChangedTalkId: null,
                lastLanguageCode: null,
                marks: null,
                markableProgress: [25, 50, 75, 95],
                markableTimes: [10, 30],
                postRolling: !1
            },
            this._widget = a,
            this._resetMarks(),
            this._addHandlers()
        }
        return d.prototype._resetMarks = function() {
            this._data.marks = {
                times: {},
                progress: {},
                ads: {}
            }
        }
        ,
        d.prototype._incrementTalkViews = function() {
            var a = require("Cookies").get("__utma");
            if (a && b.localstorage) {
                var d = +a.split(".").pop()
                  , e = window.localStorage
                  , f = "talkViews"
                  , g = (e.getItem(f) || "").split("|");
                2 === g.length && +g[0] === d ? g[1] = +g[1] + 1 : g = [d, 1],
                e.setItem(f, g.join("|")),
                c.set("metric1", g[1])
            }
        }
        ,
        d.prototype._onTalkChange = function() {
            this._data.postRolling = !1,
            this._resetMarks(),
            this._incrementTalkViews()
        }
        ,
        d.prototype._addHandlers = function() {
            var a = this
              , b = {
                playererror: function(a, b) {
                    var d = b.error
                      , e = "abortive" === d.severity;
                    (e || "fatal" === d.severity) && c.sendEvent("player", e ? "error.abort" : "error.fatal", d.message)
                },
                playerprolongedrebuffer: function(a, b) {
                    b.duration && b.duration % 2e3 && c.sendEvent("player.talk", "prolongedRebuffer", b.duration)
                },
                playerenterfullscreen: function() {
                    c.sendEvent("player", "enterFullScreen"),
                    c.setDimension("playerPresentation", "fullscreen")
                },
                playerexitfullscreen: function() {
                    c.sendEvent("player", "exitFullScreen"),
                    c.setDimension("playerPresentation", "inline")
                },
                playerplay: function() {
                    var b = a._widget.options.currentTalk.id;
                    c.sendEvent("player", "start", a._data.hasPlayed ? "subsequent" : "initial"),
                    a._data.hasPlayed = !0,
                    a._data.lastPlayedTalkId !== b && (c.sendEvent("player.talk", "start", b),
                    a._data.lastPlayedTalkId = b)
                },
                playerplaybackrate: function(a, b) {
                    c.sendEvent("player", "playbackRate", b.playbackRate),
                    c.setDimension("playbackRate", b.playbackRate)
                },
                playerplaytoken: function(a, b) {
                    c.setDimension("playToken", b.playToken)
                },
                playerpause: function() {
                    c.sendEvent("player", "pause", Math.round(a._data.currentPlayerTime))
                },
                playerpopout: function(a, b) {
                    c.sendEvent("player", "popOut", b.popOut ? "on" : "off")
                },
                playerready: function() {
                    var b = a._widget.mode();
                    c.sendEvent("player", "initialize", b, {
                        nonInteraction: 1
                    }),
                    c.setDimension("playerMode", b),
                    c.setDimension("playerPresentation", "inline")
                },
                playerrequestnext: function() {
                    c.sendEvent("player", "next", a._data.postRolling ? "postroll" : "talk")
                },
                playerrequestplay: function() {
                    c.sendEvent("player", "request", a._data.hasRequested ? "subsequent" : "initial"),
                    a._data.hasRequested = !0
                },
                playerprogress: function(b, d) {
                    var e = 100 * d.progress
                      , f = 0
                      , g = -1
                      , h = a._data.markableProgress.length;
                    if (!a._widget.player.postrolling)
                        for (; a._data.marks && ++g < h && f < e; )
                            f = a._data.markableProgress[g],
                            e >= f && !a._data.marks.progress[f] && (a._data.currentPlayerTime > a._widget.options.startTrackingAt && c.sendEvent("player", "progressPct", f + "%"),
                            a._data.marks.progress[f] = !0)
                },
                playertalkcomplete: function() {
                    a._data.marks && !a._data.marks.progress[100] && (c.sendEvent("player", "progressPct", "100%"),
                    a._data.marks.progress[100] = !0,
                    c.sendEvent("player.talk", "complete", a._widget.options.currentTalk.id))
                },
                playercurrenttime: function(b, d) {
                    var e = d.currentTime
                      , f = 0
                      , g = -1
                      , h = a._data.markableTimes.length;
                    if (a._data.currentPlayerTime = e,
                    !a._widget.player.postrolling)
                        for (; a._data.marks && ++g < h && f < e; )
                            f = a._data.markableTimes[g],
                            e >= f && !a._data.marks.times[f] && (f > a._widget.options.startTrackingAt && c.sendEvent("player", "progressTime", f + " seconds"),
                            a._data.marks.times[f] = !0)
                },
                playerprerollstart: function() {
                    a._data.marks && !a._data.marks.ads.prerollStart && (c.sendEvent("player.preRoll", "cardStart"),
                    a._data.marks.ads.prerollStart = !0)
                },
                playerprerollblock: function() {
                    a._data.marks && !a._data.marks.ads.prerollBlock && (c.sendEvent("player.preRoll", "cardBlock"),
                    a._data.marks.ads.prerollBlock = !0)
                },
                playerpostrollstart: function() {
                    a._data.postRolling = !0,
                    a._data.marks && !a._data.marks.ads.postrollStart && (c.sendEvent("player.postRoll", "adStart"),
                    a._data.marks.ads.postrollStart = !0)
                },
                playerpostrollcomplete: function() {
                    a._data.postRolling = !1,
                    a._data.marks && !a._data.marks.ads.postrollComplete && (c.sendEvent("player.postRoll", "adComplete"),
                    a._data.marks.ads.postrollStart = !0)
                },
                playeradblock: function() {
                    c.sendEvent("player", "adBlock")
                },
                playersubtitle: function(b, d) {
                    var e = String(d.subtitle && d.subtitle.languageCode);
                    e !== a._data.lastLanguageCode && (e ? c.sendEvent("player.subtitle", "setLanguage", e) : c.sendEvent("player.subtitle", "disable")),
                    a._data.lastLanguageCode = e
                },
                playertalk: function(b, c) {
                    var d = c.id;
                    a._data.lastChangedTalkId !== d && (a._onTalkChange(),
                    a._data.lastChangedTalkId = d)
                }
            };
            this._handlers = b,
            this._widget._on(b)
        }
        ,
        d
    }),
    define("lib/widgets/player/ted-tracker", ["jquery", "lodash", "lib/currentUserId", "lib/utils/ted"], function(a, b, c, d) {
        "use strict";
        function e(a) {
            var b = d("zone") || {};
            this._data = {
                lastMetaTalkId: null,
                lastPlayTalkId: null,
                vmAPIKey: b.api_key || "unknown"
            },
            this._widget = a,
            this._addHandlers()
        }
        return e.prototype._sendVM = function(c) {
            var d = b.extend({}, c, {
                share_token: this._widget.options.shareToken
            });
            a.post("/talks/" + this._widget.talk().id + "/views", {
                view: d
            }, null, "json")
        }
        ,
        e.prototype._recordViewID = function() {
            this._widget.options.recordInIdentity && c.get() && a.post("/talks/" + this._widget.talk().id + "/user_views", {}, null, "json")
        }
        ,
        e.prototype._recordViewVM = function() {
            var a = this._widget.mode();
            if ("hls" === a && this._sendVM({
                apikey: this._data.vmAPIKey,
                format: "hls",
                quality: "variant",
                service: "ted_player_html5_hls"
            }),
            "hlsjs" === a && this._sendVM({
                apikey: this._data.vmAPIKey,
                format: "hls",
                quality: "variant",
                service: "ted_player_html5_hlsjs"
            }),
            "flash" === a && this._sendVM({
                apikey: this._data.vmAPIKey,
                format: "hls",
                quality: "variant",
                service: "ted_player_flash_hls"
            }),
            "h264" === a) {
                var b = this._widget.options.currentTalk.resources.h264[0].bitrate;
                this._sendVM({
                    apikey: this._data.vmAPIKey,
                    format: "mp4",
                    quality: b ? b + "k" : "variant",
                    service: "ted_player_html5_mp4"
                })
            }
        }
        ,
        e.prototype._onTalkPlay = function() {
            this._recordViewID(),
            this._recordViewVM()
        }
        ,
        e.prototype._addHandlers = function() {
            var a = this
              , b = {
                playerrequestplay: function() {
                    a._widget._ytPlayer && a._widget._ytPlayer.playVideo && a._sendVM({
                        apikey: a._data.vmAPIKey,
                        service: ""
                    })
                },
                playerplay: function() {
                    var b = a._widget.options.currentTalk.id;
                    a._data.lastPlayTalkId !== b && (a._onTalkPlay(),
                    a._data.lastPlayTalkId = b)
                }
            };
            this._handlers = b,
            this._widget._on(b)
        }
        ,
        e
    });
    var ns_ = window.ns_ = window.ns_ || {};
    ns_.StreamSense = ns_.StreamSense || function() {
        function a(a, b) {
            var d = a || ""
              , e = "undefined"
              , f = k.comScore || k.sitestat || function(a) {
                var b, d, f, g, h, j = "comScore=", m = l.cookie, n = "", o = "indexOf", p = "substring", r = "length", s = c.browserAcceptsLargeURLs() ? q.URL_LENGTH_LIMIT : q.RESTRICTED_URL_LENGTH_LIMIT, t = "&ns_", u = "&", v = k.encodeURIComponent || escape;
                if (m[o](j) + 1)
                    for (g = 0,
                    f = m.split(";"),
                    h = f[r]; g < h; g++)
                        d = f[g][o](j),
                        d + 1 && (n = u + unescape(f[g][p](d + j[r])));
                a += t + "_t=" + +new Date + t + "c=" + (l.characterSet || l.defaultCharset || "") + n,
                a.length > s && a.indexOf(u) > 0 && (b = a.substr(0, s - 8).lastIndexOf(u),
                a = (a.substring(0, b) + t + "cut=" + v(a.substring(b + 1))).substr(0, s)),
                i.httpGet(a),
                typeof ns_p === e && (ns_p = {
                    src: a
                }),
                ns_p.lastMeasurement = a
            }
            ;
            if (typeof b !== e) {
                var g = []
                  , h = k.encodeURIComponent || escape;
                for (var j in b)
                    b.hasOwnProperty(j) && g.push(h(j) + "=" + h(b[j]));
                /[\?\&]$/.test(d) || (d += "&"),
                d += g.join("&")
            }
            return f(d)
        }
        function b(a, b) {
            for (var d, e = k.encodeURIComponent || escape, f = [], g = q.LABELS_ORDER, h = a.split("?"), i = h[0], j = h[1], m = j.split("&"), n = 0, o = m.length; n < o; n++) {
                var p = m[n].split("=")
                  , r = unescape(p[0])
                  , s = unescape(p[1]);
                r && (b[r] = s)
            }
            for (var t = {}, n = 0, o = g.length; n < o; n++) {
                var u = g[n];
                if (b.hasOwnProperty(u)) {
                    var v = b[u];
                    "undefined" != typeof v && null != v && (t[u] = !0,
                    f.push(e(u) + "=" + e(b[u])))
                }
            }
            for (var u in b)
                if (!t[u] && b.hasOwnProperty(u)) {
                    var v = b[u];
                    "undefined" != typeof v && null != v && f.push(e(u) + "=" + e(b[u]))
                }
            d = i + "?" + f.join("&"),
            d = d + (d.indexOf("&c8=") < 0 ? "&c8=" + e(l.title) : "") + (d.indexOf("&c7=") < 0 ? "&c7=" + e(l.URL) : "") + (d.indexOf("&c9=") < 0 ? "&c9=" + e(l.referrer) : "");
            var w = c.browserAcceptsLargeURLs() ? q.URL_LENGTH_LIMIT : q.RESTRICTED_URL_LENGTH_LIMIT;
            if (d.length > w && d.indexOf("&") > 0) {
                var x = d.substr(0, w - 8).lastIndexOf("&");
                d = (d.substring(0, x) + "&ns_cut=" + e(d.substring(x + 1))).substr(0, w)
            }
            return d
        }
        var c = function() {
            var a = {
                uid: function() {
                    var a = 1;
                    return function() {
                        return +new Date + "_" + a++
                    }
                }(),
                filter: function(a, b) {
                    var c = {};
                    for (var d in b)
                        b.hasOwnProperty(d) && a(b[d]) && (c[d] = b[d]);
                    return c
                },
                extend: function(a) {
                    var b, c = arguments.length;
                    a = a || {};
                    for (var d = 1; d < c; d++)
                        if (b = arguments[d])
                            for (var e in b)
                                b.hasOwnProperty(e) && (a[e] = b[e]);
                    return a
                },
                getString: function(a, b) {
                    var c = String(a);
                    return null == a ? b || "na" : c
                },
                getLong: function(a, b) {
                    var c = Number(a);
                    return null == a || isNaN(c) ? b || 0 : c
                },
                getInteger: function(a, b) {
                    var c = Number(a);
                    return null == a || isNaN(c) ? b || 0 : c
                },
                getBoolean: function(a, b) {
                    var c = "true" == String(a).toLowerCase();
                    return null == a ? b || !1 : c
                },
                isNotEmpty: function(a) {
                    return "undefined" != typeof a && null != a && "undefined" != typeof a.length && a.length > 0
                },
                indexOf: function(b, c) {
                    var d = -1;
                    return a.forEach(c, function(a, c) {
                        a == b && (d = c)
                    }),
                    d
                },
                forEach: function(a, b, c) {
                    try {
                        if ("function" == typeof b)
                            if (c = "undefined" != typeof c ? c : null,
                            "number" != typeof a.length || "undefined" == typeof a[0]) {
                                var d = "undefined" != typeof a.__proto__;
                                for (var e in a)
                                    (!d || d && "undefined" == typeof a.__proto__[e]) && "function" != typeof a[e] && b.call(c, a[e], e)
                            } else
                                for (var e = 0, f = a.length; e < f; e++)
                                    b.call(c, a[e], e)
                    } catch (a) {}
                },
                regionMatches: function(a, b, c, d, e) {
                    if (b < 0 || d < 0 || b + e > a.length || d + e > c.length)
                        return !1;
                    for (; --e >= 0; ) {
                        var f = a.charAt(b++)
                          , g = c.charAt(d++);
                        if (f != g)
                            return !1
                    }
                    return !0
                },
                size: function(a) {
                    var b, c = 0;
                    for (var b in a)
                        a.hasOwnProperty(b) && c++;
                    return c
                },
                log: function(a, b) {
                    if ("undefined" != typeof b && b) {
                        var c = new Date
                          , d = c.getHours() + ":" + c.getMinutes() + ":" + c.getSeconds();
                        console.log(d, a)
                    }
                },
                isTrue: function(a) {
                    return "undefined" != typeof a && ("string" == typeof a ? (a = a.toLowerCase(),
                    "true" === a || "1" === a || "on" === a) : !!a)
                },
                toString: function(b) {
                    if ("undefined" == typeof b)
                        return "undefined";
                    if ("string" == typeof b)
                        return b;
                    if ("[object Array]" === Object.prototype.toString.call(b))
                        return b.join(",");
                    if (a.size(b) > 0) {
                        var c = "";
                        for (var d in b)
                            b.hasOwnProperty(d) && (c += d + ":" + b[d] + ";");
                        return c
                    }
                    return b.toString()
                },
                exists: function(a) {
                    return "undefined" != typeof a && null != a
                },
                firstGreaterThan0: function() {
                    for (var a = 0, b = arguments.length; a < b; a++) {
                        var c = arguments[a];
                        if (c > 0)
                            return c
                    }
                    return 0
                },
                cloneObject: function(a) {
                    if (null == a || "object" != typeof a)
                        return a;
                    var b = a.constructor();
                    for (var c in a)
                        a.hasOwnProperty(c) && (b[c] = a[c]);
                    return b
                },
                safeGet: function(b, c) {
                    return c = a.exists(c) ? c : "",
                    a.exists(b) ? b : c
                },
                getBrowserName: function() {
                    var a, b, c = navigator.userAgent, d = navigator.appName;
                    return (b = c.indexOf("Opera")) != -1 || (b = c.indexOf("OPR/")) != -1 ? d = "Opera" : (b = c.indexOf("Android")) != -1 ? d = "Android" : (b = c.indexOf("Chrome")) != -1 ? d = "Chrome" : (b = c.indexOf("Safari")) != -1 ? d = "Safari" : (b = c.indexOf("Firefox")) != -1 ? d = "Firefox" : (b = c.indexOf("IEMobile")) != -1 ? d = "Internet Explorer Mobile" : "Microsoft Internet Explorer" == d || "Netscape" == d ? d = "Internet Explorer" : (a = c.lastIndexOf(" ") + 1) < (b = c.lastIndexOf("/")) && (d = c.substring(a, b),
                    d.toLowerCase() == d.toUpperCase() && (d = navigator.appName)),
                    d
                },
                getBrowserFullVersion: function() {
                    var a, b, c, d, e, f = navigator.userAgent, g = navigator.appName, h = "" + parseFloat(navigator.appVersion);
                    return (c = f.indexOf("Opera")) != -1 ? (h = f.substring(c + 6),
                    (c = f.indexOf("Version")) != -1 && (h = f.substring(c + 8))) : (c = f.indexOf("OPR/")) != -1 ? h = f.substring(c + 4) : (c = f.indexOf("Android")) != -1 ? h = f.substring(c + 11) : (c = f.indexOf("Chrome")) != -1 ? h = f.substring(c + 7) : (c = f.indexOf("Safari")) != -1 ? (h = f.substring(c + 7),
                    (c = f.indexOf("Version")) != -1 && (h = f.substring(c + 8))) : (c = f.indexOf("Firefox")) != -1 ? h = f.substring(c + 8) : "Microsoft Internet Explorer" == g ? (e = new RegExp("MSIE ([0-9]{1,}[.0-9]{0,})"),
                    null != e.exec(f) && (h = parseFloat(RegExp.$1))) : "Netscape" == g ? (e = new RegExp("Trident/.*rv:([0-9]{1,}[.0-9]{0,})"),
                    null != e.exec(f) && (h = parseFloat(RegExp.$1))) : (b = f.lastIndexOf(" ") + 1) < (c = f.lastIndexOf("/")) && (h = f.substring(c + 1)),
                    h = h.toString(),
                    (d = h.indexOf(";")) != -1 && (h = h.substring(0, d)),
                    (d = h.indexOf(" ")) != -1 && (h = h.substring(0, d)),
                    (d = h.indexOf(")")) != -1 && (h = h.substring(0, d)),
                    a = parseInt("" + h, 10),
                    isNaN(a) && (h = "" + parseFloat(navigator.appVersion)),
                    h
                },
                browserAcceptsLargeURLs: function() {
                    return null === window.ActiveXObject || !0
                }
            };
            return a
        }()
          , d = function() {
            var a = "cs_"
              , b = function() {
                var b = "undefined" != typeof localStorage ? localStorage : {};
                c.extend(this, {
                    get: function(c) {
                        return b[a + c]
                    },
                    set: function(c, d) {
                        b[a + c] = d
                    },
                    has: function(c) {
                        return a + c in b
                    },
                    remove: function(c) {
                        delete b[a + c]
                    },
                    clear: function() {
                        for (var a in b)
                            b.hasOwnProperty(a) && delete b[a]
                    }
                })
            };
            return b
        }()
          , e = function(a, b) {
            var c = new Image;
            c.onload = function() {
                b && b(200)
            }
            ,
            c.onerror = function() {
                b && b()
            }
            ,
            c.src = a
        }
          , f = function(a, b, c) {
            c && setTimeout(c, 0)
        }
          , g = function() {
            return {
                dir: function(a) {
                    return null
                },
                append: function(a, b, c) {},
                write: function(a, b, c) {},
                deleteFile: function(a, b) {
                    return !1
                },
                read: function(a, b) {
                    return null
                }
            }
        }()
          , h = function(a, b) {
            "undefined" != typeof engine && b && setTimeout(b, 0);
            var c = engine.createHttpClient()
              , d = c.createRequest("GET", a, null);
            d.start(),
            b && setTimeout(b, 0)
        }
          , i = function() {
            var a = {
                PLATFORM: "generic",
                httpGet: e,
                httpPost: f,
                Storage: d,
                IO: g,
                getCrossPublisherId: function() {
                    return null
                },
                getAppName: function() {
                    return Constants.UNKNOWN_VALUE
                },
                getAppVersion: function(a) {
                    return Constants.UNKNOWN_VALUE
                },
                getVisitorId: function() {
                    return this.getDeviceName() + +new Date + ~~(1e3 * Math.random())
                },
                getVisitorIdSuffix: function() {
                    return "72"
                },
                getDeviceName: function() {
                    return ""
                },
                getPlatformVersion: function() {
                    return ""
                },
                getPlatformName: function() {
                    return "js"
                },
                getRuntimeName: function() {
                    return ""
                },
                getRuntimeVersion: function() {
                    return ""
                },
                getResolution: function() {
                    return ""
                },
                getLanguage: function() {
                    return ""
                },
                getPackageName: function() {
                    return ""
                },
                isConnectionAvailable: function() {
                    return !0
                },
                isCompatible: function() {
                    return !0
                },
                autoSelect: function() {},
                isCrossPublisherIdChanged: function() {
                    return !1
                }
            };
            return a
        }()
          , j = function() {
            function a() {
                return "undefined" != typeof engine && "undefined" != typeof engine.stats
            }
            function b() {
                return c.isNotEmpty(engine.stats.device.id) ? engine.stats.device.id : c.isNotEmpty(engine.stats.network.mac) ? engine.stats.network.mac : null
            }
            function e() {
                if (null == i) {
                    var a = b();
                    null != a ? (i = a,
                    j = "31",
                    k = a) : (i = +new Date + ~~(1e3 * Math.random()),
                    j = "72",
                    k = null)
                }
            }
            var i = null
              , j = null
              , k = null;
            return {
                PLATFORM: "trilithium",
                httpGet: h,
                httpPost: f,
                Storage: d,
                IO: g,
                getCrossPublisherId: function() {
                    return e(),
                    k
                },
                getAppName: function() {
                    return c.isNotEmpty(engine.stats.application.name) ? engine.stats.application.name : Constants.UNKNOWN_VALUE
                },
                getAppVersion: function(a) {
                    return c.isNotEmpty(engine.stats.application.version) ? engine.stats.application.version : Constants.UNKNOWN_VALUE
                },
                getVisitorId: function() {
                    return e(),
                    i
                },
                getVisitorIdSuffix: function() {
                    return j
                },
                getDeviceName: function() {
                    return c.safeGet(engine.stats.device.platform, "")
                },
                getPlatformVersion: function() {
                    return c.safeGet(engine.stats.device.version, "")
                },
                getPlatformName: function() {
                    return "js"
                },
                getRuntimeName: function() {
                    return "trilithium"
                },
                getRuntimeVersion: function() {
                    return ""
                },
                getResolution: function() {
                    return "undefined" != typeof screen && "undefined" != typeof screen.height && "undefined" != typeof screen.width ? screen.height + "x" + screen.width : ""
                },
                getLanguage: function() {
                    return ""
                },
                getPackageName: function() {
                    return ""
                },
                isConnectionAvailable: function() {
                    return !0
                },
                isCompatible: a
            }
        }();
        i.autoSelect = function() {
            j.isCompatible() && c.extend(i, j)
        }
        ;
        var k, l, m = "undefined" != typeof window && "undefined" != typeof document;
        m ? (k = window,
        l = document) : (k = {},
        l = {
            location: {
                href: ""
            },
            title: "",
            URL: "",
            referrer: "",
            cookie: ""
        });
        var c = c || {};
        c.filterMap = function(a, b) {
            for (var d in a)
                c.indexOf(d, b) == -1 && delete a[d]
        }
        ,
        c.getKeys = function(a, b) {
            var c, d = [];
            for (c in a)
                (!b || b.test(c)) && a.hasOwnProperty(c) && (d[d.length] = c);
            return d
        }
        ;
        var n = function() {
            var a = ["play", "pause", "end", "buffer", "keep-alive", "hb", "custom", "ad_play", "ad_pause", "ad_end", "ad_click"];
            return {
                PLAY: 0,
                PAUSE: 1,
                END: 2,
                BUFFER: 3,
                KEEP_ALIVE: 4,
                HEART_BEAT: 5,
                CUSTOM: 6,
                AD_PLAY: 7,
                AD_PAUSE: 8,
                AD_END: 9,
                AD_CLICK: 10,
                toString: function(b) {
                    return a[b]
                }
            }
        }()
          , o = function() {
            var a = [n.END, n.PLAY, n.PAUSE, n.BUFFER];
            return {
                IDLE: 0,
                PLAYING: 1,
                PAUSED: 2,
                BUFFERING: 3,
                toEventType: function(b) {
                    return a[b]
                }
            }
        }()
          , p = {
            ADPLAY: n.AD_PLAY,
            ADPAUSE: n.AD_PAUSE,
            ADEND: n.AD_END,
            ADCLICK: n.AD_CLICK
        }
          , q = {
            STREAMSENSE_VERSION: "4.1412.05",
            DEFAULT_PLAYERNAME: "streamsense",
            DEFAULT_HEARTBEAT_INTERVAL: [{
                playingtime: 6e4,
                interval: 1e4
            }, {
                playingtime: null,
                interval: 6e4
            }],
            DEFAULT_KEEP_ALIVE_INTERVAL: 12e5,
            DEFAULT_PAUSED_ON_BUFFERING_INTERVAL: 500,
            C1_VALUE: "19",
            C10_VALUE: "js",
            NS_AP_C12M_VALUE: "1",
            NS_NC_VALUE: "1",
            PAGE_NAME_LABEL: "name",
            RESTRICTED_URL_LENGTH_LIMIT: 2048,
            URL_LENGTH_LIMIT: 4096,
            LABELS_ORDER: ["c1", "c2", "ca2", "cb2", "cc2", "cd2", "ns_site", "ca_ns_site", "cb_ns_site", "cc_ns_site", "cd_ns_site", "ns_vsite", "ca_ns_vsite", "cb_ns_vsite", "cc_ns_vsite", "cd_ns_vsite", "ns_ap_an", "ca_ns_ap_an", "cb_ns_ap_an", "cc_ns_ap_an", "cd_ns_ap_an", "ns_ap_pn", "ns_ap_pv", "c12", "ca12", "cb12", "cc12", "cd12", "ns_ak", "ns_ns_ap_hw", "name", "ns_ap_ni", "ns_ap_ec", "ns_ap_ev", "ns_ap_device", "ns_ap_id", "ns_ap_csf", "ns_ap_bi", "ns_ap_pfm", "ns_ap_pfv", "ns_ap_ver", "ca_ns_ap_ver", "cb_ns_ap_ver", "cc_ns_ap_ver", "cd_ns_ap_ver", "ns_ap_sv", "ns_ap_cv", "ns_type", "ca_ns_type", "cb_ns_type", "cc_ns_type", "cd_ns_type", "ns_radio", "ns_nc", "ns_ap_ui", "ca_ns_ap_ui", "cb_ns_ap_ui", "cc_ns_ap_ui", "cd_ns_ap_ui", "ns_ap_gs", "ns_st_sv", "ns_st_pv", "ns_st_it", "ns_st_id", "ns_st_ec", "ns_st_sp", "ns_st_sq", "ns_st_cn", "ns_st_ev", "ns_st_po", "ns_st_cl", "ns_st_el", "ns_st_pb", "ns_st_hc", "ns_st_mp", "ca_ns_st_mp", "cb_ns_st_mp", "cc_ns_st_mp", "cd_ns_st_mp", "ns_st_mv", "ca_ns_st_mv", "cb_ns_st_mv", "cc_ns_st_mv", "cd_ns_st_mv", "ns_st_pn", "ns_st_tp", "ns_st_pt", "ns_st_pa", "ns_st_ad", "ns_st_li", "ns_st_ci", "ns_ap_jb", "ns_ap_res", "ns_ap_c12m", "ns_ap_install", "ns_ap_updated", "ns_ap_lastrun", "ns_ap_cs", "ns_ap_runs", "ns_ap_usage", "ns_ap_fg", "ns_ap_ft", "ns_ap_dft", "ns_ap_bt", "ns_ap_dbt", "ns_ap_dit", "ns_ap_as", "ns_ap_das", "ns_ap_it", "ns_ap_uc", "ns_ap_aus", "ns_ap_daus", "ns_ap_us", "ns_ap_dus", "ns_ap_ut", "ns_ap_oc", "ns_ap_uxc", "ns_ap_uxs", "ns_ap_lang", "ns_ap_ar", "ns_ap_miss", "ns_ts", "ns_st_ca", "ns_st_cp", "ns_st_er", "ca_ns_st_er", "cb_ns_st_er", "cc_ns_st_er", "cd_ns_st_er", "ns_st_pe", "ns_st_ui", "ca_ns_st_ui", "cb_ns_st_ui", "cc_ns_st_ui", "cd_ns_st_ui", "ns_st_bc", "ns_st_bt", "ns_st_bp", "ns_st_pc", "ns_st_pp", "ns_st_br", "ns_st_ub", "ns_st_vo", "ns_st_ws", "ns_st_pl", "ns_st_pr", "ns_st_ep", "ns_st_ty", "ns_st_ct", "ns_st_cs", "ns_st_ge", "ns_st_st", "ns_st_dt", "ns_st_de", "ns_st_pu", "ns_st_cu", "ns_st_fee", "ns_ap_i1", "ns_ap_i2", "ns_ap_i3", "ns_ap_i4", "ns_ap_i5", "ns_ap_i6", "c3", "ca3", "cb3", "cc3", "cd3", "c4", "ca4", "cb4", "cc4", "cd4", "c5", "ca5", "cb5", "cc5", "cd5", "c6", "ca6", "cb6", "cc6", "cd6", "c10", "c11", "c13", "c14", "c15", "c16", "c7", "c8", "c9"]
        }
          , r = function() {
            var a = function() {
                function a(a, b) {
                    var c = b[a];
                    null != c && (d[a] = c)
                }
                var b, d, e = this, f = 0, g = 0, h = 0, i = 0, j = 0, k = 0;
                c.extend(this, {
                    reset: function(a) {
                        null != a && a.length > 0 ? c.filterMap(d, a) : d = {},
                        d.hasOwnProperty("ns_st_cl") || (d.ns_st_cl = "0"),
                        d.hasOwnProperty("ns_st_pn") || (d.ns_st_pn = "1"),
                        d.hasOwnProperty("ns_st_tp") || (d.ns_st_tp = "1"),
                        e.setPauses(0),
                        e.setStarts(0),
                        e.setBufferingTime(0),
                        e.setBufferingTimestamp(-1),
                        e.setPlaybackTime(0),
                        e.setPlaybackTimestamp(-1)
                    },
                    setLabels: function(a, b) {
                        null != a && c.extend(d, a),
                        e.setRegisters(d, b)
                    },
                    getLabels: function() {
                        return d
                    },
                    setLabel: function(a, b) {
                        var c = {};
                        c[a] = b,
                        e.setLabels(c, null)
                    },
                    getLabel: function(a) {
                        return d[a]
                    },
                    getClipId: function() {
                        return ("undefined" == typeof b || null == b) && e.setClipId("1"),
                        b
                    },
                    setClipId: function(a) {
                        b = a
                    },
                    setRegisters: function(b, c) {
                        var d = b.ns_st_cn;
                        null != d && (e.setClipId(d),
                        delete b.ns_st_cn),
                        d = b.ns_st_bt,
                        null != d && (h = Number(d),
                        delete b.ns_st_bt),
                        a("ns_st_cl", b),
                        a("ns_st_pn", b),
                        a("ns_st_tp", b),
                        a("ns_st_ub", b),
                        a("ns_st_br", b),
                        c != o.PLAYING && null != c || (d = b.ns_st_sq,
                        null != d && (g = Number(d),
                        delete b.ns_st_sq)),
                        c != o.BUFFERING && (d = b.ns_st_pt,
                        null != d && (j = Number(d),
                        delete b.ns_st_pt)),
                        c != o.PAUSED && c != o.IDLE && null != c || (d = b.ns_st_pc,
                        null != d && (f = Number(d),
                        delete b.ns_st_pc))
                    },
                    createLabels: function(a, b) {
                        var d = b || {};
                        return d.ns_st_cn = e.getClipId(),
                        d.ns_st_bt = String(e.getBufferingTime()),
                        a != n.PLAY && null != a || (d.ns_st_sq = String(g)),
                        a != n.PAUSE && a != n.END && a != n.KEEP_ALIVE && a != n.HEART_BEAT && null != a || (d.ns_st_pt = String(e.getPlaybackTime()),
                        d.ns_st_pc = String(f)),
                        c.extend(d, e.getLabels()),
                        d
                    },
                    incrementPauses: function() {
                        f++
                    },
                    incrementStarts: function() {
                        g++
                    },
                    getBufferingTime: function() {
                        var a = h;
                        return i >= 0 && (a += +new Date - i),
                        a
                    },
                    setBufferingTime: function(a) {
                        h = a
                    },
                    getPlaybackTime: function() {
                        var a = j;
                        return k >= 0 && (a += +new Date - k),
                        a
                    },
                    setPlaybackTime: function(a) {
                        j = a
                    },
                    getPlaybackTimestamp: function() {
                        return k
                    },
                    setPlaybackTimestamp: function(a) {
                        k = a
                    },
                    getBufferingTimestamp: function() {
                        return i
                    },
                    setBufferingTimestamp: function(a) {
                        i = a
                    },
                    getPauses: function() {
                        return f
                    },
                    setPauses: function(a) {
                        f = a
                    },
                    getStarts: function() {
                        return g
                    },
                    setStarts: function(a) {
                        g = a
                    }
                }),
                d = {},
                e.reset()
            };
            return a
        }()
          , s = function() {
            var a = function() {
                var a, b, d = this, e = null, f = 0, g = 0, h = 0, i = 0, j = 0, k = 0, l = !1;
                c.extend(this, {
                    reset: function(a) {
                        null != a && a.length > 0 ? c.filterMap(b, a) : b = {},
                        d.setPlaylistId(+new Date + "_" + k),
                        d.setBufferingTime(0),
                        d.setPlaybackTime(0),
                        d.setPauses(0),
                        d.setStarts(0),
                        d.setRebufferCount(0),
                        l = !1
                    },
                    setLabels: function(a, e) {
                        null != a && c.extend(b, a),
                        d.setRegisters(b, e)
                    },
                    getLabels: function() {
                        return b
                    },
                    setLabel: function(a, b) {
                        var c = {};
                        c[a] = b,
                        d.setLabels(c, null)
                    },
                    getLabel: function(a) {
                        return b[a]
                    },
                    getClip: function() {
                        return e
                    },
                    getPlaylistId: function() {
                        return a
                    },
                    setPlaylistId: function(b) {
                        a = b
                    },
                    setRegisters: function(b, c) {
                        var d = b.ns_st_sp;
                        null != d && (f = Number(d),
                        delete b.ns_st_sp),
                        d = b.ns_st_bc,
                        null != d && (h = Number(d),
                        delete b.ns_st_bc),
                        d = b.ns_st_bp,
                        null != d && (i = Number(d),
                        delete b.ns_st_bp),
                        d = b.ns_st_id,
                        null != d && (a = d,
                        delete b.ns_st_id),
                        c != o.BUFFERING && (d = b.ns_st_pa,
                        null != d && (j = Number(d),
                        delete b.ns_st_pa)),
                        c != o.PAUSED && c != o.IDLE && null != c || (d = b.ns_st_pp,
                        null != d && (g = Number(d),
                        delete b.ns_st_pp))
                    },
                    createLabels: function(b, e) {
                        var i = e || {};
                        return i.ns_st_bp = String(d.getBufferingTime()),
                        i.ns_st_sp = String(f),
                        i.ns_st_id = String(a),
                        h > 0 && (i.ns_st_bc = String(h)),
                        b != n.PAUSE && b != n.END && b != n.KEEP_ALIVE && b != n.HEART_BEAT && null != b || (i.ns_st_pa = String(d.getPlaybackTime()),
                        i.ns_st_pp = String(g)),
                        b != n.PLAY && null != b || d.didFirstPlayOccurred() || (i.ns_st_pb = "1",
                        d.setFirstPlayOccurred(!0)),
                        c.extend(i, d.getLabels()),
                        i
                    },
                    incrementStarts: function() {
                        f++
                    },
                    incrementPauses: function() {
                        g++,
                        e.incrementPauses()
                    },
                    setPlaylistCounter: function(a) {
                        k = a
                    },
                    incrementPlaylistCounter: function() {
                        k++
                    },
                    addPlaybackTime: function(a) {
                        if (e.getPlaybackTimestamp() >= 0) {
                            var b = a - e.getPlaybackTimestamp();
                            e.setPlaybackTimestamp(-1),
                            e.setPlaybackTime(e.getPlaybackTime() + b),
                            d.setPlaybackTime(d.getPlaybackTime() + b)
                        }
                    },
                    addBufferingTime: function(a) {
                        if (e.getBufferingTimestamp() >= 0) {
                            var b = a - e.getBufferingTimestamp();
                            e.setBufferingTimestamp(-1),
                            e.setBufferingTime(e.getBufferingTime() + b),
                            d.setBufferingTime(d.getBufferingTime() + b)
                        }
                    },
                    getBufferingTime: function() {
                        var a = i;
                        return e.getBufferingTimestamp() >= 0 && (a += +new Date - e.getBufferingTimestamp()),
                        a
                    },
                    setBufferingTime: function(a) {
                        i = a
                    },
                    getPlaybackTime: function() {
                        var a = j;
                        return e.getPlaybackTimestamp() >= 0 && (a += +new Date - e.getPlaybackTimestamp()),
                        a
                    },
                    setPlaybackTime: function(a) {
                        j = a
                    },
                    getStarts: function() {
                        return f
                    },
                    setStarts: function(a) {
                        f = a
                    },
                    getPauses: function() {
                        return g
                    },
                    setPauses: function(a) {
                        g = a
                    },
                    getRebufferCount: function() {
                        return h
                    },
                    incrementRebufferCount: function() {
                        h++
                    },
                    setRebufferCount: function(a) {
                        h = a
                    },
                    didFirstPlayOccurred: function() {
                        return l
                    },
                    setFirstPlayOccurred: function(a) {
                        l = a
                    }
                }),
                e = new r,
                b = {},
                d.reset()
            };
            return a
        }()
          , t = function() {
            var d = function(d, e) {
                function f(a) {
                    var b = 0;
                    if (null != ma)
                        for (var c = 0; c < ma.length; c++) {
                            var d = ma[c]
                              , e = d.playingtime;
                            if (!e || a < e) {
                                b = d.interval;
                                break
                            }
                        }
                    return b
                }
                function g() {
                    l();
                    var a = f(ja.getClip().getPlaybackTime());
                    if (a > 0) {
                        var b = pa > 0 ? pa : a;
                        Z = setTimeout(k, b)
                    }
                    pa = 0
                }
                function h() {
                    l();
                    var a = f(ja.getClip().getPlaybackTime());
                    pa = a - ja.getClip().getPlaybackTime() % a,
                    null != Z && l()
                }
                function j() {
                    pa = 0,
                    ra = 0,
                    qa = 0
                }
                function k() {
                    qa++;
                    var a = N(n.HEART_BEAT, null);
                    B(a),
                    pa = 0,
                    g()
                }
                function l() {
                    null != Z && (clearTimeout(Z),
                    Z = null)
                }
                function m() {
                    r(),
                    Y = setTimeout(p, na)
                }
                function p() {
                    var a = N(n.KEEP_ALIVE, null);
                    B(a),
                    ia++,
                    m()
                }
                function r() {
                    null != Y && (clearTimeout(Y),
                    Y = null)
                }
                function t() {
                    v(),
                    da.isPauseOnBufferingEnabled() && G(o.PAUSED) && (X = setTimeout(u, oa))
                }
                function u() {
                    if ($ == o.PLAYING) {
                        ja.incrementRebufferCount(),
                        ja.incrementPauses();
                        var a = N(n.PAUSE, null);
                        B(a),
                        ia++,
                        $ = o.PAUSED
                    }
                }
                function v() {
                    null != X && (clearTimeout(X),
                    X = null)
                }
                function w(a) {
                    return a == o.PLAYING || a == o.PAUSED
                }
                function x() {
                    T && (clearTimeout(T),
                    T = null)
                }
                function y(a) {
                    return a == n.PLAY ? o.PLAYING : a == n.PAUSE ? o.PAUSED : a == n.BUFFER ? o.BUFFERING : a == n.END ? o.IDLE : null
                }
                function z(a, b, d) {
                    if (x(),
                    d)
                        T = setTimeout(function(a, b) {
                            return function() {
                                z(a, b)
                            }
                        }(a, b), d);
                    else if (J(a)) {
                        var e = L()
                          , f = ga
                          , g = I(b)
                          , h = f >= 0 ? g - f : 0;
                        E(L(), b),
                        F(a, b),
                        M(L()),
                        K(a);
                        for (var i = 0, j = ca.length; i < j; i++)
                            ca[i](e, a, b, h);
                        A(b),
                        ja.setRegisters(b, a),
                        ja.getClip().setRegisters(b, a);
                        var k = N(o.toEventType(a), b);
                        c.extend(k, b),
                        G(V) && (B(k),
                        $ = V,
                        ia++)
                    }
                }
                function A(a) {
                    var b = a.ns_st_mp;
                    null != b && (_ = b,
                    delete a.ns_st_mp),
                    b = a.ns_st_mv,
                    null != b && (aa = b,
                    delete a.ns_st_mv),
                    b = a.ns_st_ec,
                    null != b && (ia = Number(b),
                    delete a.ns_st_ec)
                }
                function B(a, c) {
                    void 0 === c && (c = !0),
                    c && D(a);
                    var d = da.getPixelURL();
                    if (W) {
                        if (!C()) {
                            var e = ta.am
                              , f = ta.et
                              , g = e.newApplicationMeasurement(W, f.HIDDEN, a, d);
                            W.getQueue().offer(g)
                        }
                    } else
                        d && i.httpGet(b(d, a))
                }
                function C() {
                    var a = W.getAppContext()
                      , b = W.getSalt()
                      , c = W.getPixelURL();
                    return null == a || null == b || 0 == b.length || null == c || 0 == c.length
                }
                function D(a) {
                    ba = N(null),
                    c.extend(ba, a)
                }
                function E(a, b) {
                    var d = I(b);
                    if (a == o.PLAYING)
                        ja.addPlaybackTime(d),
                        h(),
                        r();
                    else if (a == o.BUFFERING)
                        ja.addBufferingTime(d),
                        v();
                    else if (a == o.IDLE) {
                        var e = c.getKeys(ja.getClip().getLabels());
                        ja.getClip().reset(e)
                    }
                }
                function F(a, b) {
                    var c = I(b)
                      , d = H(b);
                    ha = d,
                    a == o.PLAYING ? (g(),
                    m(),
                    ja.getClip().setPlaybackTimestamp(c),
                    G(a) && (ja.getClip().incrementStarts(),
                    ja.getStarts() < 1 && ja.setStarts(1))) : a == o.PAUSED ? G(a) && ja.incrementPauses() : a == o.BUFFERING ? (ja.getClip().setBufferingTimestamp(c),
                    la && t()) : a == o.IDLE && j()
                }
                function G(a) {
                    return (a != o.PAUSED && a != o.IDLE || $ != o.IDLE && null != $) && (a != o.BUFFERING && $ != a)
                }
                function H(a) {
                    var b = -1;
                    return a.hasOwnProperty("ns_st_po") && (b = c.getInteger(a.ns_st_po)),
                    b
                }
                function I(a) {
                    var b = -1;
                    return a.hasOwnProperty("ns_ts") && (b = Number(a.ns_ts)),
                    b
                }
                function J(a) {
                    return null != a && L() != a
                }
                function K(a) {
                    V = a,
                    ga = +new Date
                }
                function L() {
                    return V
                }
                function M(a) {
                    U = a
                }
                function N() {
                    var a, b;
                    1 == arguments.length ? (a = o.toEventType(V),
                    b = arguments[0]) : (a = arguments[0],
                    b = arguments[1]);
                    var d = {};
                    if ("undefined" != typeof document) {
                        var e = document;
                        d.c7 = e.URL,
                        d.c8 = e.title,
                        d.c9 = e.referrer
                    }
                    return null != b && c.extend(d, b),
                    d.hasOwnProperty("ns_ts") || (d.ns_ts = String(+new Date)),
                    null != a && !d.hasOwnProperty("ns_st_ev") && (d.ns_st_ev = n.toString(a)),
                    da.isPersistentLabelsShared() && W && c.extend(d, W.getLabels()),
                    c.extend(d, da.getLabels()),
                    O(a, d),
                    ja.createLabels(a, d),
                    ja.getClip().createLabels(a, d),
                    d.hasOwnProperty("ns_st_mp") || (d.ns_st_mp = _),
                    d.hasOwnProperty("ns_st_mv") || (d.ns_st_mv = aa),
                    d.hasOwnProperty("ns_st_ub") || (d.ns_st_ub = "0"),
                    d.hasOwnProperty("ns_st_br") || (d.ns_st_br = "0"),
                    d.hasOwnProperty("ns_st_pn") || (d.ns_st_pn = "1"),
                    d.hasOwnProperty("ns_st_tp") || (d.ns_st_tp = "1"),
                    d.hasOwnProperty("ns_st_it") || (d.ns_st_it = "c"),
                    d.ns_st_sv = q.STREAMSENSE_VERSION,
                    d.ns_type = "hidden",
                    d
                }
                function O(a, b) {
                    var d = b || {};
                    if (d.ns_st_ec = String(ia),
                    !d.hasOwnProperty("ns_st_po")) {
                        var e = ha
                          , f = I(d);
                        (a == n.PLAY || a == n.KEEP_ALIVE || a == n.HEART_BEAT || null == a && V == o.PLAYING) && (e += f - ja.getClip().getPlaybackTimestamp()),
                        d.ns_st_po = c.getInteger(e)
                    }
                    return a == n.HEART_BEAT && (d.ns_st_hc = String(qa)),
                    d
                }
                function P(a) {
                    var b = I(a);
                    b < 0 && (a.ns_ts = String(+new Date))
                }
                function Q(a, b, c) {
                    b = b || {},
                    b.ns_st_ad = 1,
                    a >= n.AD_PLAY && a <= n.AD_CLICK && da.notify(a, b, c)
                }
                function R(a, b) {
                    da.notify(n.CUSTOM, a, b)
                }
                var S, T, U, V, W, X, Y, Z, $, _, aa, ba, ca, da = this, ea = 500, fa = null, ga = 0, ha = 0, ia = 0, ja = null, ka = !0, la = !0, ma = q.DEFAULT_HEARTBEAT_INTERVAL, na = q.DEFAULT_KEEP_ALIVE_INTERVAL, oa = q.DEFAULT_PAUSED_ON_BUFFERING_INTERVAL, pa = 0, qa = 0, ra = 0, sa = !1, ta = {};
                i.autoSelect(),
                c.extend(this, {
                    reset: function(a) {
                        ja.reset(a),
                        ja.setPlaylistCounter(0),
                        ja.setPlaylistId(+new Date + "_1"),
                        ja.getClip().reset(a),
                        null == a || a.isEmpty() ? S = {} : c.filterMap(S, a),
                        ia = 1,
                        qa = 0,
                        h(),
                        j(),
                        r(),
                        v(),
                        x(),
                        V = o.IDLE,
                        U = null,
                        ga = -1,
                        $ = null,
                        _ = q.DEFAULT_PLAYERNAME,
                        aa = q.STREAMSENSE_VERSION,
                        ba = null
                    },
                    setPauseOnBufferingInterval: function(a) {
                        oa = a
                    },
                    getPauseOnBufferingInterval: function() {
                        return oa
                    },
                    setKeepAliveInterval: function(a) {
                        na = a
                    },
                    getKeepAliveInterval: function() {
                        return na
                    },
                    setHeartbeatIntervals: function(a) {
                        ma = a
                    },
                    notify: function() {
                        var a, b, d, e;
                        b = arguments[0],
                        3 == arguments.length ? (d = arguments[1],
                        e = arguments[2]) : (d = {},
                        e = arguments[1]),
                        a = y(b);
                        var f = c.extend({}, d);
                        if (P(f),
                        f.hasOwnProperty("ns_st_po") || (f.ns_st_po = c.getInteger(e).toString()),
                        b == n.PLAY || b == n.PAUSE || b == n.BUFFER || b == n.END)
                            da.isPausePlaySwitchDelayEnabled() && w(V) && w(a) && (V != o.PLAYING || a != o.PAUSED || T) ? z(a, f, ea) : z(a, f);
                        else {
                            var g = N(b, f);
                            c.extend(g, f),
                            B(g, !1),
                            ia++
                        }
                    },
                    getLabels: function() {
                        return S
                    },
                    getState: function() {
                        return V
                    },
                    setLabels: function(a) {
                        null != a && (null == S ? S = a : c.extend(S, a))
                    },
                    getLabel: function(a) {
                        return S[a]
                    },
                    setLabel: function(a, b) {
                        null == b ? delete S[a] : S[a] = b
                    },
                    setPixelURL: function(a) {
                        if (null == a || 0 == a.length)
                            return null;
                        var b = decodeURIComponent || unescape
                          , c = a.indexOf("?");
                        if (c >= 0) {
                            if (c < a.length - 1) {
                                for (var d = a.substring(c + 1).split("&"), e = 0, f = d.length; e < f; e++) {
                                    var g = d[e]
                                      , h = g.split("=");
                                    2 == h.length ? da.setLabel(h[0], b(h[1])) : 1 == h.length && da.setLabel(q.PAGE_NAME_LABEL, b(h[0]))
                                }
                                a = a.substring(0, c + 1)
                            }
                        } else
                            a += "?";
                        return fa = a
                    },
                    getPixelURL: function() {
                        return fa ? fa : "undefined" != typeof ns_p && "string" == typeof ns_p.src ? fa = ns_p.src.replace(/&amp;/, "&").replace(/&ns__t=\d+/, "") : "string" == typeof ns_pixelUrl ? fa = ns_pixelUrl.replace(/&amp;/, "&").replace(/&ns__t=\d+/, "") : null
                    },
                    isPersistentLabelsShared: function() {
                        return ka
                    },
                    setPersistentLabelsShared: function(a) {
                        ka = a
                    },
                    isPauseOnBufferingEnabled: function() {
                        return la
                    },
                    setPauseOnBufferingEnabled: function(a) {
                        la = a
                    },
                    isPausePlaySwitchDelayEnabled: function() {
                        return sa
                    },
                    setPausePlaySwitchDelayEnabled: function(a) {
                        sa = a
                    },
                    setPausePlaySwitchDelay: function(a) {
                        a && a > 0 && (ea = a)
                    },
                    getPausePlaySwitchDelay: function() {
                        return ea
                    },
                    setClip: function(a, b) {
                        var c = !1;
                        return V == o.IDLE && (ja.getClip().reset(),
                        ja.getClip().setLabels(a, null),
                        b && ja.incrementStarts(),
                        c = !0),
                        c
                    },
                    setPlaylist: function(a) {
                        var b = !1;
                        return V == o.IDLE && (ja.incrementPlaylistCounter(),
                        ja.reset(),
                        ja.getClip().reset(),
                        ja.setLabels(a, null),
                        b = !0),
                        b
                    },
                    importState: function(a) {
                        reset();
                        var b = c.extend({}, a);
                        ja.setRegisters(b, null),
                        ja.getClip().setRegisters(b, null),
                        A(b),
                        ia++
                    },
                    exportState: function() {
                        return ba
                    },
                    getVersion: function() {
                        return q.STREAMSENSE_VERSION
                    },
                    addListener: function(a) {
                        ca.push(a)
                    },
                    removeListener: function(a) {
                        ca.splice(c.indexOf(a, ca), 1)
                    },
                    getClip: function() {
                        return ja.getClip()
                    },
                    getPlaylist: function() {
                        return ja
                    }
                }),
                c.extend(this, {
                    adNotify: Q,
                    customNotify: R,
                    viewNotify: function(b, c) {
                        b = b || da.getPixelURL(),
                        b && a(b, c)
                    }
                }),
                ns_.comScore && (ta = ns_.comScore.exports,
                W = ta.c()),
                S = {},
                ia = 1,
                V = o.IDLE,
                ja = new s,
                X = null,
                la = !0,
                Z = null,
                qa = 0,
                j(),
                Y = null,
                T = null,
                sa = !1,
                $ = null,
                ha = 0,
                ca = [],
                da.reset(),
                d && da.setLabels(d),
                e && da.setPixelURL(e)
            };
            return function(a) {
                function b(a, b) {
                    return w[y] || e(a, b)
                }
                function d() {
                    y = -1;
                    for (var a = 0; a <= x; a++)
                        if (w.hasOwnProperty(a)) {
                            y = a;
                            break
                        }
                    return ns_.StreamSense.activeIndex = y,
                    y
                }
                function e(a, b) {
                    return a = a || null,
                    b = b || null,
                    a && "object" == typeof a && (b = a,
                    a = null),
                    w[++x] = new ns_.StreamSense(b,a),
                    d(),
                    w[x]
                }
                function f() {
                    var a = !1
                      , b = y;
                    if ("number" == typeof arguments[0] && isFinite(arguments[0]))
                        b = arguments[0];
                    else if (arguments[0]instanceof ns_.StreamSense)
                        for (var c in w)
                            if (w[c] === arguments[0]) {
                                b = c;
                                break
                            }
                    return w.hasOwnProperty(b) && (a = w[b],
                    delete w[b],
                    a.reset(),
                    d()),
                    a
                }
                function g(a) {
                    return a = a || {},
                    b().setPlaylist(a),
                    b().getPlaylist()
                }
                function h(a, c, d) {
                    return a = a || {},
                    "number" == typeof c && (a.ns_st_cn = c),
                    b().setClip(a, d),
                    b().getClip()
                }
                function i(a, c, d) {
                    return "undefined" != typeof a && (d = d || null,
                    c = c || {},
                    b().notify(a, c, d))
                }
                function j(a) {
                    "undefined" != typeof a && b().setLabels(a)
                }
                function k() {
                    return b().getLabels()
                }
                function l(a) {
                    "undefined" != typeof a && b().getPlaylist().setLabels(a)
                }
                function m() {
                    return b().getPlaylist().getLabels()
                }
                function n(a) {
                    "undefined" != typeof a && b().getClip().setLabels(a)
                }
                function o() {
                    return b().getClip().getLabels()
                }
                function p(a) {
                    return b().reset(a || {})
                }
                function q(a) {
                    return b().getPlaylist().reset(a || {})
                }
                function r(a) {
                    return b().getClip().reset(a || {})
                }
                function s(a) {
                    return a = a || {},
                    b().viewNotify(null, a)
                }
                function t(a, c) {
                    return arguments.length > 2 && (a = arguments[1],
                    c = arguments[2]),
                    a = a || {},
                    "number" == typeof c && (a.ns_st_po = c),
                    b().customNotify(a, c)
                }
                function u() {
                    return b().exportState()
                }
                function v(a) {
                    b().importState(a)
                }
                var w = {}
                  , x = -1
                  , y = -1;
                c.extend(a, {
                    activeIndex: y,
                    newInstance: e,
                    new: e,
                    destroyInstance: f,
                    destroy: f,
                    newPlaylist: g,
                    newClip: h,
                    notify: i,
                    setLabels: j,
                    getLabels: k,
                    setPlaylistLabels: l,
                    getPlaylistLabels: m,
                    setClipLabels: n,
                    getClipLabels: o,
                    resetInstance: p,
                    resetPlaylist: q,
                    resetClip: r,
                    viewEvent: s,
                    customEvent: t,
                    exportState: u,
                    importState: v
                })
            }(d),
            d
        }();
        return t.AdEvents = p,
        t.PlayerEvents = n,
        ns_.StreamingTag = ns_.StreamingTag || function() {
            var a = function() {
                var a = function(a) {
                    function b() {
                        if (!ns_.comScore && c.exists(a))
                            if (u = c.isTrue(a.debug),
                            c.exists(a.customerC2)) {
                                var b = a.secure ? "https://sb" : "http" + ("s" == document.location.href.charAt(4) ? "s://sb" : "://b");
                                s.setPixelURL(b + ".scorecardresearch.com/p?c1=2"),
                                s.setLabel("c2", a.customerC2)
                            } else
                                s.setPixelURL(""),
                                u && console.log("Warning: customerC2 is not provided (or incorrect) in the StreamingTag configuration.");
                        s.setLabel("ns_st_it", "r")
                    }
                    function d(a) {
                        return c.exists(a) || (a = {}),
                        c.exists(a.ns_st_ci) || (a.ns_st_ci = "0"),
                        c.exists(a.c3) || (a.c3 = "*null"),
                        c.exists(a.c4) || (a.c4 = "*null"),
                        c.exists(a.c6) || (a.c6 = "*null"),
                        a
                    }
                    function e(a) {
                        return m > 0 && a >= m ? p += a - m : p = 0,
                        p
                    }
                    function f(a) {
                        s.getState() != o.IDLE && s.getState() != o.PAUSED ? s.notify(n.END, e(a)) : s.getState() == o.PAUSED && s.notify(n.END, p)
                    }
                    function g(a) {
                        return h("ns_st_ci", q, a) && h("c3", q, a) && h("c4", q, a) && h("c6", q, a)
                    }
                    function h(a, b, d) {
                        if (c.exists(a) && c.exists(b) && c.exists(d)) {
                            var e = b[a]
                              , f = d[a];
                            return c.exists(e) && c.exists(f) && e === f
                        }
                        return !1
                    }
                    function i(a, b) {
                        f(a),
                        l++;
                        var d = {
                            ns_st_cn: l,
                            ns_st_pn: "1",
                            ns_st_tp: "0"
                        };
                        c.extend(d, b),
                        s.setClip(d),
                        q = b,
                        m = a,
                        p = 0,
                        s.notify(n.PLAY, p)
                    }
                    function j(a) {
                        var b = +new Date;
                        f(b),
                        l++,
                        a = d(a);
                        var e = {
                            ns_st_cn: l,
                            ns_st_pn: "1",
                            ns_st_tp: "1",
                            ns_st_ad: "1"
                        };
                        c.extend(e, a),
                        s.setClip(e),
                        p = 0,
                        s.notify(n.PLAY, p),
                        m = b,
                        r = !1
                    }
                    function k(a, b) {
                        var c = +new Date;
                        a = d(a),
                        w == v.None && (w = b),
                        r && w == b && g(a) ? (s.getClip().setLabels(a),
                        s.getState() != o.PLAYING && (m = c,
                        s.notify(n.PLAY, p))) : i(c, a),
                        r = !0,
                        w = b
                    }
                    var l = 0
                      , m = 0
                      , p = 0
                      , q = null
                      , r = !1
                      , s = new t
                      , u = !1
                      , v = {
                        None: 0,
                        AudioContent: 1,
                        VideoContent: 2
                    }
                      , w = v.None;
                    c.extend(this, {
                        playAdvertisement: function() {
                            u && console && console.warn("Calling deprecated function 'playAdvertisement'. Please call 'playVideoAdvertisement' or 'playAudioAdvertisement' functions instead.");
                            var a = {
                                ns_st_ct: "va"
                            };
                            j(a)
                        },
                        playVideoAdvertisement: function(a) {
                            var b = {
                                ns_st_ct: "va"
                            };
                            a && c.extend(b, a),
                            j(b)
                        },
                        playAudioAdvertisement: function(a) {
                            var b = {
                                ns_st_ct: "aa"
                            };
                            a && c.extend(b, a),
                            j(b)
                        },
                        playContentPart: function(a) {
                            u && console && console.warn("Calling deprecated function 'playContentPart'. Please call 'playVideoContentPart' or 'playAudioContentPart' functions instead.");
                            var b = {
                                ns_st_ct: "vc"
                            };
                            a && c.extend(b, a),
                            k(b, v.VideoContent)
                        },
                        playVideoContentPart: function(a) {
                            var b = {
                                ns_st_ct: "vc"
                            };
                            a && c.extend(b, a),
                            k(b, v.VideoContent)
                        },
                        playAudioContentPart: function(a) {
                            var b = {
                                ns_st_ct: "ac"
                            };
                            a && c.extend(b, a),
                            k(b, v.AudioContent)
                        },
                        stop: function() {
                            var a = +new Date;
                            s.notify(n.PAUSE, e(a))
                        }
                    }),
                    b()
                };
                return function(a) {}(a),
                a
            }();
            return a
        }(),
        t
    }(),
    define("vendor/stream_sense", [], function() {
        "use strict";
        return window.ns_
    }),
    define("lib/videoMetrix", ["lodash", "lib/utils/ted", "vendor/stream_sense", "exports"], function(a, b, c, d) {
        "use strict";
        d.init = function(a) {
            this._init(),
            this._setContext(a)
        }
        ,
        d.start = function() {
            this._play()
        }
        ,
        d.stop = function() {
            this._tag && this._tag.stop()
        }
        ,
        d.startAd = function() {
            this._asset.isInAd = !0,
            this._play()
        }
        ,
        d.stopAd = function() {
            this._asset.isInAd = !1,
            this._play()
        }
        ,
        d._meta = null,
        d._asset = null,
        d._tag = null,
        d._init = a.once(function() {
            d._tag = new c.StreamingTag({
                customerC2: b("csClientId")
            })
        }),
        d._setContext = function(a) {
            var b = {};
            a.talkId && (b.ns_st_ci = a.talkId),
            this._meta = b,
            this._asset = {
                isInAd: !1,
                isVideo: !0
            }
        }
        ,
        d._reset = function() {
            d._meta = null,
            d._asset = null,
            d._tag = null
        }
        ,
        d._play = function() {
            this._tag && (this._asset.isInAd ? this._asset.isVideo ? this._tag.playVideoAdvertisement() : this._tag.playAudioAdvertisement() : this._asset.isVideo ? this._tag.playVideoContentPart(this._meta) : this._tag.playAudioContentPart(this._meta))
        }
    }),
    define("lib/widgets/player/cs-tracker", ["jquery", "lib/utils/ted", "lib/videoMetrix"], function(a, b, c) {
        "use strict";
        function d(b) {
            b._isInternal && (this._data = {
                lastMetaTalkId: null,
                lastPlayTalkId: null
            },
            this._widget = b,
            this._addHandlers(),
            a(window).unload(function() {
                c.stop()
            }))
        }
        return d.prototype._sendViewBeacon = function(a) {
            var c = window.COMSCORE;
            c && c.beacon && c.beacon({
                c1: "1",
                c2: b("csClientId"),
                c5: "02",
                c6: a
            })
        }
        ,
        d.prototype._sendPostrollBeacon = function() {
            var a = window.COMSCORE;
            a && a.beacon && a.beacon({
                c1: "1",
                c2: b("csClientId"),
                c5: "10"
            })
        }
        ,
        d.prototype._onTalkPlay = function(a) {
            this._sendViewBeacon(a)
        }
        ,
        d.prototype._addHandlers = function() {
            var a = this
              , b = {
                playertalk: function(a, b) {
                    c.init({
                        talkId: b.id
                    })
                },
                playerplay: function() {
                    var b = a._widget.options.currentTalk.id;
                    a._data.lastPlayTalkId !== b && (a._onTalkPlay(b),
                    a._data.lastPlayTalkId = b),
                    c.start()
                },
                playerpause: function() {
                    c.stop()
                },
                playercomplete: function() {
                    c.stop()
                },
                playerprerollstart: function() {
                    c.startAd()
                },
                playerprerollcomplete: function() {
                    c.stopAd()
                },
                playerpostrollstart: function() {
                    a._sendPostrollBeacon(),
                    c.startAd()
                },
                playerpostrollcomplete: function() {
                    c.stopAd()
                }
            };
            this._handlers = b,
            this._widget._on(b)
        }
        ,
        d
    }),
    define("lib/abby", ["lib/utils/ted", "exports"], function(a, b) {
        "use strict";
        b.getTests = function() {
            var b = a("abby");
            return b && b.tests || {}
        }
        ,
        b.getVariation = function(a) {
            return b.getTests()[a]
        }
        ,
        b.isVariation = function(a, c) {
            return b.getVariation(a) === c
        }
    }),
    define("lib/widgets/player/qa-tracker", ["jquery", "lodash", "lib/abby", "lib/errorCollector", "lib/utils/is_mobile"], function(a, b, c, d, e) {
        "use strict";
        function f(a) {
            return b.isUndefined(a) ? "" : a > 9999 ? "9999" : (a < 0 ? "-" : "") + ("0000" + Math.floor(Math.abs(a))).slice(-4) + ("" + a % 1).slice(1, 6)
        }
        function g(a) {
            return b.isUndefined(a) ? "" : a
        }
        function h(a, c) {
            return a !== -1 && !b.isUndefined(a) && !b.isUndefined(c) && a !== c && (c === -1 ? "dynamic" : c > a ? "up" : "down")
        }
        function i(a) {
            this._widget = a,
            this._resetMarks(),
            this._addHandlers()
        }
        return i.prototype._log = function(b) {
            var h = "unknown";
            this.marks.talkComplete ? h = "complete" : this.marks.playable ? h = "playable" : this.marks.playable === !1 && (h = "unplayable");
            var i = "unknown";
            this.marks.rebuffering ? i = "rebuffering" : this.marks.buffering && (i = "buffering");
            var j;
            "unplayable" === h && this.marks.bufferingStarted && this.marks.requested && this.marks.bufferingStarted > this.marks.requested && (j = (+new Date - +this.marks.bufferingStarted) / 1e3);
            var k = a.extend({
                context: "ted-com-player-qa",
                pev: "014",
                playerMode: this._widget.mode(),
                bufferState: h,
                bufferType: i,
                bufferDuration: f(j),
                bufferFuture: f(this.marks.bufferFuture),
                bufferPast: f(this.marks.bufferPast),
                intolerantBufferFuture: f(this.marks.intolerantBufferFuture),
                intolerantBufferPast: f(this.marks.intolerantBufferPast),
                currentTime: f(this.marks.currentTime),
                playbackRate: this._widget.playbackRate(),
                playToken: g(this.marks.playToken),
                levelCurrent: g(this.marks.levelCurrent),
                levelNext: g(this.marks.levelNext),
                levelLoad: g(this.marks.levelLoad),
                levelNextLoad: g(this.marks.levelNextLoad),
                deviceType: e() ? "mobile" : "desktop",
                error: !1,
                throttled: !1,
                talkId: this.marks.talkId,
                message: "Video QA Event",
                multiple: !1
            }, b || {});
            if (k.multiple || !this.marks[k.message]) {
                this.marks[k.message] = !0;
                var l = c.getVariation("html5_video");
                if ("desktop" === k.deviceType) {
                    switch (k.hvv = l,
                    l) {
                    case "a":
                        if ("flash" !== k.playerMode)
                            return;
                        break;
                    case "b":
                    case "c":
                    case "d":
                        if ("hlsjs" !== k.playerMode)
                            return;
                        break;
                    default:
                        return
                    }
                    delete k.multiple,
                    d.log(k.message, k)
                }
            }
        }
        ,
        i.prototype._resetMarks = function() {
            this.marks = {
                currentTime: "",
                talkId: ""
            }
        }
        ,
        i.prototype._addHandlers = function() {
            function a() {
                b.marks.playable && b.marks.started && b._log({
                    message: "Play Start"
                })
            }
            var b = this
              , c = {
                playercurrenttime: function(a, c) {
                    b.marks.currentTime = c.currentTime
                },
                playertalk: function(a, c) {
                    b.marks.talkId = c.id
                },
                playerbufferunplayable: function() {
                    b.marks.playable = !1,
                    b.marks.bufferingStarted = new Date
                },
                playerbufferplayable: function() {
                    b.marks.playable = !0,
                    b.marks.bufferingStarted = null,
                    b.marks.buffering = !1,
                    b.marks.rebuffering = !1,
                    a()
                },
                playerplaytoken: function(a, c) {
                    b.marks.playToken = c.playToken
                },
                playerprolongedbuffer: function(a, c) {
                    var d = c.duration;
                    b.marks.buffering = !0,
                    !b.marks.talkComplete && d && d % 2e3 && b._log({
                        message: "Prolonged Buffer: " + d
                    })
                },
                playerprolongedrebuffer: function(a, c) {
                    var d = c.duration;
                    b.marks.rebuffering = !0,
                    !b.marks.talkComplete && d && d % 2e3 && b._log({
                        message: "Prolonged Rebuffer: " + d
                    })
                },
                playererror: function(a, c) {
                    c.error && "Error playing video" === c.error.message && 3 === c.error.code && b._log({
                        message: "Decode Error"
                    })
                },
                playermetricsdata: function(a, c) {
                    if (c && c.metricsData) {
                        var d = c.metricsData
                          , e = b.marks.levelLoad
                          , f = b.marks.levelNextLoad;
                        b.marks.bandwidth = d.bandwidth,
                        b.marks.bufferFuture = d.bufferLength,
                        b.marks.bufferPast = d.backBufferLength,
                        b.marks.intolerantBufferFuture = d.intolerantBufferLength,
                        b.marks.intolerantBufferPast = d.intolerantBackBufferLength,
                        b.marks.levelCurrent = d.currentLevel,
                        b.marks.levelNext = d.nextLevel,
                        b.marks.levelLoad = d.loadLevel,
                        b.marks.levelNextLoad = d.nextLoadLevel;
                        var g = h(f, d.nextLoadLevel);
                        g && b._log({
                            multiple: !0,
                            message: "Load Level Switching",
                            levelDirection: g
                        });
                        var i = h(e, d.loadLevel);
                        i && b._log({
                            multiple: !0,
                            message: "Load Level Switched",
                            levelDirection: i
                        })
                    }
                },
                playerrequestplay: function() {
                    b.marks.requested = b.marks.requested || new Date,
                    b._log({
                        message: "Play Request"
                    })
                },
                playerplay: function() {
                    b.marks.started = !0,
                    a()
                },
                playertalkcomplete: function() {
                    b.marks.talkComplete = !0,
                    b._log({
                        message: "Talk Complete"
                    })
                }
            };
            b._widget._on(c),
            b._widget._on(window, {
                beforeunload: function() {
                    b.marks.requested && b._log({
                        message: "Talk Exit"
                    })
                }
            })
        }
        ,
        i
    }),
    define("lib/utils/f", [], function() {
        "use strict";
        var a = function(a, b) {
            var c = Array.prototype.slice.call(arguments, 2);
            return function() {
                return a[b].apply(a, c)
            }
        };
        return a.create = function(a) {
            return function() {
                var b = arguments
                  , c = function() {
                    return a.apply(this, b)
                };
                return c.prototype = a.prototype,
                new c
            }
        }
        ,
        a.get = function(a) {
            return function(b) {
                return b.get && "function" == typeof b.get ? b.get(a) : b[a] && "function" == typeof b[a] ? b[a].call(b) : b[a]
            }
        }
        ,
        a.splat = function() {
            var b = Array.prototype.slice.call(arguments);
            return function(c) {
                for (var d = [], e = 0; e < b.length; e++)
                    d.push(a.get(b[e]).call(c));
                return d
            }
        }
        ,
        a.send = function(a) {
            var b = Array.prototype.slice.call(arguments, 1);
            return function(c) {
                return c[a].apply(c, b)
            }
        }
        ,
        a.and = function() {
            var a = Array.prototype.slice.call(arguments);
            return function(b) {
                for (var c = !0, d = 0; d < a.length; d++)
                    c = c && a[d].call(null, b);
                return c
            }
        }
        ,
        a.not = function(a) {
            return function() {
                return !a.apply(null, arguments)
            }
        }
        ,
        a.ascending = function(a, b) {
            return a - b
        }
        ,
        a.descending = function(a, b) {
            return b - a
        }
        ,
        a.truthy = function(a) {
            return !!a
        }
        ,
        a.falsey = a.not(a.truthy),
        a
    }),
    define("player/topicFactory", ["jquery"], function(a) {
        "use strict";
        function b(c, d, e) {
            var f, g;
            for (f = 0,
            g = d.length; f < g; f++)
                a.isArray(d[f]) ? b(c, d[f], e) : d[f].apply(c, e)
        }
        return function(c) {
            var d = {};
            return function(e) {
                var f, g = e && d[e];
                if (!g) {
                    f = a.Callbacks(c && c.hasOwnProperty(e) ? c[e] : "memory");
                    var h = function() {
                        var a = Array.prototype.slice.call(arguments, 0);
                        try {
                            f.fire.apply(f, a)
                        } catch (a) {
                            window.console && window.console.warn && window.console.warn(a)
                        }
                    };
                    g = {
                        publish: h,
                        subscribe: f.add,
                        unsubscribe: f.remove,
                        once: function() {
                            function a() {
                                b(f, c, arguments),
                                f.remove(a)
                            }
                            var c = arguments;
                            return f.add(a)
                        },
                        publishUnique: function() {
                            var a;
                            return !!window.JSON && function() {
                                var b = Array.prototype.slice.call(arguments, 0)
                                  , c = JSON.stringify(b);
                                c !== a && (a = c,
                                h.apply(f, b))
                            }
                        }()
                    };
                    var i = null;
                    f.add(function(a) {
                        i = a
                    }),
                    g.read = function() {
                        return i
                    }
                    ,
                    e && (d[e] = g)
                }
                return g
            }
        }
    }),
    define("player/getFlashVars", ["jquery"], function(a) {
        "use strict";
        function b(a) {
            var b = [];
            for (var c in a)
                a.hasOwnProperty(c) && b.push(c + "=" + encodeURIComponent(a[c]));
            return b.join("&")
        }
        return function(a) {
            var c = a.options;
            return b({
                serviceHost: "https://www.ted.com",
                volume: a.config.get("volume"),
                autoplay: 0,
                supressSubtitles: !c.customSubtitles,
                fullscreenEnabled: a.canFullScreen ? 0 : 1
            })
        }
    }),
    function(a, b) {
        "object" == typeof exports && "undefined" != typeof module ? b(exports) : "function" == typeof define && define.amd ? define("ted-master-ad-interface", ["exports"], b) : b(a.mai = a.mai || {})
    }(this, function(a) {
        "use strict";
        function b(a) {
            if (a && "undefined" != typeof Image) {
                var b = new Image;
                b.src = a
            }
        }
        function c(a) {
            var b = void 0
              , c = void 0;
            try {
                if ("undefined" != typeof DOMParser)
                    b = new DOMParser,
                    c = b.parseFromString(a, "text/xml");
                else {
                    if ("undefined" == typeof ActiveXObject)
                        throw new Error("XML parsing unavailable");
                    c = new ActiveXObject("Microsoft.XMLDOM"),
                    c.async = "false",
                    c.loadXML(a)
                }
            } catch (a) {
                c = void 0
            }
            if (!c)
                throw new Error("XML could not be parsed");
            return c
        }
        function d(a) {
            var b = void 0;
            try {
                if ("undefined" != typeof XMLSerializer) {
                    var c = new XMLSerializer;
                    b = c.serializeToString(a.documentElement)
                } else {
                    if ("undefined" == typeof ActiveXObject)
                        throw new Error("XML serialization unavailable");
                    b = a.xml
                }
            } catch (a) {
                b = void 0
            }
            if (!b)
                throw new Error("XML could not be serialized");
            return b
        }
        function e(a, b) {
            var c = new XMLHttpRequest;
            if ("withCredentials"in c)
                c.withCredentials = !0,
                c.open(a, b, !0);
            else {
                if ("undefined" == typeof XDomainRequest)
                    throw new Error("No CORS/XHR support");
                c = new XDomainRequest,
                c.open(a, b)
            }
            return c
        }
        function f(a) {
            return new Promise(function(b, c) {
                var d = void 0
                  , f = setTimeout(function() {
                    c(new Error("Request timed out"))
                }, 5e3);
                try {
                    d = e("GET", a, !0)
                } catch (a) {
                    c(a)
                }
                d.addEventListener("readystatechange", function() {
                    4 === d.readyState && (clearTimeout(f),
                    200 === d.status ? b(d) : c(new Error("HTTP status: " + d.status + "; message: " + d.statusText)))
                }),
                d.send()
            }
            )
        }
        function g(a) {
            return new Promise(function(b, c) {
                f(a).then(function(a) {
                    try {
                        var d = JSON.parse(a.response);
                        b(d)
                    } catch (a) {
                        c(new Error("JSON response could not be parsed"))
                    }
                }).catch(c)
            }
            )
        }
        function h(a) {
            return new Promise(function(b, d) {
                f(a).then(function(a) {
                    try {
                        var e = c(a.responseText);
                        b(e)
                    } catch (a) {
                        d(a)
                    }
                }).catch(d)
            }
            )
        }
        function i(a) {
            return String(a).replace(/[!+#*~;^()<>[\]]/g, "-")
        }
        function j(a) {
            return i(a).replace(" ", "-")
        }
        function k() {
            return Math.floor(999999 * Math.random())
        }
        function l(a) {
            return a.map(function(a) {
                return a[0] + "x" + a[1]
            }).join("|")
        }
        function m(a) {
            return a.split("|").map(function(a) {
                return a.split("x").map(function(a) {
                    return parseInt(a, 10)
                })
            })
        }
        function n(a) {
            return Object.getOwnPropertyNames(a).map(function(b) {
                return Ha(j(b)) + "=" + Ha(i(a[b]))
            }).join("&")
        }
        function o(a) {
            var b = {};
            return a.split("&").forEach(function(a) {
                var c = a.split("=", 2)
                  , d = ya(c, 2)
                  , e = d[0]
                  , f = d[1];
                b[Ia(e)] = Ia(f)
            }),
            b
        }
        function p() {
            var a = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {};
            ["adUnitId", "sizes"].forEach(function(b) {
                if (!a[b])
                    throw new Error("'" + b + "' is a required option")
            });
            var b = {
                iu: a.adUnitId,
                sz: l(a.sizes)
            };
            if (a.targeting) {
                var c = n(a.targeting);
                c && (b.t = c)
            }
            return b
        }
        function q() {
            var a = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : ""
              , b = {};
            return a.split("&").forEach(function(a) {
                var c = a.split("=", 2)
                  , d = ya(c, 2)
                  , e = d[0]
                  , f = d[1];
                switch (e) {
                case "iu":
                    b.adUnitId = Ia(f);
                    break;
                case "sz":
                    b.sizes = m(Ia(f));
                    break;
                case "t":
                    b.targeting = o(Ia(f))
                }
            }),
            b
        }
        function r(a) {
            var b = Object.getOwnPropertyNames(a).map(function(b) {
                return Ha(b) + "=" + Ha(a[b])
            });
            return b.push("c=" + k()),
            "https://pubads.g.doubleclick.net/gampad/adx?" + b.join("&")
        }
        function s() {
            var a = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {};
            return r(p(a))
        }
        function t(a) {
            var b = String(a).match(/\?[^#]*/);
            return b && b[0] || ""
        }
        function u(a, b) {
            var c = t(a).match(new RegExp("[?&]" + Ja(b) + "=([^&]*)"));
            return Ka(c && c[1] || "")
        }
        function v(a, b) {
            return !!t(a).match(new RegExp("[?&]" + Ja(b) + "(?:[?[&=].*)?$"))
        }
        function w(a, b, c) {
            return "" + String(a).match(/[^#]*/)[0] + (String(a).includes("?") ? "&" : "?") + Ja(b) + "=" + Ja(c)
        }
        function x(a) {
            return !!String(a).match(/^(https?:)?\/\//)
        }
        function y(a) {
            return a && x(a) ? a : void 0
        }
        function z(a) {
            window.googletag = window.googletag || {};
            var b = window.googletag;
            b.cmd = b.cmd || [],
            b.cmd.push(function() {
                return a(b)
            })
        }
        function A() {
            var a = Oa[0]
              , b = a.resolve
              , c = setTimeout(function() {
                Pa.concat(Oa.splice(0, 1)),
                a.reject(new Error("Master ad request timed out"))
            }, 5e3);
            a.resolve = function(a) {
                clearTimeout(c),
                b(a)
            }
            ,
            a.work()
        }
        function B(a) {
            return new Promise(function(b, c) {
                Oa.push({
                    work: a,
                    resolve: b,
                    reject: c
                }),
                1 === Oa.length && A()
            }
            )
        }
        function C(a) {
            var b = Oa.splice(0, 1)[0];
            return b || (b = Pa.pop()),
            b ? void b.resolve(a) : void (window.console && window.console.log("MAI gptProxy received data for an unknown master ad.\n" + JSON.stringify(a)))
        }
        function D() {
            return "undefined" != typeof location && location || ""
        }
        function E(a) {
            return u(D(), a)
        }
        function F(a) {
            return v(D(), a)
        }
        function G(a) {
            var b = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : function(a) {
                return a
            }
            ;
            return (a || []).reduce(function(a, c, d) {
                var e = a;
                return e[b(d)] = c,
                e
            }, {})
        }
        function H() {
            var a = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {}
              , b = Object.getOwnPropertyNames(a).map(function(b) {
                return Za(b) + "=" + Za(a[b])
            });
            return b.join("&")
        }
        function I() {
            var a = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {}
              , b = Ga.extends({
                context: "mai",
                location: "undefined" == typeof window ? "unknown" : window.location.href
            }, a);
            return "https://error-collector.ted.com/?" + H(b)
        }
        function J() {
            var a = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {};
            b(I(a))
        }
        function K(a) {
            var b = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};
            a && !a.startsWith("https://") && J(Ga.extends({
                error: "insecure",
                url: a
            }, b))
        }
        function L() {
            var a = {};
            return ["postrollType", "postrollUrl"].forEach(function(b) {
                var c = "" + cb + b;
                F(c) && (a[b] = E(c))
            }),
            a
        }
        function M() {
            var a = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {};
            return Ga.extends({}, bb, a, a.allowUrlOverrides ? L() : {})
        }
        function N(a) {
            function b() {
                "complete" === document.readyState && (a(),
                document.removeEventListener("readystatechange", b))
            }
            document.addEventListener("readystatechange", b),
            b()
        }
        function O(a) {
            var b = a.unitId
              , c = a.sizes
              , d = a.targeting
              , e = a.lineItemId
              , f = (new Date).getTime()
              , g = {
                gdfp_req: "1",
                correlator: Math.floor(999999 * Math.random()),
                output: "json_html",
                callback: "callbackProxy",
                impl: "fif",
                eid: "108809080,108809155,21060003",
                sc: "0",
                sfv: "1-0-6",
                iu: b,
                sz: (c || []).map(function(a) {
                    return a.join("x")
                }).join(","),
                scp: Object.getOwnPropertyNames(d || {}).map(function(a) {
                    return a + "=" + d[a]
                }).join("&"),
                cookie_enabled: "1",
                lmt: Math.floor(f / 1e3),
                dt: f,
                cc: "100",
                frm: "20",
                biw: "1362",
                bih: "949",
                oid: "3",
                adx: "931",
                ady: "555",
                adk: "4270558784",
                gut: "v2",
                ifi: "2",
                u_tz: "-480",
                u_his: "1",
                u_java: "true",
                u_h: "1050",
                u_w: "1680",
                u_ah: "987",
                u_aw: "1680",
                u_cd: "24",
                u_nplug: "1",
                u_nmime: "43",
                u_sd: "2",
                flash: "0",
                url: window.location.href,
                dssz: "26",
                icsg: "544",
                std: "36",
                vrg: "110",
                vrp: "110",
                ga_vid: "544535009.1465231494",
                ga_sid: "1487263339",
                ga_hid: "447020018",
                userAgent: window.navigator.userAgent,
                lid: e,
                base_url: "https://securepubads.g.doubleclick.net/gampad/ads"
            }
              , h = Object.getOwnPropertyNames(g).map(function(a) {
                return lb(a) + "=" + lb(g[a])
            }).join("&");
            return "https://www.google.com/dfp#delivery/AdSimulator/" + h
        }
        function P(a) {
            return "https://www.google.com/dfp/main#delivery/LineItemDetail/lineItemId=" + a
        }
        function Q(a) {
            return "https://www.google.com/dfp/main#delivery/CreativeDetail/creativeId=" + a
        }
        function R(a) {
            return "https://www.google.com/dfp#delivery/TroubleshootingTools/videoTag=" + lb(a)
        }
        function S(a) {
            return q(String(a).split("?").pop()) || {}
        }
        function T(a) {
            return a.wrapper ? T(a.wrapper) : a
        }
        function U(a) {
            var b = S(a.masterUrl)
              , c = S(a.master && a.master.prerollUrl)
              , d = a.postrollError && a.postrollError.wrapper || a.postroll
              , e = d && T(d);
            return {
                isError: a.masterError || a.prerollError || a.postrollError,
                masterError: a.masterError && a.masterError.message,
                prerollError: a.prerollError && a.prerollError.message,
                postrollError: a.postrollError && a.postrollError.message,
                masterUrl: a.masterUrl,
                masterAdSimulatorUrl: O({
                    unitId: b.adUnitId,
                    sizes: b.sizes,
                    targeting: b.targeting,
                    lineItemId: a.master.lineItemId
                }),
                masterAdUnitId: b.adUnitId || "",
                masterAdTargeting: b.targeting || {},
                masterAdSizes: (b.sizes || []).map(function(a) {
                    return a.join("x")
                }).join(", "),
                masterLineItemId: a.master.lineItemId,
                masterCreativeId: a.master.creativeId,
                masterTargetingValue: a.master.companionTargetingValue,
                prerollUrl: a.master.prerollUrl && a.addAdUnitToUrl(a.master.prerollUrl),
                prerollAdSimulatorUrl: O({
                    unitId: b.adUnitId,
                    sizes: c.sizes,
                    targeting: c.targeting,
                    lineItemId: a.preroll.lineItemId
                }),
                prerollLineItemId: a.preroll.lineItemId,
                prerollCreativeId: a.preroll.creativeId,
                prerollMdpi: a.preroll.mdpiCreative,
                prerollHdpi: a.preroll.hdpiCreative,
                prerollXhdpi: a.preroll.xhdpiCreative,
                prerollXxhdpi: a.preroll.xxhdpiCreative,
                prerollParameter: a.preroll.hlsParamValue || "",
                postrollUrl: a.master.postrollUrl && a.addAdUnitToUrl(a.master.postrollUrl),
                postrollAdSystem: d.adSystem || "",
                postrollAdId: d.adId || "",
                postrollAdTitle: d.adTitle || "",
                postrollIsGdfp: "GDFP" === e.adSystem,
                postrollLineItemId: e.lineItemId || "",
                postrollCreativeId: e.creativeId || "",
                postrollParameter: e.hlsParamValue || ""
            }
        }
        function V(a) {
            var b = U(a);
            return '\n    <div style="background:#EAEAEA; border:1px solid #DBDBDB; border-radius:5px; margin:10px; overflow:hidden; padding:10px;">\n      <div style="' + jb + " background:" + (b.isError ? "#500" : "#555") + '; color:#FFF;">Master</div>\n\n      <div style="' + eb + '">Request:</div>\n\n      <div style="' + fb + '">\n        <a href="' + b.masterAdSimulatorUrl + '" target=_blank>Open in Ad Request Simulator</a>\n      </div>\n\n      <div style="' + fb + '">\n        <span style="' + hb + '">Ad Request URL:</span>\n        <a href="' + b.masterUrl + '">' + b.masterUrl + '</a>\n      </div>\n\n      <div style="' + fb + '">\n        <span style="' + hb + '">Ad Unit:</span>\n        ' + b.masterAdUnitId + '\n      </div>\n\n      <div style="' + fb + '">\n        <span style="' + hb + '">Creative Size:</span>\n        [ ' + b.masterAdSizes + ' ]\n      </div>\n\n      <div style="' + fb + '">\n        <span style="' + hb + '">Key/Value Pairs:</span>\n        <table style="border-collapse:collapse; margin:0 0 10px -5px;">\n          <thead>\n            <tr style="border-bottom:1px solid #CCC;">\n              <th style="border-right: 1px solid #CCC; ' + kb + '">Key:</th>\n              <th style="' + kb + '">Value:</th>\n            </tr>\n          </thead>\n          <tbody>\n            ' + Object.entries(b.masterAdTargeting).map(function(a) {
                var b = ya(a, 2)
                  , c = b[0]
                  , d = b[1];
                return '\n              <tr>\n                <td style="border-right:1px solid #CCC; ' + kb + '">' + c + '</td>\n                <td style="' + kb + '">' + d + "</td>\n              </tr>\n            "
            }).join("") + '\n          </tbody>\n        </table>\n      </div>\n\n      <div style="' + eb + '">Response:</div>\n\n      ' + (b.masterError ? '\n        <div style="' + gb + '">\n          <strong>Error:</strong><br />\n          ' + b.masterError + "\n        </div>\n      " : '\n        <div style="' + fb + '">\n          <span style="' + hb + '">Line Item ID:</span>\n          <a href="' + P(b.masterLineItemId) + '" target="_blank">' + b.masterLineItemId + '</a>\n        </div>\n\n        <div style="' + fb + '">\n          <span style="' + hb + '">Creative ID:</span>\n          <a href="' + Q(b.masterCreativeId) + '" target="_blank">' + b.masterCreativeId + '</a>\n        </div>\n\n        <div style="' + fb + '">\n          <span style="' + hb + '">Targeting Value:</span>\n          "' + b.masterTargetingValue + '"\n        </div>\n\n        <!-- ---------- ---------- Preroll ---------- ---------- -->\n\n        <div style="' + ib + '">\n          <div style="' + jb + ' background:#CCC;">Preroll</div>\n\n          <div style="' + fb + '">\n            <a href="' + b.prerollAdSimulatorUrl + '" target=_blank>Open in Ad Request Simulator</a>\n          </div>\n\n          <div style="' + fb + '">\n            <span style="' + hb + '">Ad Request:</span>\n            <a href="' + b.prerollUrl + '">' + b.prerollUrl + "</a>\n          </div>\n\n          " + (b.prerollError ? '\n            <div style="' + gb + '">\n              <strong>Error:</strong><br />\n              ' + b.prerollError + "\n            </div>\n          " : "\n            " + (b.prerollLineItemId ? '\n              <div style="' + fb + '">\n                <span style="' + hb + '">Line Item ID:</span>\n                <a href="' + P(b.prerollLineItemId) + '" target="_blank">' + b.prerollLineItemId + '</a>\n              </div>\n\n              <div style="' + fb + '">\n                <span style="' + hb + '">Creative ID:</span>\n                <a href="' + Q(b.prerollCreativeId) + '" target="_blank">' + b.prerollCreativeId + "</a>\n              </div>\n            " : "") + '\n\n            <div style="' + fb + '">\n              <span style="' + hb + '">Creatives:</span>\n              ' + (b.prerollMdpi ? '<a href="' + b.prerollMdpi + '">MDPI</a>' : "") + "\n              " + (b.prerollHdpi ? '<a href="' + b.prerollHdpi + '">HDPI</a>' : "") + "\n              " + (b.prerollXhdpi ? '<a href="' + b.prerollXhdpi + '">XHDPI</a>' : "") + "\n              " + (b.prerollXxhdpi ? '<a href="' + b.prerollXxhdpi + '">XXHDPI</a>' : "") + '\n            </div>\n\n            <div style="' + fb + '">\n              <span style="' + hb + '">Preroll Parameter:</span>\n              ' + b.prerollParameter + "\n            </div>\n          ") + '\n        </div>\n\n        <!-- ---------- ---------- Postroll ---------- ---------- -->\n\n        <div style="' + ib + '">\n          <div style="' + jb + ' background:#CCC;">Postroll</div>\n\n          <div style="' + fb + '">\n            <a href="' + R(b.postrollUrl) + '" target=_blank>Open in Delivery Inspector</a>\n          </div>\n\n          <div style="' + fb + '">\n            <span style="' + hb + '">Ad Request:</span>\n            <a href="' + b.postrollUrl + '">' + b.postrollUrl + "</a>\n          </div>\n\n          " + (b.postrollError ? '\n            <div style="' + gb + '">\n              <strong>Error:</strong><br />\n              ' + b.postrollError + "\n            </div>\n          " : "") + "\n\n          " + (b.postrollIsGdfp ? '\n            <div style="' + fb + '">\n              <span style="' + hb + '">Line Item ID:</span>\n              <a href="' + P(b.postrollLineItemId) + '" target="_blank">' + b.postrollLineItemId + '</a>\n            </div>\n\n            <div style="' + fb + '">\n              <span style="' + hb + '">Creative ID:</span>\n              <a href="' + Q(b.postrollCreativeId) + '" target="_blank">' + b.postrollCreativeId + '</a>\n            </div>\n\n            <div style="' + fb + '">\n              <span style="' + hb + '">Postroll Parameter:</span>\n              ' + b.postrollParameter + "\n            </div>\n          " : "") + '\n\n          <hr />\n\n          <div style="' + fb + '">\n            <span style="' + hb + '">Postroll Ad System:</span>\n            ' + b.postrollAdSystem + '\n          </div>\n\n          <div style="' + fb + '">\n            <span style="' + hb + '">Postroll Ad ID:</span>\n            ' + b.postrollAdId + '\n          </div>\n\n          <div style="' + fb + '">\n            <span style="' + hb + '">Postroll Ad Title:</span>\n            ' + b.postrollAdTitle + "\n          </div>\n        </div>\n      ") + "\n    </div>\n  "
        }
        function W(a) {
            var b = document.createElement("div");
            return b.innerHTML = V(a),
            b
        }
        function X(a) {
            var b = U(a);
            return "---\n\nThe issue was seen on this page:\n\n" + window.location.href + "\n\nHere are the details from the Master Ad Debug tool:\n\nMaster Line Item ID: " + b.masterLineItemId + "\nMaster Creative ID: " + b.masterCreativeId + "\n\nPostroll Ad System: " + b.postrollAdSystem + "\nPostroll Ad Title: " + b.postrollAdTitle + "\nPostroll Ad ID: " + b.postrollAdId + "\nPostroll Line Item ID: " + b.postrollLineItemId + "\nPostroll Creative ID: " + b.postrollCreativeId
        }
        function Y(a) {
            var b = U(a);
            return "Ad issue (Master Line Item ID " + b.masterLineItemId + ")"
        }
        function Z(a) {
            ob = a,
            nb && mb.append(W(a))
        }
        function $(a) {
            var b = Y(a)
              , c = X(a);
            document.location.href = "mailto:?to=&subject=" + encodeURIComponent(b) + "&body=" + encodeURIComponent(c)
        }
        function _() {
            return nb ? void mb.show() : (mb.render(),
            nb = !0,
            void (ob && Z(ob)))
        }
        function aa(a) {
            var b = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {}
              , c = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : {}
              , d = new ab(a,M(c))
              , e = E("dfptest");
            return e && (b.dfptest = e),
            d.loadMaster(b).then(function() {
                return Promise.all([d.loadPreroll(), d.loadPostroll()])
            }).then(function() {
                return d.checkSecurity()
            }).then(function() {
                return Z(d)
            }).catch(function(a) {
                throw Z(d),
                a
            }).then(function() {
                return d.getData()
            })
        }
        var ba = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(a) {
            return typeof a
        }
        : function(a) {
            return a && "function" == typeof Symbol && a.constructor === Symbol && a !== Symbol.prototype ? "symbol" : typeof a
        }
          , ca = function() {
            var a = "function" == typeof Symbol && Symbol.for && Symbol.for("react.element") || 60103;
            return function(b, c, d, e) {
                var f = b && b.defaultProps
                  , g = arguments.length - 3;
                if (c || 0 === g || (c = {}),
                c && f)
                    for (var h in f)
                        void 0 === c[h] && (c[h] = f[h]);
                else
                    c || (c = f || {});
                if (1 === g)
                    c.children = e;
                else if (g > 1) {
                    for (var i = Array(g), j = 0; j < g; j++)
                        i[j] = arguments[j + 3];
                    c.children = i
                }
                return {
                    $$typeof: a,
                    type: b,
                    key: void 0 === d ? null : "" + d,
                    ref: null,
                    props: c,
                    _owner: null
                }
            }
        }()
          , da = function(a) {
            if ("function" == typeof Symbol) {
                if (Symbol.asyncIterator) {
                    var b = a[Symbol.asyncIterator];
                    if (null != b)
                        return b.call(a)
                }
                if (Symbol.iterator)
                    return a[Symbol.iterator]()
            }
            throw new TypeError("Object is not async iterable")
        }
          , ea = function() {
            function a(a) {
                this.value = a
            }
            function b(b) {
                function c(a, b) {
                    return new Promise(function(c, e) {
                        var h = {
                            key: a,
                            arg: b,
                            resolve: c,
                            reject: e,
                            next: null
                        };
                        g ? g = g.next = h : (f = g = h,
                        d(a, b))
                    }
                    )
                }
                function d(c, f) {
                    try {
                        var g = b[c](f)
                          , h = g.value;
                        h instanceof a ? Promise.resolve(h.value).then(function(a) {
                            d("next", a)
                        }, function(a) {
                            d("throw", a)
                        }) : e(g.done ? "return" : "normal", g.value)
                    } catch (a) {
                        e("throw", a)
                    }
                }
                function e(a, b) {
                    switch (a) {
                    case "return":
                        f.resolve({
                            value: b,
                            done: !0
                        });
                        break;
                    case "throw":
                        f.reject(b);
                        break;
                    default:
                        f.resolve({
                            value: b,
                            done: !1
                        })
                    }
                    f = f.next,
                    f ? d(f.key, f.arg) : g = null
                }
                var f, g;
                this._invoke = c,
                "function" != typeof b.return && (this.return = void 0)
            }
            return "function" == typeof Symbol && Symbol.asyncIterator && (b.prototype[Symbol.asyncIterator] = function() {
                return this
            }
            ),
            b.prototype.next = function(a) {
                return this._invoke("next", a)
            }
            ,
            b.prototype.throw = function(a) {
                return this._invoke("throw", a)
            }
            ,
            b.prototype.return = function(a) {
                return this._invoke("return", a)
            }
            ,
            {
                wrap: function(a) {
                    return function() {
                        return new b(a.apply(this, arguments))
                    }
                },
                await: function(b) {
                    return new a(b)
                }
            }
        }()
          , fa = function(a, b) {
            function c(c, d) {
                return e = !0,
                d = new Promise(function(b) {
                    b(a[c](d))
                }
                ),
                {
                    done: !1,
                    value: b(d)
                }
            }
            var d = {}
              , e = !1;
            return "function" == typeof Symbol && Symbol.iterator && (d[Symbol.iterator] = function() {
                return this
            }
            ),
            d.next = function(a) {
                return e ? (e = !1,
                a) : c("next", a)
            }
            ,
            "function" == typeof a.throw && (d.throw = function(a) {
                if (e)
                    throw e = !1,
                    a;
                return c("throw", a)
            }
            ),
            "function" == typeof a.return && (d.return = function(a) {
                return c("return", a)
            }
            ),
            d
        }
          , ga = function(a) {
            return function() {
                var b = a.apply(this, arguments);
                return new Promise(function(a, c) {
                    function d(e, f) {
                        try {
                            var g = b[e](f)
                              , h = g.value
                        } catch (a) {
                            return void c(a)
                        }
                        return g.done ? void a(h) : Promise.resolve(h).then(function(a) {
                            d("next", a)
                        }, function(a) {
                            d("throw", a)
                        })
                    }
                    return d("next")
                }
                )
            }
        }
          , ha = function(a, b) {
            if (!(a instanceof b))
                throw new TypeError("Cannot call a class as a function")
        }
          , ia = function() {
            function a(a, b) {
                for (var c = 0; c < b.length; c++) {
                    var d = b[c];
                    d.enumerable = d.enumerable || !1,
                    d.configurable = !0,
                    "value"in d && (d.writable = !0),
                    Object.defineProperty(a, d.key, d)
                }
            }
            return function(b, c, d) {
                return c && a(b.prototype, c),
                d && a(b, d),
                b
            }
        }()
          , ja = function(a, b) {
            for (var c in b) {
                var d = b[c];
                d.configurable = d.enumerable = !0,
                "value"in d && (d.writable = !0),
                Object.defineProperty(a, c, d)
            }
            return a
        }
          , ka = function(a, b) {
            for (var c = Object.getOwnPropertyNames(b), d = 0; d < c.length; d++) {
                var e = c[d]
                  , f = Object.getOwnPropertyDescriptor(b, e);
                f && f.configurable && void 0 === a[e] && Object.defineProperty(a, e, f)
            }
            return a
        }
          , la = function(a, b, c) {
            return b in a ? Object.defineProperty(a, b, {
                value: c,
                enumerable: !0,
                configurable: !0,
                writable: !0
            }) : a[b] = c,
            a
        }
          , ma = Object.assign || function(a) {
            for (var b = 1; b < arguments.length; b++) {
                var c = arguments[b];
                for (var d in c)
                    Object.prototype.hasOwnProperty.call(c, d) && (a[d] = c[d])
            }
            return a
        }
          , na = function a(b, c, d) {
            null === b && (b = Function.prototype);
            var e = Object.getOwnPropertyDescriptor(b, c);
            if (void 0 === e) {
                var f = Object.getPrototypeOf(b);
                return null === f ? void 0 : a(f, c, d)
            }
            if ("value"in e)
                return e.value;
            var g = e.get;
            if (void 0 !== g)
                return g.call(d)
        }
          , oa = function(a, b) {
            if ("function" != typeof b && null !== b)
                throw new TypeError("Super expression must either be null or a function, not " + typeof b);
            a.prototype = Object.create(b && b.prototype, {
                constructor: {
                    value: a,
                    enumerable: !1,
                    writable: !0,
                    configurable: !0
                }
            }),
            b && (Object.setPrototypeOf ? Object.setPrototypeOf(a, b) : a.__proto__ = b)
        }
          , pa = function(a, b) {
            return null != b && "undefined" != typeof Symbol && b[Symbol.hasInstance] ? b[Symbol.hasInstance](a) : a instanceof b
        }
          , qa = function(a) {
            return a && a.__esModule ? a : {
                default: a
            }
        }
          , ra = function(a) {
            if (a && a.__esModule)
                return a;
            var b = {};
            if (null != a)
                for (var c in a)
                    Object.prototype.hasOwnProperty.call(a, c) && (b[c] = a[c]);
            return b.default = a,
            b
        }
          , sa = function(a, b) {
            if (a !== b)
                throw new TypeError("Cannot instantiate an arrow function")
        }
          , ta = function(a) {
            if (null == a)
                throw new TypeError("Cannot destructure undefined")
        }
          , ua = function(a, b) {
            var c = {};
            for (var d in a)
                b.indexOf(d) >= 0 || Object.prototype.hasOwnProperty.call(a, d) && (c[d] = a[d]);
            return c
        }
          , va = function(a, b) {
            if (!a)
                throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
            return !b || "object" != typeof b && "function" != typeof b ? a : b
        }
          , wa = "undefined" == typeof global ? self : global
          , xa = function a(b, c, d, e) {
            var f = Object.getOwnPropertyDescriptor(b, c);
            if (void 0 === f) {
                var g = Object.getPrototypeOf(b);
                null !== g && a(g, c, d, e)
            } else if ("value"in f && f.writable)
                f.value = d;
            else {
                var h = f.set;
                void 0 !== h && h.call(e, d)
            }
            return d
        }
          , ya = function() {
            function a(a, b) {
                var c = []
                  , d = !0
                  , e = !1
                  , f = void 0;
                try {
                    for (var g, h = a[Symbol.iterator](); !(d = (g = h.next()).done) && (c.push(g.value),
                    !b || c.length !== b); d = !0)
                        ;
                } catch (a) {
                    e = !0,
                    f = a
                } finally {
                    try {
                        !d && h.return && h.return()
                    } finally {
                        if (e)
                            throw f
                    }
                }
                return c
            }
            return function(b, c) {
                if (Array.isArray(b))
                    return b;
                if (Symbol.iterator in Object(b))
                    return a(b, c);
                throw new TypeError("Invalid attempt to destructure non-iterable instance")
            }
        }()
          , za = function(a, b) {
            if (Array.isArray(a))
                return a;
            if (Symbol.iterator in Object(a)) {
                for (var c, d = [], e = a[Symbol.iterator](); !(c = e.next()).done && (d.push(c.value),
                !b || d.length !== b); )
                    ;
                return d
            }
            throw new TypeError("Invalid attempt to destructure non-iterable instance")
        }
          , Aa = function(a, b) {
            return Object.freeze(Object.defineProperties(a, {
                raw: {
                    value: Object.freeze(b)
                }
            }))
        }
          , Ba = function(a, b) {
            return a.raw = b,
            a
        }
          , Ca = function(a, b, c) {
            if (a === c)
                throw new ReferenceError(b + " is not defined - temporal dead zone");
            return a
        }
          , Da = {}
          , Ea = function(a) {
            return Array.isArray(a) ? a : Array.from(a)
        }
          , Fa = function(a) {
            if (Array.isArray(a)) {
                for (var b = 0, c = Array(a.length); b < a.length; b++)
                    c[b] = a[b];
                return c
            }
            return Array.from(a)
        }
          , Ga = Object.freeze({
            jsx: ca,
            asyncIterator: da,
            asyncGenerator: ea,
            asyncGeneratorDelegate: fa,
            asyncToGenerator: ga,
            classCallCheck: ha,
            createClass: ia,
            defineEnumerableProperties: ja,
            defaults: ka,
            defineProperty: la,
            get: na,
            inherits: oa,
            interopRequireDefault: qa,
            interopRequireWildcard: ra,
            newArrowCheck: sa,
            objectDestructuringEmpty: ta,
            objectWithoutProperties: ua,
            possibleConstructorReturn: va,
            selfGlobal: wa,
            set: xa,
            slicedToArray: ya,
            slicedToArrayLoose: za,
            taggedTemplateLiteral: Aa,
            taggedTemplateLiteralLoose: Ba,
            temporalRef: Ca,
            temporalUndefined: Da,
            toArray: Ea,
            toConsumableArray: Fa,
            typeof: ba,
            extends: ma,
            instanceof: pa
        })
          , Ha = encodeURIComponent
          , Ia = decodeURIComponent
          , Ja = encodeURIComponent
          , Ka = decodeURIComponent
          , La = function() {
            function a(b) {
                ha(this, a),
                b.ad && (this.lineItemId = b.ad.lineItemId,
                this.creativeId = b.ad.creativeId,
                this.prerollUrl = y(b.ad.prerollURL),
                this.postrollUrl = y(b.ad.postrollURL),
                this.companionTargetingValue = b.ad.target,
                this.impressionUrl = y(b.ad.impression))
            }
            return ia(a, null, [{
                key: "makeUrl",
                value: function() {
                    var a = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {}
                      , b = {
                        sizes: [[2, 2]]
                    }
                      , c = s(Ga.extends(b, a));
                    return c + "&unviewed_position_start=1"
                }
            }, {
                key: "fromUrl",
                value: function(c) {
                    return g(c).then(function(b) {
                        return new a(b)
                    }).then(function(a) {
                        return b(a.impressionUrl),
                        a
                    })
                }
            }, {
                key: "fromOptions",
                value: function() {
                    var a = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {};
                    return this.fromUrl(this.makeUrl(a))
                }
            }]),
            a
        }()
          , Ma = function() {
            function a(b) {
                ha(this, a),
                this.adUnitId = b.adUnitId,
                this.slotId = "mai-" + Math.floor(Math.random() * Math.pow(2, 53) - 1).toString(36),
                this.addEl()
            }
            return ia(a, [{
                key: "addEl",
                value: function() {
                    var a = window.document.createElement("div");
                    a.id = this.slotId,
                    a.style.cssText = ["position:fixed", "top:-2px", "left:-2px", "height:1px", "width:1px", "overflow:hidden", "opacity:0"].join(";"),
                    window.document.body.appendChild(a)
                }
            }, {
                key: "setTargeting",
                value: function() {
                    var a = this
                      , b = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {};
                    z(function() {
                        Object.getOwnPropertyNames(b).forEach(function(c) {
                            a.slot.setTargeting(c, b[c])
                        })
                    })
                }
            }, {
                key: "display",
                value: function() {
                    var a = this
                      , b = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {};
                    z(function(b) {
                        a.slot = b.defineOutOfPageSlot(a.adUnitId, a.slotId).addService(b.pubads())
                    }),
                    this.setTargeting(b.targeting),
                    z(function(b) {
                        b.display(a.slotId)
                    })
                }
            }, {
                key: "refresh",
                value: function() {
                    var a = this
                      , b = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {};
                    z(function() {
                        a.slot.clearTargeting()
                    }),
                    this.setTargeting(b.targeting),
                    z(function(b) {
                        b.pubads().refresh([a.slot])
                    })
                }
            }]),
            a
        }()
          , Na = {}
          , Oa = []
          , Pa = []
          , Qa = function() {
            function a() {
                ha(this, a)
            }
            return ia(a, null, [{
                key: "makeUrl",
                value: function() {
                    return ""
                }
            }, {
                key: "fromUrl",
                value: function() {
                    return new Promise(function(a, b) {
                        b(new Error("Cannot use fromUrl with gptProxy ad"))
                    }
                    )
                }
            }, {
                key: "fromOptions",
                value: function() {
                    var a = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {}
                      , b = a.adUnitId;
                    return window.gptProxy = C,
                    Na[b] ? B(function() {
                        return Na[b].refresh(a)
                    }) : (Na[b] = new Ma(a),
                    B(function() {
                        return Na[b].display(a)
                    }))
                }
            }]),
            a
        }()
          , Ra = function(a) {
            function c(a) {
                ha(this, c);
                var b = va(this, (c.__proto__ || Object.getPrototypeOf(c)).call(this));
                return a.ad ? (b.lineItemId = a.ad.lineItemId,
                b.creativeId = a.ad.creativeId,
                b.prerollUrl = y(a.ad.prerollURL),
                b.postrollUrl = y(a.ad.postrollURL),
                b.companionTargetingValue = a.ad.target,
                b.impressionUrl = y(a.ad.impression),
                b) : va(b)
            }
            return oa(c, a),
            ia(c, null, [{
                key: "fromOptions",
                value: function() {
                    var a = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {};
                    return Qa.fromOptions(a).then(function(a) {
                        return new c(a)
                    }).then(function(a) {
                        return b(a.impressionUrl),
                        a
                    })
                }
            }]),
            c
        }(Qa)
          , Sa = function a() {
            ha(this, a)
        };
        Sa.getXmlEls = function(a, b) {
            return Array.from(b && b.getElementsByTagName(a))
        }
        ,
        Sa.getXmlAttr = function(a, b) {
            return (Array.from(a.attributes).find(function(a) {
                return a.name === b
            }) || {}).value
        }
        ,
        Sa.getXmlText = function(a) {
            return (a && (a.textContent || a.text || a.childNodes && a.childNodes[0] && a.childNodes[0].nodeValue) || "").trim()
        }
        ;
        var Ta = function(a) {
            function b(a) {
                ha(this, b);
                var c = va(this, (b.__proto__ || Object.getPrototypeOf(b)).call(this));
                c.adId = null,
                c.adSystem = null,
                c.lineItemId = null,
                c.type = "imasdk",
                c.q0Impressions = [],
                c.q1Impressions = [],
                c.q2Impressions = [],
                c.q3Impressions = [],
                c.q4Impressions = [],
                c.pauseImpressions = [],
                c.resumeImpressions = [],
                c.muteImpressions = [],
                c.unmuteImpressions = [],
                c.skipImpressions = [],
                c.errorImpressions = [],
                c.clickImpressions = [];
                var e = Sa.getXmlEls("Ad", a)[0];
                e && c.applyAd(e);
                try {
                    c.response = d(a)
                } catch (a) {
                    c.response = void 0
                }
                return c
            }
            return oa(b, a),
            ia(b, [{
                key: "applyAd",
                value: function(a) {
                    var c = this;
                    a && (this.adId = Sa.getXmlAttr(a, "id"));
                    var d = Sa.getXmlText(Sa.getXmlEls("AdSystem", a)[0]);
                    d && (this.adSystem = d),
                    "GDFP" === d && (this.lineItemId = this.adId);
                    var e = Sa.getXmlText(Sa.getXmlEls("AdTitle", a)[0]);
                    e && (this.adTitle = e);
                    var f = Sa.getXmlEls("Creative", a).find(function(a) {
                        return Sa.getXmlEls("Linear", a).length > 0
                    });
                    f && this.applyCreative(b.extractCreative(f)),
                    "stitched" === this.type && (Sa.getXmlEls("Impression", a).forEach(function(a) {
                        var b = y(Sa.getXmlText(a));
                        b && c.q0Impressions.push(b)
                    }),
                    Sa.getXmlEls("Error", a).forEach(function(a) {
                        var b = y(Sa.getXmlText(a));
                        b && c.errorImpressions.push(b)
                    }))
                }
            }, {
                key: "applyCreative",
                value: function(a) {
                    var b = this;
                    this.creativeId = a.id,
                    a.hlsParamValue && (this.type = "stitched",
                    this.clickImpressions = this.clickImpressions.concat(a.clickTrackings),
                    this.clickDestination = a.clickThrough,
                    this.adParameters = a.adParameters,
                    this.hlsParamValue = a.hlsParamValue,
                    a.trackingEvents.forEach(function(a) {
                        var c = a.event
                          , d = a.uri;
                        switch (c) {
                        case "start":
                        case "creativeView":
                            b.q0Impressions.push(d);
                            break;
                        case "firstQuartile":
                            b.q1Impressions.push(d);
                            break;
                        case "midpoint":
                            b.q2Impressions.push(d);
                            break;
                        case "thirdQuartile":
                            b.q3Impressions.push(d);
                            break;
                        case "complete":
                            b.q4Impressions.push(d);
                            break;
                        case "pause":
                        case "resume":
                        case "mute":
                        case "unmute":
                        case "skip":
                            b[c + "Impressions"].push(d)
                        }
                    }))
                }
            }], [{
                key: "getCorrelator",
                value: function() {
                    return Math.floor(999999 * Math.random())
                }
            }, {
                key: "extractCreative",
                value: function(a) {
                    var b = Sa.getXmlAttr(a, "id")
                      , c = [];
                    Sa.getXmlEls("Tracking", a).forEach(function(a) {
                        var b = Sa.getXmlText(a);
                        x(b) && c.push({
                            event: Sa.getXmlAttr(a, "event"),
                            uri: b
                        })
                    });
                    var d = [];
                    Sa.getXmlEls("ClickTracking", a).forEach(function(a) {
                        var b = y(Sa.getXmlText(a));
                        b && d.push(b)
                    });
                    var e = y(Sa.getXmlText(Sa.getXmlEls("ClickThrough", a)[0]))
                      , f = Sa.getXmlText(Sa.getXmlEls("AdParameters", a)[0])
                      , g = String(f).match(/postroll=([^&]+)/)
                      , h = g ? g[1] : void 0;
                    return {
                        id: b,
                        trackingEvents: c,
                        clickTrackings: d,
                        clickThrough: e,
                        adParameters: f,
                        hlsParamValue: h
                    }
                }
            }, {
                key: "fromData",
                value: function(a) {
                    return new b(a)
                }
            }, {
                key: "augmentUrl",
                value: function(a) {
                    var c = String(a);
                    return c.match(/\?.*%%CACHEBUSTER%%/) && (c = c.replace("%%CACHEBUSTER%%", b.getCorrelator())),
                    c.includes("//pubads.g.doubleclick.net") && !u(c, "url") && (c = w(c, "url", D())),
                    c
                }
            }, {
                key: "fromUrl",
                value: function(a) {
                    return h(b.augmentUrl(a)).then(b.fromData)
                }
            }]),
            b
        }(Sa)
          , Ua = function() {
            function a(b) {
                ha(this, a);
                var c = b.preroll;
                if (c) {
                    this.lineItemId = c.lineItemId,
                    this.creativeId = c.creativeId,
                    this.impressions = a.getImpressions(c),
                    this.clickDestination = y(c.click),
                    this.hlsParamValue = c.ios_preroll;
                    var d = c.creative || {};
                    this.mdpiCreative = y(d.mdpi),
                    this.hdpiCreative = y(d.hdpi),
                    this.xhdpiCreative = y(d.xhdpi),
                    this.xxhdpiCreative = y(d.xxhdpi)
                }
            }
            return ia(a, null, [{
                key: "getImpressions",
                value: function(a) {
                    var b = [];
                    return a.impression && b.push(a.impression),
                    a.third_party_impressions && a.third_party_impressions.length > 0 && (b = b.concat(a.third_party_impressions)),
                    b.filter(x)
                }
            }, {
                key: "fromUrl",
                value: function(b) {
                    return g(b).then(function(b) {
                        return new a(b)
                    })
                }
            }]),
            a
        }()
          , Va = function() {
            function a() {
                ha(this, a)
            }
            return ia(a, null, [{
                key: "fromUrl",
                value: function() {
                    return new Promise(function(b) {
                        var c = new a;
                        b(c)
                    }
                    )
                }
            }]),
            a
        }()
          , Wa = "VAST wrapper limit reached"
          , Xa = 5
          , Ya = function(a) {
            function c(a) {
                ha(this, c);
                var b = va(this, (c.__proto__ || Object.getPrototypeOf(c)).call(this))
                  , d = Sa.getXmlEls("Ad", a)[0];
                if (!d)
                    throw new Error("Empty or invalid VAST response");
                b.adId = Sa.getXmlAttr(d, "id");
                var e = Sa.getXmlText(Sa.getXmlEls("AdSystem", d)[0]);
                e && (b.adSystem = e),
                "GDFP" === e && (b.lineItemId = b.adId),
                b.q0Impressions = [],
                b.q1Impressions = [],
                b.q2Impressions = [],
                b.q3Impressions = [],
                b.q4Impressions = [],
                b.pauseImpressions = [],
                b.resumeImpressions = [],
                b.muteImpressions = [],
                b.unmuteImpressions = [],
                b.skipImpressions = [],
                b.errorImpressions = [],
                b.clickImpressions = [],
                b.mediaFiles = [],
                Sa.getXmlEls("Impression", d).forEach(function(a) {
                    var c = y(Sa.getXmlText(a));
                    c && b.q0Impressions.push(c)
                }),
                Sa.getXmlEls("Error", d).forEach(function(a) {
                    var c = y(Sa.getXmlText(a));
                    c && b.errorImpressions.push(c)
                });
                var f = Sa.getXmlEls("Creative", a).find(function(a) {
                    return Sa.getXmlEls("Linear", a).length > 0
                });
                f && b.applyCreative(c.extractCreative(f));
                var g = y(Sa.getXmlText(Sa.getXmlEls("VASTAdTagURI", a)[0]));
                g && (b.adTag = g);
                var h = Sa.getXmlText(Sa.getXmlEls("AdTitle", a)[0]);
                return h && (b.adTitle = h),
                b
            }
            return oa(c, a),
            ia(c, [{
                key: "applyCreative",
                value: function(a) {
                    var b = this;
                    this.creativeId = a.id,
                    this.clickImpressions = this.clickImpressions.concat(a.clickTrackings),
                    this.clickDestination = a.clickThrough,
                    this.adParameters = a.adParameters,
                    this.hlsParamValue = a.hlsParamValue,
                    a.hlsParamValue ? this.type = "stitched" : a.mediaFiles.find(function(a) {
                        return "VPAID" === a.apiFramework
                    }) ? this.type = "vpaid" : this.type = "vast",
                    "stitched" !== this.type && (this.mediaFiles = a.mediaFiles),
                    a.trackingEvents.forEach(function(a) {
                        var c = a.event
                          , d = a.uri;
                        switch (c) {
                        case "start":
                        case "creativeView":
                            b.q0Impressions.push(d);
                            break;
                        case "firstQuartile":
                            b.q1Impressions.push(d);
                            break;
                        case "midpoint":
                            b.q2Impressions.push(d);
                            break;
                        case "thirdQuartile":
                            b.q3Impressions.push(d);
                            break;
                        case "complete":
                            b.q4Impressions.push(d);
                            break;
                        case "pause":
                        case "resume":
                        case "mute":
                        case "unmute":
                        case "skip":
                            b[c + "Impressions"].push(d)
                        }
                    })
                }
            }, {
                key: "getCollectedProperty",
                value: function(a) {
                    return [].concat(this.wrapper ? this.wrapper.getCollectedProperty(a) : [], this[a] || [])
                }
            }, {
                key: "getWrapper",
                value: function() {
                    return c.rewrap(this)
                }
            }], [{
                key: "extractCreative",
                value: function(a) {
                    var b = Sa.getXmlAttr(a, "id")
                      , d = [];
                    Sa.getXmlEls("Tracking", a).forEach(function(a) {
                        var b = Sa.getXmlText(a);
                        x(b) && d.push({
                            event: Sa.getXmlAttr(a, "event"),
                            uri: b
                        })
                    });
                    var e = [];
                    Sa.getXmlEls("ClickTracking", a).forEach(function(a) {
                        var b = y(Sa.getXmlText(a));
                        b && e.push(b)
                    });
                    var f = y(Sa.getXmlText(Sa.getXmlEls("ClickThrough", a)[0]))
                      , g = Sa.getXmlText(Sa.getXmlEls("AdParameters", a)[0])
                      , h = String(g).match(/postroll=([^&]+)/)
                      , i = h ? h[1] : void 0
                      , j = [];
                    return Sa.getXmlEls("MediaFile", a).forEach(function(a) {
                        var b = c.extractMediaFile(a);
                        b && j.push(b)
                    }),
                    {
                        id: b,
                        trackingEvents: d,
                        clickTrackings: e,
                        clickThrough: f,
                        adParameters: g,
                        hlsParamValue: i,
                        mediaFiles: j
                    }
                }
            }, {
                key: "rewrap",
                value: function(a) {
                    return a.wrapper ? c.rewrap(a.wrapper) : a
                }
            }, {
                key: "extractMediaFile",
                value: function(a) {
                    var b = y(Sa.getXmlText(a));
                    if (b) {
                        var c = {
                            uri: b
                        };
                        return ["delivery", "type", "codec", "id", "apiFramework"].forEach(function(b) {
                            var d = Sa.getXmlAttr(a, b);
                            d && (c[b] = String(d))
                        }),
                        ["width", "height", "bitrate", "minBitrate", "maxBitrate"].forEach(function(b) {
                            var d = Sa.getXmlAttr(a, b);
                            d && (c[b] = parseInt(d, 10))
                        }),
                        ["scalable", "maintainAspectRatio"].forEach(function(b) {
                            var d = Sa.getXmlAttr(a, b);
                            d && (c[b] = "true" === d)
                        }),
                        c
                    }
                }
            }, {
                key: "fromWrapper",
                value: function(a) {
                    return a.wrapperLevel = a.wrapperLevel || 0,
                    a.wrapperLevel >= Xa ? new Promise(function(a, b) {
                        b(new Error(Wa))
                    }
                    ) : h(a.adTag).then(function(b) {
                        var d = new c(b);
                        return d.wrapper = a,
                        d.wrapperLevel = a.wrapperLevel + 1,
                        d.adTag ? c.fromWrapper(d) : d
                    }).catch(function(c) {
                        var d = c.message === Wa;
                        throw a.errorImpressions.forEach(function(a) {
                            return b(a.replace("[ERRORCODE]", d ? "302" : "300"))
                        }),
                        c.wrapper = c.wrapper || a,
                        c
                    })
                }
            }, {
                key: "fromData",
                value: function(a) {
                    var b = new c(a);
                    return b.adTag ? c.fromWrapper(b) : b
                }
            }, {
                key: "augmentUrl",
                value: function(a) {
                    var b = String(a);
                    return b.includes("//pubads.g.doubleclick.net") && !u(b, "url") && (b = w(b, "url", D())),
                    b
                }
            }, {
                key: "fromUrl",
                value: function(a) {
                    return h(c.augmentUrl(a)).then(c.fromData)
                }
            }]),
            c
        }(Sa)
          , Za = encodeURIComponent
          , $a = encodeURIComponent
          , _a = function() {
            function a(b) {
                var c = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};
                ha(this, a),
                this.adUnitId = b,
                this.expectedMasterType = c.masterType || "gampad",
                this.expectedPrerollType = c.prerollType || "json",
                this.expectedPostrollType = c.postrollType || "vast",
                this.master = {},
                this.preroll = {},
                this.postroll = {},
                this.masterUrl = void 0,
                this.masterError = void 0,
                this.prerollError = void 0,
                this.postrollError = void 0
            }
            return ia(a, [{
                key: "getHlsParams",
                value: function() {
                    var a = []
                      , b = this.postroll
                      , c = this.preroll;
                    return c.hlsParamValue && a.push("preroll=" + $a(c.hlsParamValue)),
                    b.hlsParamValue && a.push("postroll=" + $a(b.hlsParamValue)),
                    a.join("&")
                }
            }, {
                key: "getMasterConstructor",
                value: function() {
                    switch (this.expectedMasterType) {
                    case "gampad":
                        return La;
                    case "gpt":
                        return Ra;
                    default:
                        throw new Error("Unrecognized master type: " + this.expectedMasterType)
                    }
                }
            }, {
                key: "getPostrollType",
                value: function() {
                    return this.postroll && this.postroll.type || this.expectedPostrollType
                }
            }, {
                key: "getPostrollConstructor",
                value: function() {
                    switch (this.expectedPostrollType) {
                    case "ima":
                        return Va;
                    case "imasdkish":
                        return Ta;
                    case "stitched":
                        return Ya;
                    case "unparsed":
                        return Va;
                    case "vast":
                        return Ya;
                    case "vpaid":
                        return Ya;
                    default:
                        throw new Error("Unrecognized postroll type: " + this.expectedPostrollType)
                    }
                }
            }, {
                key: "getPostrollMediaFiles",
                value: function() {
                    return [].concat(this.postroll.mediaFiles || []).map(function(a) {
                        var b = a.type
                          , c = a.width
                          , d = a.height
                          , e = a.bitrate
                          , f = a.uri;
                        return {
                            type: b,
                            width: c,
                            height: d,
                            bitrate: e,
                            url: f
                        }
                    })
                }
            }, {
                key: "getPostrollCollection",
                value: function(a) {
                    var b = this.postroll;
                    return [].concat(b.getCollectedProperty ? b.getCollectedProperty(a) : b[a] || [])
                }
            }, {
                key: "getPostrollWrapper",
                value: function() {
                    return this.postroll && this.postroll.getWrapper && this.postroll.getWrapper() || this.postroll
                }
            }, {
                key: "getPrerollConstructor",
                value: function() {
                    switch (this.expectedPrerollType) {
                    case "unparsed":
                        return Va;
                    case "json":
                        return Ua;
                    default:
                        throw new Error("Unrecognized preroll type: " + this.expectedPrerollType)
                    }
                }
            }, {
                key: "getData",
                value: function() {
                    var a = this.master
                      , b = this.preroll
                      , c = this.postroll;
                    return {
                        lineItemId: a.lineItemId,
                        creativeId: a.creativeId,
                        prerollUrl: a.prerollUrl && this.addAdUnitToUrl(a.prerollUrl),
                        prerollImpressions: [].concat(b.impressions || []),
                        prerollClickDestination: b.clickDestination,
                        postrollType: this.getPostrollType(),
                        postrollUrl: a.postrollUrl && this.addAdUnitToUrl(a.postrollUrl),
                        postrollResponse: c.response,
                        postrollQ0Impressions: this.getPostrollCollection("q0Impressions"),
                        postrollQ1Impressions: this.getPostrollCollection("q1Impressions"),
                        postrollQ2Impressions: this.getPostrollCollection("q2Impressions"),
                        postrollQ3Impressions: this.getPostrollCollection("q3Impressions"),
                        postrollQ4Impressions: this.getPostrollCollection("q4Impressions"),
                        postrollPauseImpressions: this.getPostrollCollection("pauseImpressions"),
                        postrollResumeImpressions: this.getPostrollCollection("resumeImpressions"),
                        postrollMuteImpressions: this.getPostrollCollection("muteImpressions"),
                        postrollUnmuteImpressions: this.getPostrollCollection("unmuteImpressions"),
                        postrollSkipImpressions: this.getPostrollCollection("skipImpressions"),
                        postrollErrorImpressions: this.getPostrollCollection("errorImpressions"),
                        postrollClickImpressions: this.getPostrollCollection("clickImpressions"),
                        postrollClickDestination: c.clickDestination,
                        postrollMediaFiles: this.getPostrollMediaFiles(),
                        postrollAdParameters: c.adParameters,
                        companionTargetingValue: a.companionTargetingValue,
                        hlsParams: this.getHlsParams()
                    }
                }
            }, {
                key: "getSecurityChecks",
                value: function() {
                    var a = this.getData();
                    return Ga.extends({
                        "master view impression": this.master.impressionUrl,
                        "preroll ad request": a.prerollUrl,
                        "preroll click destination": a.prerollClickDestination,
                        "postroll ad request": a.postrollUrl,
                        "postroll click destination": a.postrollClickDestination
                    }, G(a.prerollImpressions, function(a) {
                        return "preroll view impression " + (a + 1)
                    }), G(a.postrollQ0Impressions, function(a) {
                        return "postroll q0 impression " + (a + 1)
                    }), G(a.postrollQ1Impressions, function(a) {
                        return "postroll q1 impression " + (a + 1)
                    }), G(a.postrollQ2Impressions, function(a) {
                        return "postroll q2 impression " + (a + 1)
                    }), G(a.postrollQ3Impressions, function(a) {
                        return "postroll q3 impression " + (a + 1)
                    }), G(a.postrollQ4Impressions, function(a) {
                        return "postroll q4 impression " + (a + 1)
                    }), G(a.postrollPauseImpressions, function(a) {
                        return "postroll pause impression " + (a + 1)
                    }), G(a.postrollResumeImpressions, function(a) {
                        return "postroll resume impression " + (a + 1)
                    }), G(a.postrollMuteImpressions, function(a) {
                        return "postroll mute impression " + (a + 1)
                    }), G(a.postrollUnmuteImpressions, function(a) {
                        return "postroll unmute impression " + (a + 1)
                    }), G(a.postrollSkipImpressions, function(a) {
                        return "postroll skip impression " + (a + 1)
                    }), G(a.postrollErrorImpressions, function(a) {
                        return "postroll error impression " + (a + 1)
                    }), G(a.postrollClickImpressions, function(a) {
                        return "postroll click impression " + (a + 1)
                    }), G(a.postrollMediaFiles.map(function(a) {
                        return a.url
                    }), function(a) {
                        return "postroll media file " + (a + 1)
                    }))
                }
            }, {
                key: "addAdUnitToUrl",
                value: function(a) {
                    return a.replace("{adUnit}", this.adUnitId)
                }
            }, {
                key: "checkSecurity",
                value: function() {
                    var a = this.master
                      , b = this.preroll
                      , c = this.postroll
                      , d = this.getSecurityChecks()
                      , e = this.getPostrollWrapper();
                    Object.getOwnPropertyNames(d).forEach(function(f) {
                        K(d[f], {
                            message: f + " is insecure",
                            master_line_item_id: a && a.lineItemId || "",
                            master_creative_id: a && a.creativeId || "",
                            preroll_line_item_id: b && b.lineItemId || "",
                            preroll_creative_id: b && b.creativeId || "",
                            postroll_line_item_id: e && e.lineItemId || "",
                            postroll_creative_id: e && e.creativeId || "",
                            postroll_ad_system: c && c.adSystem || "",
                            postroll_ad_id: c && c.adId || "",
                            postroll_ad_title: c && c.adTitle || ""
                        })
                    })
                }
            }, {
                key: "loadMaster",
                value: function() {
                    var a = this
                      , b = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {}
                      , c = this.getMasterConstructor()
                      , d = {
                        adUnitId: this.adUnitId,
                        targeting: b
                    };
                    return this.masterUrl = c.makeUrl(d),
                    c.fromOptions(d).then(function(b) {
                        return a.master = b,
                        a
                    }).catch(function(b) {
                        throw a.masterError = b,
                        b
                    })
                }
            }, {
                key: "loadPreroll",
                value: function() {
                    var a = this
                      , b = this.addAdUnitToUrl(this.master.prerollUrl)
                      , c = this.getPrerollConstructor();
                    return c.fromUrl(b).then(function(b) {
                        return a.preroll = b,
                        a
                    }).catch(function(b) {
                        return a.prerollError = b,
                        a
                    })
                }
            }, {
                key: "loadPostroll",
                value: function() {
                    var a = this
                      , b = this.addAdUnitToUrl(this.master.postrollUrl)
                      , c = this.getPostrollConstructor();
                    return c.fromUrl(b).then(function(b) {
                        return a.postroll = b,
                        a
                    }).catch(function(b) {
                        return a.postrollError = b,
                        a
                    })
                }
            }]),
            a
        }()
          , ab = function(a) {
            function b(a) {
                var c = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};
                ha(this, b);
                var d = va(this, (b.__proto__ || Object.getPrototypeOf(b)).call(this, a, c));
                return d.postrollUrl = c.postrollUrl,
                d.prerollUrl = c.prerollUrl,
                d.isDummy = d.postrollUrl || d.prerollUrl,
                d
            }
            return oa(b, a),
            ia(b, [{
                key: "dummyMaster",
                value: function() {
                    return this.master = {
                        postrollUrl: this.postrollUrl || "",
                        prerollUrl: this.prerollUrl || ""
                    },
                    Promise.resolve(this)
                }
            }, {
                key: "dummyPostroll",
                value: function() {
                    return this.postroll = {},
                    Promise.resolve(this)
                }
            }, {
                key: "dummyPreroll",
                value: function() {
                    return this.preroll = {
                        clickDestination: "",
                        impressions: []
                    },
                    Promise.resolve(this)
                }
            }, {
                key: "loadMaster",
                value: function() {
                    var a = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {};
                    return this.isDummy ? this.dummyMaster(a) : na(b.prototype.__proto__ || Object.getPrototypeOf(b.prototype), "loadMaster", this).call(this, a)
                }
            }, {
                key: "loadPostroll",
                value: function() {
                    return this.isDummy && !this.postrollUrl ? this.dummyPostroll() : na(b.prototype.__proto__ || Object.getPrototypeOf(b.prototype), "loadPostroll", this).call(this)
                }
            }, {
                key: "loadPreroll",
                value: function() {
                    return this.isDummy && !this.prerollUrl ? this.dummyPreroll() : na(b.prototype.__proto__ || Object.getPrototypeOf(b.prototype), "loadPreroll", this).call(this)
                }
            }]),
            b
        }(_a)
          , bb = {
            allowUrlOverrides: !1
        }
          , cb = "mai."
          , db = function() {
            function a() {
                ha(this, a)
            }
            return ia(a, [{
                key: "render",
                value: function() {
                    var a = this;
                    if (!this.rendered) {
                        this.rendered = !0,
                        this.showing = !0;
                        var b = document.createElement("div");
                        Ga.extends(b.style, {
                            position: "fixed",
                            bottom: "0",
                            right: "0",
                            transition: "0.3s right",
                            width: "calc(100% - 2rem)",
                            height: "200px",
                            background: "#F5F5F5",
                            borderLeft: "1px solid #CCC",
                            borderTop: "1px solid #CCC",
                            zIndex: 99999999
                        }),
                        this.wrapper = b;
                        var c = document.createElement("div");
                        Ga.extends(c.style, {
                            position: "absolute",
                            top: "0",
                            left: "0",
                            width: "100%",
                            height: "100%",
                            overflowY: "scroll",
                            color: "#333",
                            font: "13px/17px Helvetica,Arial,sans-serif",
                            fontWeight: 300
                        }),
                        c.innerHTML = '<h3 style="margin:10px;">Master Ad Debugger</h3>',
                        b.appendChild(c),
                        this.content = c;
                        var d = document.createElement("div");
                        Ga.extends(d.style, {
                            display: "inline-block",
                            background: "#F5F5F5",
                            border: "1px solid #CCC",
                            borderBottom: "none",
                            color: "#666",
                            font: "0.8rem/1.8rem Helvetica,Arial,sans-serif",
                            letterSpacing: "0.2ex",
                            verticalAlign: "middle",
                            cursor: "pointer",
                            padding: "0 0.5rem",
                            height: "1.8rem",
                            position: "absolute",
                            left: "-1.8rem",
                            top: "-1px",
                            transformOrigin: "top left",
                            transform: "rotate(270deg) translateX(-100%)"
                        }),
                        d.innerHTML = "MAD 🔴",
                        b.appendChild(d),
                        d.addEventListener("click", function() {
                            a.toggle()
                        }),
                        N(function() {
                            return document.body.appendChild(b)
                        })
                    }
                }
            }, {
                key: "show",
                value: function() {
                    this.wrapper.style.right = "0",
                    this.showing = !0
                }
            }, {
                key: "hide",
                value: function() {
                    this.wrapper.style.right = "calc(-100% + 2rem)",
                    this.showing = !1
                }
            }, {
                key: "toggle",
                value: function() {
                    this.showing ? this.hide() : this.show()
                }
            }, {
                key: "append",
                value: function(a) {
                    this.render(),
                    this.content.appendChild(a)
                }
            }]),
            a
        }()
          , eb = "font-weight:bold; margin-bottom:5px;"
          , fb = "display:block; margin-bottom:2px; white-space:nowrap; overflow-x:hidden;"
          , gb = fb + " color:#C00;"
          , hb = "color:#777;"
          , ib = "background:#E0E0E0; border:1px solid #CCC; border-radius:5px; margin:10px 0; padding:10px;"
          , jb = "margin:-10px -10px 10px; padding:8px 10px;"
          , kb = "font-weight:lighter; text-align:left; padding:2px 5px;"
          , lb = encodeURIComponent
          , mb = new db
          , nb = void 0
          , ob = void 0;
        F("mad") && _();
        var pb = "undefined" != typeof window && window || {}
          , qb = pb.console;
        pb.debugMasterAd ? qb && qb.warn && qb.warn("The Master Ad Interface has been loaded twice on this page. This indicates a build problem and is likely to cause breaking ad errors.") : (pb.debugMasterAd = function() {
            return _(),
            qb && qb.log && qb.log("%c⬑ The Master Ad Debugger is now open at the bottom of the main page!", "background:#0000EF;color:white;padding:2px 6px"),
            ob
        }
        ,
        pb.reportMasterAd = function() {
            return $(ob)
        }
        ),
        a.loadAd = aa,
        a.default = aa,
        Object.defineProperty(a, "__esModule", {
            value: !0
        })
    }),
    define("player/masterAdInterface", ["ted-master-ad-interface"], function(a) {
        "use strict";
        var b, c = {};
        return c.loadAd = function() {
            var c = Array.prototype.slice.call(arguments, 0)
              , d = b && b.loadAd ? b.loadAd : a.loadAd;
            return d.apply(a, c)
        }
        ,
        c.override = function(a) {
            a && "object" != typeof a || (b = a)
        }
        ,
        c
    }),
    define("player/postroll-client/action-overrides", ["jquery"], function(a) {
        "use strict";
        function b(b, e, f) {
            this.player = b,
            this.isActive = !1,
            this.actions = {},
            this.options = a.extend({}, d, f || {});
            var g = a.extend({}, this.options.useDefaultOptions ? c : {}, e || {});
            for (var h in g)
                g.hasOwnProperty(h) && this.override(h, g[h])
        }
        var c = {
            play: a.noop,
            pause: a.noop,
            volume: a.noop,
            mute: a.noop,
            subtitle: a.noop,
            seek: a.noop,
            contentTime: a.noop,
            playNext: a.noop,
            playPrev: a.noop,
            playTalk: a.noop,
            popOut: a.noop
        }
          , d = {
            callOriginalActions: !1,
            useDefaultActions: !0
        }
          , e = [];
        return a.extend(b.prototype, {
            activate: function() {
                this.isActive = !0
            },
            deactivate: function() {
                this.isActive = !1
            },
            override: function(a, b) {
                var c = this
                  , d = c.player[a] || function() {}
                ;
                if (!c.actions.hasOwnProperty(a)) {
                    var f = function() {
                        var b, f = c.isActive && c.actions[a], g = e.slice.apply(arguments);
                        return f && (b = c.actions[a].apply(c.player, g)),
                        !f || c.options.callOriginalActions ? d.apply(c.player, g) : b
                    };
                    f.early = d.early,
                    f.sourcer = d.sourcer,
                    f.resourcer = d.resourcer,
                    f.wiper = d.wiper,
                    c.player[a] = f
                }
                "undefined" != typeof b && (c.actions[a] = b)
            }
        }),
        b
    }),
    define("player/postroll-client/ima-sdk-manager", ["jquery"], function(a) {
        "use strict";
        function b(a) {
            var b = this;
            this._$container = null,
            this._adDisplayContainer = null,
            this._adsLoader = null,
            this._adsManager = null,
            this._interval = null,
            this._isAdDisplayContainerInitialized = !1,
            this._isContentComplete = !1,
            this._loadSDKPromise = null,
            this._player = a,
            this._loadSDK().done(function() {
                b._createAdDisplayContainer()
            })
        }
        return b.debug = !1,
        a.extend(b.prototype, {
            _bail: function() {
                this._destroyAdsManager(),
                this._showAdDisplayContainer(!1),
                this.onAdComplete()
            },
            _bound: function(b) {
                var c = "_" + b;
                return this[c] || (this[c] = a.proxy(this[b], this)),
                this[c]
            },
            _createAdDisplayContainer: function() {
                var b = a("<div></div>");
                b.attr(this._player.options.attrs),
                a(this._player.el).after(b),
                this._$container = b,
                this._adDisplayContainer = new google.ima.AdDisplayContainer(b.get(0),this._player.el),
                this._showAdDisplayContainer(!1)
            },
            _createAdsLoader: function() {
                if (!this._adsLoader) {
                    var a = new google.ima.AdsLoader(this._adDisplayContainer);
                    this._adsLoader = a,
                    a.getSettings().setDisableCustomPlaybackForIOS10Plus(!0),
                    a.addEventListener(google.ima.AdsManagerLoadedEvent.Type.ADS_MANAGER_LOADED, this._bound("_onAdsManagerLoaded"), !1),
                    a.addEventListener(google.ima.AdErrorEvent.Type.AD_ERROR, this._bound("_onError"), !1)
                }
            },
            _destroyAdsManager: function() {
                this._adsManager && (this._adsManager.destroy(),
                this._adsManager = null)
            },
            _initializeAdDisplayContainer: function() {
                if (!this._isAdDisplayContainerInitialized && this._adDisplayContainer)
                    try {
                        this._adDisplayContainer.initialize()
                    } catch (a) {
                        return void this._logAdError(a)
                    }
            },
            _loadSDK: function() {
                var c = b;
                return c._loadSDKPromise = c._loadSDKPromise || function() {
                    return a.getScript("https://imasdk.googleapis.com/js/sdkloader/ima3" + (c.debug ? "_debug" : "") + ".js")
                }(),
                c._loadSDKPromise.fail(this._bound("_onError"))
            },
            _logAdError: function(a) {
                this._logErrorMessage(a.getMessage ? a.getMessage() : a.message || a)
            },
            _logErrorMessage: function(a) {
                console && console.error && console.error(new Error(a)),
                this._player.throwError({
                    type: "ima-sdk",
                    message: a
                })
            },
            _onAdsManagerLoaded: function(a) {
                this._destroyAdsManager();
                var b = new google.ima.AdsRenderingSettings;
                b.enablePreloading = !0,
                b.restoreCustomPlaybackStateOnAdBreakComplete = !0;
                var c = a.getAdsManager(this._player.el, b);
                this._$container.children().css({
                    width: "100%",
                    height: "100%",
                    top: 0,
                    left: 0
                }),
                c.addEventListener(google.ima.AdErrorEvent.Type.AD_ERROR, this._bound("_onError")),
                c.addEventListener(google.ima.AdEvent.Type.ALL_ADS_COMPLETED, this._bound("_onAllAdsComplete")),
                c.addEventListener(google.ima.AdEvent.Type.COMPLETE, this._bound("_onComplete")),
                c.addEventListener(google.ima.AdEvent.Type.DURATION_CHANGE, this._bound("_onDurationChange")),
                c.addEventListener(google.ima.AdEvent.Type.PAUSED, this._bound("_onPaused")),
                c.addEventListener(google.ima.AdEvent.Type.RESUMED, this._bound("_onResumed")),
                c.addEventListener(google.ima.AdEvent.Type.VOLUME_CHANGED, this._bound("_onVolumeChanged")),
                c.addEventListener(google.ima.AdEvent.Type.VOLUME_MUTED, this._bound("_onVolumeChanged")),
                c.addEventListener(google.ima.AdEvent.Type.STARTED, this._bound("_onStarted")),
                c.addEventListener(google.ima.AdEvent.Type.AD_BREAK_READY, this._bound("_onAdBreakReady")),
                this._adsManager = c
            },
            _onAdBreakReady: function() {
                this._startAdsManager()
            },
            _onAllAdsComplete: function() {
                this._showAdDisplayContainer(!1),
                this.onAdComplete()
            },
            _onComplete: function() {
                this._showAdDisplayContainer(!1),
                this._stopInterval(),
                this.onAdRemaining(0)
            },
            _onDurationChange: function(a) {
                this.onAdDuration(a.getAd().getDuration())
            },
            _onError: function(a) {
                this._logAdError(a.getError()),
                this._bail()
            },
            _onInterval: function() {
                this._interval && this._adsManager && this.onAdRemaining(this._adsManager.getRemainingTime())
            },
            _onPaused: function() {
                this.onAdPause()
            },
            _onResumed: function() {
                this.onAdPlay()
            },
            _onVolumeChanged: function() {
                if (this._adsManager) {
                    var a = this._adsManager.getVolume();
                    this.onAdVolume(a)
                }
            },
            _onStarted: function(a) {
                var b = a.getAd().getDuration();
                this.onAdDuration(b),
                this.onAdRemaining(b),
                this._startInterval(),
                this._showAdDisplayContainer(!0),
                this.onAdPlay()
            },
            _showAdDisplayContainer: function(a) {
                this._$container && this._$container[a ? "show" : "hide"]()
            },
            _startAdsManager: function() {
                if (this._isContentComplete)
                    try {
                        this._adsManager.start()
                    } catch (a) {
                        return this._logAdError(a),
                        void this._bail()
                    }
            },
            _startInterval: function() {
                this._interval || (this._interval = setInterval(this._bound("_onInterval"), 100))
            },
            _stopInterval: function() {
                clearInterval(this._interval),
                this._interval = null
            },
            loadAd: function(a) {
                var b = this;
                b._isContentComplete = !1,
                b._loadSDK().done(function() {
                    var c = new google.ima.AdsRequest;
                    c.adsResponse = a,
                    b._createAdsLoader(),
                    b._adsLoader.getSettings().setAutoPlayAdBreaks(!1),
                    b._adsLoader.requestAds(c)
                })
            },
            startAd: function() {
                return this._adsLoader && this._adsManager ? (this._showAdDisplayContainer(!0),
                this._adsManager.init("100%", "100%", google.ima.ViewMode.NORMAL),
                this._isContentComplete = !0,
                this._adsLoader.contentComplete(),
                void this._startAdsManager()) : (this._logErrorMessage("startAd called prematurely"),
                void this._bail())
            },
            userGesture: function() {
                this._initializeAdDisplayContainer()
            },
            pause: function() {
                this._adsManager && this._adsManager.pause()
            },
            resume: function() {
                this._adsManager && this._adsManager.resume()
            },
            volume: function(a) {
                this._adsManager && this._adsManager.setVolume(a)
            },
            onAdPlay: a.noop,
            onAdPause: a.noop,
            onAdVolume: a.noop,
            onAdComplete: a.noop,
            onAdDuration: a.noop,
            onAdRemaining: a.noop
        }),
        b
    }),
    define("player/postroll-client/ima-sdk-handler", ["jquery", "./action-overrides", "./ima-sdk-manager"], function(a, b, c) {
        "use strict";
        function d(a) {
            this._player = a,
            this._actionOverrides = null,
            this._userGestureOverrides = null,
            this._isRolling = !1,
            this._maiAd = null,
            this._manager = this._getManager(),
            this._stashedVolume = null,
            this._stashedMuted = null,
            this._addUserGestureOverrides()
        }
        return a.extend(d.prototype, {
            _addUserGestureOverrides: function() {
                function a() {
                    c._getManager && c._getManager().userGesture(),
                    c._userGestureOverrides.deactivate()
                }
                var c = this;
                if (!c._userGestureOverrides) {
                    var d = {
                        play: a
                    }
                      , e = {
                        callOriginalActions: !0,
                        useDefaultActions: !1
                    };
                    c._userGestureOverrides = new b(c._player,d,e),
                    c._userGestureOverrides.activate()
                }
            },
            _getActionOverrides: function() {
                if (this._actionOverrides)
                    return this._actionOverrides;
                var a = this
                  , c = {
                    play: function() {
                        a._getManager().resume()
                    },
                    pause: function() {
                        a._getManager().pause()
                    },
                    volume: function(b) {
                        a._getManager().volume(Math.max(Math.min(Number(b), 1), 0))
                    },
                    mute: function(b) {
                        a._getManager().volume(b ? 0 : a._player.topic("volume").read())
                    }
                };
                return this._actionOverrides = new b(this._player,c),
                this._actionOverrides
            },
            _getManager: function() {
                if (this._manager)
                    return this._manager;
                c.debug = this._player.options && !!this._player.options.imasdkDebug;
                var a = new c(this._player)
                  , b = this;
                return a.onAdPlay = function() {
                    b._player.topic("play").publish();
                    var c = b._player.topic("muted").read() ? 0 : b._player.topic("volume").read();
                    a.volume(c)
                }
                ,
                a.onAdPause = function() {
                    b._player.topic("pause").publish()
                }
                ,
                a.onAdComplete = function() {
                    b._disengageAd()
                }
                ,
                a.onAdDuration = function(a) {
                    b._player.topic("postrollDuration").publish(a)
                }
                ,
                a.onAdRemaining = function(a) {
                    b._player.topic("postrollRemaining").publish(a)
                }
                ,
                a.onAdVolume = function(a) {
                    b._player.topic("volume").publishUnique(a),
                    a <= 0 && b._player.topic("muted").publishUnique(!0)
                }
                ,
                this._manager = a,
                a
            },
            _applyStashes: function() {
                null !== this._stashedVolume && this._player.volume(this._stashedVolume),
                null !== this._stashedMuted && this._player.mute(this._stashedMuted)
            },
            _storeStashes: function() {
                this._stashedVolume = this._player.topic("volume").read(),
                this._stashedMuted = this._player.topic("muted").read()
            },
            _disengageAd: function() {
                this._getActionOverrides().deactivate(),
                this._applyStashes(),
                this._isRolling && this._player.topic("postrollComplete").publish(),
                this.clearAd(),
                this._isRolling = !1
            },
            abandonAd: function() {
                this._disengageAd()
            },
            clearAd: function() {
                this._maiAd = null
            },
            hasAd: function() {
                return !!this._maiAd
            },
            loadAd: function(b) {
                if (this.clearAd(),
                b && "imasdk" === b.postrollType) {
                    b = a.extend(!0, {}, b);
                    var c = b.postrollResponse;
                    c && (this._maiAd = b,
                    this._getManager().loadAd(c))
                }
            },
            startAd: function() {
                this._storeStashes(),
                this._player.topic("postrollStart").publish(),
                this._isRolling = !0,
                this._player._unsetSource(),
                this._getActionOverrides().activate(),
                this._getManager().startAd()
            }
        }),
        d
    }),
    define("player/postroll-client/fire-impression", ["jquery"], function(a) {
        "use strict";
        var b = {};
        return b.byKey = function(c, d, e) {
            if (c) {
                var f = c[d];
                if (f) {
                    if (e = e || b.atUrl,
                    c[d] = null,
                    !a.isArray(f))
                        return void e(f);
                    for (var g = f.length; g--; )
                        e(f[g])
                }
            }
        }
        ,
        b.byProgress = function(a, c) {
            c > 0 && b.byKey(a, "postrollQ0Impressions"),
            c >= .25 && b.byKey(a, "postrollQ1Impressions"),
            c >= .5 && b.byKey(a, "postrollQ2Impressions"),
            c >= .75 && b.byKey(a, "postrollQ3Impressions"),
            c >= 1 && b.byKey(a, "postrollQ4Impressions")
        }
        ,
        b.atUrl = function(a) {
            (new Image).src = a
        }
        ,
        b.postrollErrors = function(a, c) {
            b.byKey(a, "postrollErrorImpressions", function(a) {
                b.atUrl(a.replace("[ERRORCODE]", c ? c : "900"))
            })
        }
        ,
        b
    }),
    define("player/clickOverlay", ["jquery"], function(a) {
        "use strict";
        function b() {
            var b = this;
            b.$el = a('<a href="#" target="_blank"></a>').css({
                display: "none",
                position: "absolute",
                top: "0",
                left: "0",
                width: "100%",
                height: "100%"
            }).on("click", function() {
                b._onClick()
            })
        }
        return a.extend(b.prototype, {
            show: function(a, b) {
                a && (this.clickImpressions = "string" == typeof b ? [b] : b,
                this.$el.attr("href", a).css("display", "block"))
            },
            hide: function() {
                this.$el.hide()
            },
            _onClick: function() {
                if (this.clickImpressions && this.clickImpressions.length) {
                    var a = this.clickImpressions
                      , c = a.length;
                    for (this.clickImpressions = []; c--; )
                        b.fireImpression(a[c])
                }
            }
        }),
        b.fireImpression = function(a) {
            (new Image).src = a
        }
        ,
        b.forPlayer = function(c) {
            return c._clickOverlay || (c._clickOverlay = new b,
            a(c.el).after(c._clickOverlay.$el)),
            c._clickOverlay
        }
        ,
        b
    }),
    define("player/throttle", ["jquery"], function(a) {
        "use strict";
        return function(b, c, d, e) {
            var f, g = 0;
            "boolean" != typeof c && (e = d,
            d = c,
            c = void 0);
            var h = function() {
                function a() {
                    g = +new Date,
                    d.apply(i, k)
                }
                function h() {
                    f = void 0
                }
                var i = this
                  , j = +new Date - g
                  , k = arguments;
                e && !f && a(),
                f && clearTimeout(f),
                void 0 === e && j > b ? a() : c !== !0 && (f = setTimeout(e ? h : a, void 0 === e ? b - j : b))
            };
            return a.guid && (h.guid = d.guid = d.guid || a.guid++),
            h
        }
    }),
    define("player/postroll-client/vast-handler", ["jquery", "./action-overrides", "./fire-impression", "../clickOverlay", "../throttle"], function(a, b, c, d, e) {
        "use strict";
        function f(a) {
            this.player = a,
            this.isListening = !1,
            this.isRolling = !1
        }
        var g = function() {
            var a = document.createElement("video");
            return function(b) {
                return !!(b && a.canPlayType && a.canPlayType(b).replace(/^no$/, ""))
            }
        }();
        return a.extend(f.prototype, {
            abandonAd: function() {
                this.isRolling ? this.onAdEnded() : this.clearAd()
            },
            clearAd: function() {
                this.maiAd = null
            },
            loadAd: function(b) {
                this.clearAd(),
                b && "vast" === b.postrollType && (this.maiAd = a.extend(!0, {}, b))
            },
            hasAd: function() {
                return !(!this.maiAd || !this.getPlayableMediaUrl())
            },
            startAd: function() {
                this.player._unsetSource(),
                this.addListeners(),
                this.onAdStart();
                var a = this.getPlayableMediaUrl();
                return a ? (this.player.el.src = a,
                void this.player.el.play()) : (this.log("No playable media found"),
                c.postrollErrors(this.maiAd, "403"),
                void this.onAdError())
            },
            getPlayableMediaUrl: function() {
                var a = (this.maiAd && this.maiAd.postrollMediaFiles || []).filter(function(a) {
                    return g(a.type)
                })
                  , b = a && a.length;
                if (b) {
                    var c = a[0].url
                      , d = a[0].width;
                    if (1 === b)
                        return c;
                    for (var e = this.player.el, f = Math.min(1280, e.width || e.clientWidth || e.offsetwidth || 320), h = Math.min((this.player.topic("metricsData.bitrate").read() || 0) / 1024, 1100); b--; )
                        a[b].width < f && a[b].width > d && a[b].bitrate <= h && (c = a[b].url,
                        d = a[b].width);
                    return c
                }
            },
            getActionOverrides: function() {
                var a = this;
                if (a.actionOverrides)
                    return a.actionOverrides;
                var c = {
                    play: function() {
                        a.player.el.play()
                    },
                    pause: function() {
                        a.player.el.pause()
                    },
                    volume: !1,
                    mute: !1
                };
                return a.actionOverrides = new b(a.player,c),
                a.actionOverrides
            },
            addListeners: function() {
                function b() {
                    g === Number(g) && (d.player.topic("postrollDuration").publishUnique(g),
                    f === Number(f) && (d.player.topic("postrollRemaining").publishUnique(Math.max(g - f, 0)),
                    f >= .5 && c.byProgress(d.maiAd, (f + 1) / g)))
                }
                var d = this;
                if (!d.isListening) {
                    d.isListening = !0;
                    var f, g, h = d.player.el, i = a(h);
                    i.on("timeupdate", e(200, function() {
                        d.isRolling ? (f = h.currentTime,
                        b()) : f = null
                    })),
                    i.on("durationchange", function() {
                        d.isRolling ? (g = h.duration,
                        b()) : g = null
                    }),
                    i.on("ended", function() {
                        d.isRolling && (c.byKey(d.maiAd, "postrollQ0Impressions"),
                        c.byKey(d.maiAd, "postrollQ1Impressions"),
                        c.byKey(d.maiAd, "postrollQ2Impressions"),
                        c.byKey(d.maiAd, "postrollQ3Impressions"),
                        c.byKey(d.maiAd, "postrollQ4Impressions"),
                        d.onAdComplete()),
                        f = null,
                        g = null
                    }),
                    i.on("error", function() {
                        d.isRolling && (d.log("Error encountered during media playback"),
                        c.postrollErrors(d.maiAd, "405"),
                        d.onAdError()),
                        f = null,
                        g = null
                    })
                }
            },
            log: function(a, b) {
                this.player.throwError({
                    type: "vast",
                    message: "VAST: " + a,
                    postrollMedia: this.getPlayableMediaUrl() || this.maiAd && this.maiAd.mediaFiles && this.maiAd.mediaFiles.length && this.maiAd.mediaFiles[0].url || "",
                    status: b && b.message ? b.message : ""
                })
            },
            onAdStart: function() {
                this.player.topic("postrollStart").publish(),
                this.getActionOverrides().activate(),
                this.isRolling = !0,
                d.forPlayer(this.player).show(this.maiAd.postrollClickDestination, this.maiAd.postrollClickImpressions)
            },
            onAdComplete: function() {
                this.onAdEnded()
            },
            onAdError: function() {
                c.postrollErrors(this.maiAd, "900"),
                this.onAdEnded()
            },
            onAdEnded: function() {
                this.getActionOverrides().deactivate(),
                this.player.topic("postrollComplete").publish(),
                this.clearAd(),
                d.forPlayer(this.player).hide(),
                this.isRolling = !1
            }
        }),
        f
    }),
    function(a) {
        if ("object" == typeof exports && "undefined" != typeof module)
            module.exports = a();
        else if ("function" == typeof define && define.amd)
            define("vpaid-html5-client", [], a);
        else {
            var b;
            b = "undefined" != typeof window ? window : "undefined" != typeof global ? global : "undefined" != typeof self ? self : this,
            b.VPAIDHTML5Client = a()
        }
    }(function() {
        return function a(b, c, d) {
            function e(g, h) {
                if (!c[g]) {
                    if (!b[g]) {
                        var i = "function" == typeof require && require;
                        if (!h && i)
                            return i(g, !0);
                        if (f)
                            return f(g, !0);
                        var j = new Error("Cannot find module '" + g + "'");
                        throw j.code = "MODULE_NOT_FOUND",
                        j
                    }
                    var k = c[g] = {
                        exports: {}
                    };
                    b[g][0].call(k.exports, function(a) {
                        var c = b[g][1][a];
                        return e(c ? c : a)
                    }, k, k.exports, a, b, c, d)
                }
                return c[g].exports
            }
            for (var f = "function" == typeof require && require, g = 0; g < d.length; g++)
                e(d[g]);
            return e
        }({
            1: [function(a, b, c) {
                "use strict";
                function d(a, b, c) {}
                function e(a, b, c) {
                    Object.defineProperty(a, b, {
                        writable: !1,
                        configurable: !1,
                        value: c
                    })
                }
                var f = ["handshakeVersion", "initAd", "startAd", "stopAd", "skipAd", "resizeAd", "pauseAd", "resumeAd", "expandAd", "collapseAd", "subscribe", "unsubscribe"]
                  , g = ["AdLoaded", "AdStarted", "AdStopped", "AdSkipped", "AdSkippableStateChange", "AdSizeChange", "AdLinearChange", "AdDurationChange", "AdExpandedChange", "AdRemainingTimeChange", "AdVolumeChange", "AdImpression", "AdVideoStart", "AdVideoFirstQuartile", "AdVideoMidpoint", "AdVideoThirdQuartile", "AdVideoComplete", "AdClickThru", "AdInteraction", "AdUserAcceptInvitation", "AdUserMinimize", "AdUserClose", "AdPaused", "AdPlaying", "AdLog", "AdError"]
                  , h = ["getAdLinear", "getAdWidth", "getAdHeight", "getAdExpanded", "getAdSkippableState", "getAdRemainingTime", "getAdDuration", "getAdVolume", "getAdCompanions", "getAdIcons"]
                  , i = ["setAdVolume"];
                d.prototype.handshakeVersion = function(a, b) {}
                ,
                d.prototype.initAd = function(a, b, c, d, e, f, g) {}
                ,
                d.prototype.startAd = function(a) {}
                ,
                d.prototype.stopAd = function(a) {}
                ,
                d.prototype.skipAd = function(a) {}
                ,
                d.prototype.resizeAd = function(a, b, c, d) {}
                ,
                d.prototype.pauseAd = function(a) {}
                ,
                d.prototype.resumeAd = function(a) {}
                ,
                d.prototype.expandAd = function(a) {}
                ,
                d.prototype.collapseAd = function(a) {}
                ,
                d.prototype.subscribe = function(a, b, c) {}
                ,
                d.prototype.unsubscribe = function(a, b) {}
                ,
                d.prototype.getAdLinear = function(a) {}
                ,
                d.prototype.getAdWidth = function(a) {}
                ,
                d.prototype.getAdHeight = function(a) {}
                ,
                d.prototype.getAdExpanded = function(a) {}
                ,
                d.prototype.getAdSkippableState = function(a) {}
                ,
                d.prototype.getAdRemainingTime = function(a) {}
                ,
                d.prototype.getAdDuration = function(a) {}
                ,
                d.prototype.getAdVolume = function(a) {}
                ,
                d.prototype.getAdCompanions = function(a) {}
                ,
                d.prototype.getAdIcons = function(a) {}
                ,
                d.prototype.setAdVolume = function(a, b) {}
                ,
                e(d, "METHODS", f),
                e(d, "GETTERS", h),
                e(d, "SETTERS", i),
                e(d, "EVENTS", g);
                var j = f.filter(function(a) {
                    return ["skipAd"].indexOf(a) === -1
                });
                e(d, "checkVPAIDInterface", function(a) {
                    var b = j.every(function(b) {
                        return "function" == typeof a[b]
                    });
                    return b
                }),
                b.exports = d
            }
            , {}],
            2: [function(a, b, c) {
                "use strict";
                function d(a, b, c, d) {
                    this._isValid = k(a),
                    this._isValid && (this._creative = a,
                    this._el = b,
                    this._videoEl = c,
                    this._iframe = d,
                    this._subscribers = new j,
                    l.setFullSizeStyle(b),
                    e.call(this))
                }
                function e() {
                    if (o.forEach(function(a) {
                        this._creative.subscribe(g.bind(this, a), a)
                    }
                    .bind(this)),
                    this._creative.subscribe(f.bind(this), n),
                    this._videoEl) {
                        var a = this._iframe.contentDocument.documentElement
                          , b = this._videoEl;
                        a.addEventListener("click", function(c) {
                            c.target === a && b.click()
                        })
                    }
                }
                function f(a, b, c) {
                    this._subscribers.triggerSync(n, {
                        url: a,
                        id: b,
                        playerHandles: c
                    })
                }
                function g(a) {
                    this._subscribers.trigger(a, Array.prototype.slice(arguments, 1))
                }
                function h(a, b, c, d) {
                    a ? a(c, d) : c && b.trigger(m, c)
                }
                var i = a("./IVPAIDAdUnit")
                  , j = a("./subscriber")
                  , k = i.checkVPAIDInterface
                  , l = a("./utils")
                  , m = (i.METHODS,
                "AdError")
                  , n = "AdClickThru"
                  , o = i.EVENTS.filter(function(a) {
                    return a != n
                });
                d.prototype = Object.create(i.prototype),
                d.prototype.isValidVPAIDAd = function() {
                    return this._isValid
                }
                ,
                i.METHODS.forEach(function(a) {
                    var b = ["subscribe", "unsubscribe", "initAd"];
                    b.indexOf(a) === -1 && (d.prototype[a] = function() {
                        var b = i.prototype[a].length
                          , c = Array.prototype.slice.call(arguments)
                          , d = b === c.length ? c.pop() : void 0;
                        setTimeout(function() {
                            var b, e = null;
                            try {
                                b = this._creative[a].apply(this._creative, c)
                            } catch (a) {
                                e = a
                            }
                            h(d, this._subscribers, e, b)
                        }
                        .bind(this), 0)
                    }
                    )
                }),
                d.prototype.initAd = function(a, b, c, d, e, f, g) {
                    e = e || {},
                    f = l.extend({
                        slot: this._el,
                        videoSlot: this._videoEl
                    }, f || {}),
                    setTimeout(function() {
                        var i;
                        try {
                            this._creative.initAd(a, b, c, d, e, f)
                        } catch (a) {
                            i = a
                        }
                        h(g, this._subscribers, i)
                    }
                    .bind(this), 0)
                }
                ,
                d.prototype.subscribe = function(a, b, c) {
                    this._subscribers.subscribe(b, a, c)
                }
                ,
                d.prototype.unsubscribe = function(a, b) {
                    this._subscribers.unsubscribe(b, a)
                }
                ,
                d.prototype.on = d.prototype.subscribe,
                d.prototype.off = d.prototype.unsubscribe,
                i.GETTERS.forEach(function(a) {
                    d.prototype[a] = function(b) {
                        setTimeout(function() {
                            var c, d = null;
                            try {
                                c = this._creative[a]()
                            } catch (a) {
                                d = a
                            }
                            h(b, this._subscribers, d, c)
                        }
                        .bind(this), 0)
                    }
                }),
                d.prototype.setAdVolume = function(a, b) {
                    setTimeout(function() {
                        var c, d = null;
                        try {
                            this._creative.setAdVolume(a),
                            c = this._creative.getAdVolume()
                        } catch (a) {
                            d = a
                        }
                        d || (d = l.validate(c === a, "failed to apply volume: " + a)),
                        h(b, this._subscribers, d, c)
                    }
                    .bind(this), 0)
                }
                ,
                d.prototype._destroy = function() {
                    this.stopAd(),
                    this._subscribers.unsubscribeAll()
                }
                ,
                b.exports = d
            }
            , {
                "./IVPAIDAdUnit": 1,
                "./subscriber": 4,
                "./utils": 5
            }],
            3: [function(a, b, c) {
                "use strict";
                function d(a, b, c, d) {
                    c = c || {},
                    this._id = n(),
                    this._destroyed = !1,
                    this._frameContainer = m.createElementInEl(a, "div"),
                    this._videoEl = b,
                    this._vpaidOptions = d || {
                        timeout: 1e4
                    },
                    this._templateConfig = {
                        template: c.template || p,
                        extraOptions: c.extraOptions || {}
                    }
                }
                function e(a) {
                    var b = this[a];
                    b && b.parentNode && (b.parentNode.removeChild(b),
                    delete this[a])
                }
                function f() {
                    h.call(this),
                    delete this._adUnit
                }
                function g() {
                    h.call(this),
                    j.call(this)
                }
                function h() {
                    e.call(this, "_frame"),
                    i.call(this)
                }
                function i() {
                    this._onLoad && (window.removeEventListener("message", this._onLoad),
                    delete this._onLoad)
                }
                function j() {
                    this._adUnit && (this._adUnit.stopAd(),
                    delete this._adUnit)
                }
                function k() {
                    if (this._destroyed)
                        throw new Error("VPAIDHTML5Client already destroyed!")
                }
                function l() {
                    var a = window.parent.location;
                    return a.origin || a.protocol + "//" + a.hostname + (a.port ? ":" + a.port : "")
                }
                var m = a("./utils")
                  , n = m.unique("vpaidIframe")
                  , o = a("./VPAIDAdUnit")
                  , p = '<!DOCTYPE html><html lang="en"><head><meta charset="UTF-8"></head><body style="margin:0;padding:0"><div class="ad-element"></div><script type="text/javascript" src="{{iframeURL_JS}}"></script><script type="text/javascript">window.parent.postMessage(\'{"event": "ready", "id": "{{iframeID}}"}\', \'{{origin}}\');</script></body></html>'
                  , q = "AdStopped";
                d.prototype.destroy = function() {
                    this._destroyed || (this._destroyed = !0,
                    g.call(this))
                }
                ,
                d.prototype.isDestroyed = function() {
                    return this._destroyed
                }
                ,
                d.prototype.loadAdUnit = function(a, b) {
                    function c(a) {
                        if (a.origin === l()) {
                            try {
                                var c = JSON.parse(a.data)
                            } catch (a) {
                                return
                            }
                            if (c.id === e.getID()) {
                                var d, g, h;
                                if (e._frame.contentWindow ? (h = e._frame.contentWindow.getVPAIDAd,
                                g = m.validate("function" == typeof h, "the ad didn't return a function to create an ad")) : g = "the iframe is not anymore in the DOM tree",
                                !g) {
                                    var j = e._frame.contentWindow.document.querySelector(".ad-element");
                                    d = new o(h(),j,e._videoEl,e._frame),
                                    d.subscribe(q, f.bind(e)),
                                    g = m.validate(d.isValidVPAIDAd(), "the add is not fully complaint with VPAID specification")
                                }
                                return e._adUnit = d,
                                i.call(e),
                                b(g, g ? null : d),
                                !0
                            }
                        }
                    }
                    function d() {
                        b("timeout", null)
                    }
                    if (!this._onLoad) {
                        k.call(this),
                        g.call(this);
                        var e = this
                          , h = m.createIframeWithContent(this._frameContainer, this._templateConfig.template, m.extend({
                            iframeURL_JS: a,
                            iframeID: this.getID(),
                            origin: l()
                        }, this._templateConfig.extraOptions));
                        this._frame = h,
                        this._onLoad = m.callbackTimeout(this._vpaidOptions.timeout, c.bind(this), d.bind(this)),
                        window.addEventListener("message", this._onLoad)
                    }
                }
                ,
                d.prototype.unloadAdUnit = function() {
                    g.call(this)
                }
                ,
                d.prototype.getID = function() {
                    return this._id
                }
                ,
                b.exports = d,
                window.VPAIDHTML5Client = d
            }
            , {
                "./VPAIDAdUnit": 2,
                "./utils": 5
            }],
            4: [function(a, b, c) {
                "use strict";
                function d() {
                    this._subscribers = {}
                }
                d.prototype.subscribe = function(a, b, c) {
                    this.isHandlerAttached(a, b) || this.get(b).push({
                        handler: a,
                        context: c,
                        eventName: b
                    })
                }
                ,
                d.prototype.unsubscribe = function(a, b) {
                    this._subscribers[b] = this.get(b).filter(function(b) {
                        return a !== b.handler
                    })
                }
                ,
                d.prototype.unsubscribeAll = function() {
                    this._subscribers = {}
                }
                ,
                d.prototype.trigger = function(a, b) {
                    var c = this
                      , d = this.get(a).concat(this.get("*"));
                    d.forEach(function(a) {
                        setTimeout(function() {
                            c.isHandlerAttached(a.handler, a.eventName) && a.handler.call(a.context, b)
                        }, 0)
                    })
                }
                ,
                d.prototype.triggerSync = function(a, b) {
                    var c = this.get(a).concat(this.get("*"));
                    c.forEach(function(a) {
                        a.handler.call(a.context, b)
                    })
                }
                ,
                d.prototype.get = function(a) {
                    return this._subscribers[a] || (this._subscribers[a] = []),
                    this._subscribers[a]
                }
                ,
                d.prototype.isHandlerAttached = function(a, b) {
                    return this.get(b).some(function(b) {
                        return a === b.handler
                    })
                }
                ,
                b.exports = d
            }
            , {}],
            5: [function(a, b, c) {
                "use strict";
                function d() {}
                function e(a, b) {
                    return a ? null : new Error(b)
                }
                function f(a, b, c) {
                    var e, f;
                    return f = setTimeout(function() {
                        b = d,
                        c()
                    }, a),
                    e = function() {
                        b.apply(this, arguments) && clearTimeout(f)
                    }
                }
                function g(a, b, c) {
                    var d = document.createElement(b);
                    return c && (d.id = c),
                    a.appendChild(d),
                    d
                }
                function h(a, b, c) {
                    var d = i(a, null, c.zIndex);
                    if (l(d, k(b, c)))
                        return d
                }
                function i(a, b, c) {
                    var d = document.createElement("iframe");
                    return d.src = b || "about:blank",
                    d.marginWidth = "0",
                    d.marginHeight = "0",
                    d.frameBorder = "0",
                    d.width = "100%",
                    d.height = "100%",
                    j(d),
                    c && (d.style.zIndex = c),
                    d.setAttribute("SCROLLING", "NO"),
                    a.innerHTML = "",
                    a.appendChild(d),
                    d
                }
                function j(a) {
                    a && (a.style.position = "absolute",
                    a.style.left = "0",
                    a.style.top = "0",
                    a.style.margin = "0px",
                    a.style.padding = "0px",
                    a.style.border = "none",
                    a.style.width = "100%",
                    a.style.height = "100%")
                }
                function k(a, b) {
                    return Object.keys(b).forEach(function(c) {
                        var d = "object" == typeof d ? JSON.stringify(b[c]) : b[c];
                        a = a.replace(new RegExp("{{" + c + "}}","g"), d)
                    }),
                    a
                }
                function l(a, b) {
                    var c = a.contentWindow && a.contentWindow.document;
                    return !!c && (c.write(b),
                    !0)
                }
                function m(a, b) {
                    return Object.keys(b).forEach(function(c) {
                        a[c] = b[c]
                    }),
                    a
                }
                function n(a) {
                    var b = -1;
                    return function() {
                        return a + "_" + ++b
                    }
                }
                b.exports = {
                    noop: d,
                    validate: e,
                    callbackTimeout: f,
                    createElementInEl: g,
                    createIframeWithContent: h,
                    createIframe: i,
                    setFullSizeStyle: j,
                    simpleTemplate: k,
                    setIframeContent: l,
                    extend: m,
                    unique: n
                }
            }
            , {}]
        }, {}, [3])(3)
    }),
    define("player/postroll-client/vpaid-handler", ["jquery", "./action-overrides", "./fire-impression", "../throttle", "vpaid-html5-client"], function(a, b, c, d, e) {
        "use strict";
        function f(b) {
            this.actionOverrides = null,
            this.adUnit = null,
            this.client = null,
            this.isListening = null,
            this.isRolling = !1,
            this.maiAd = null,
            this.player = b,
            this.tickInterval = null,
            this.$overlay = null,
            this.adTimeouts = {},
            this.boundAdDurationCallback = a.proxy(this.unboundAdDurationCallback, this),
            this.boundAdRemainingTimeCallback = a.proxy(this.unboundAdRemainingTimeCallback, this),
            this.boundAdVolumeCallback = a.proxy(this.unboundAdVolumeCallback, this)
        }
        function g(a) {
            return a = Number(a),
            a < 1e-4 && (a = 0),
            a > .9999 && (a = 1),
            a
        }
        var h = "HANDSHAKE_TO_VERSION"
          , i = "INIT_AD_TO_AD_LOADED"
          , j = "START_AD_TO_AD_STARTED";
        return a.extend(f.prototype, {
            abandonAd: function() {
                this.isRolling ? this.onAdEnded() : this.clearAd()
            },
            clearAd: function() {
                this.client && this.adUnit && this.client.unloadAdUnit(),
                this.adUnit = null,
                this.maiAd = null
            },
            loadAd: function(b) {
                var c = this;
                if (c.clearAd(),
                b && "vpaid" === b.postrollType) {
                    c.maiAd = a.extend(!0, {}, b);
                    var d = c.getMediaUrl()
                      , e = c.getClient();
                    d ? e.loadAdUnit(d, function(a, b) {
                        a ? (c.logIfRolling("Error loading ad unit for " + d, a),
                        c.onAdError()) : c.adUnit = b
                    }) : c.clearAd()
                }
            },
            hasAd: function() {
                return !(!this.maiAd || !this.getMediaUrl())
            },
            startAd: function() {
                var a = this;
                return a.player._unsetSource(),
                a.addElementListeners(),
                a.player.topic("postrollStart").publish(),
                a.getActionOverrides().activate(),
                a.resetTicking(),
                a.isRolling = !0,
                a.adUnit ? void a.rollAdUnit() : a.onAdError()
            },
            getMediaUrl: function() {
                var a = (this.maiAd.postrollMediaFiles || []).filter(function(a) {
                    return "application/javascript" === a.type
                });
                if (a && a[0])
                    return a[0].url
            },
            getClient: function() {
                return this.client || (this.$overlay = a("<div></div>").css({
                    position: "absolute",
                    top: "0",
                    left: "0",
                    width: "100%",
                    height: "100%"
                }).hide(),
                a(this.player.el).after(this.$overlay),
                this.client = new e(this.$overlay.get(0),this.player.el)),
                this.client
            },
            getActionOverrides: function() {
                var a = this;
                if (a.actionOverrides)
                    return a.actionOverrides;
                var c = {
                    play: function() {
                        a.adUnit && a.adUnit.resumeAd()
                    },
                    pause: function() {
                        a.adUnit && a.adUnit.pauseAd()
                    },
                    volume: function(b) {
                        a.adUnit && a.setVolume(b)
                    },
                    mute: function(b) {
                        a.adUnit && a.setMute(!!b)
                    }
                };
                return a.actionOverrides = new b(a.player,c),
                a.actionOverrides
            },
            getViewSize: function() {
                var a = this.player.el
                  , b = a.height || a.clientHeight || a.offsetHeight
                  , c = a.width || a.clientWidth || a.offsetwidth
                  , d = "normal";
                return b < 320 && (d = "thumbnail"),
                this.player.isFullScreen && (d = "fullscreen"),
                {
                    width: c,
                    height: b,
                    viewMode: d
                }
            },
            setVolume: function(a) {
                a = g(a),
                this.player.el.muted = 0 === a,
                this.adUnit.setAdVolume(a)
            },
            setMute: function(a) {
                this.setVolume(a ? 0 : this.player.topic("volume").read() || 1)
            },
            resetTicking: function() {
                var a = this;
                a.stopTicking(),
                a.tickInterval = setInterval(function() {
                    a.onAdTick()
                }, 200)
            },
            stopTicking: function() {
                this.tickInterval && (clearInterval(this.tickInterval),
                this.tickInterval = null)
            },
            addElementListeners: function() {
                function b() {
                    c.isRolling && c.onViewResize()
                }
                var c = this;
                c.isListening || (c.isListening = !0,
                a(window).on("resize", d(200, b)),
                c.player.topic("enterFullScreen").subscribe(b),
                c.player.topic("exitFullScreen").subscribe(b))
            },
            unboundAdDurationCallback: function(a, b) {
                a || Number(b) === b && this.player.topic("postrollDuration").publishUnique(b)
            },
            unboundAdRemainingTimeCallback: function(a, b) {
                a || Number(b) === b && b >= 0 && this.player.topic("postrollRemaining").publishUnique(b)
            },
            unboundAdVolumeCallback: function(a, b) {
                if (!a) {
                    b = g(b);
                    var c = b <= 0;
                    this.player.topic("muted").publishUnique(c),
                    b > 0 && this.player.topic("volume").publishUnique(b)
                }
            },
            log: function(a, b) {
                this.player.throwError({
                    type: "vpaid",
                    message: "VPAID: " + a,
                    status: b && b.message ? b.message : ""
                })
            },
            logIfRolling: function(a, b) {
                this.isRolling && this.log(a, b)
            },
            clearAdTimeout: function(a) {
                this.adTimeouts[a] && (window.clearTimeout(this.adTimeouts[a]),
                this.adTimeouts[a] = null)
            },
            startAdTimeout: function(a) {
                var b = this;
                b.adTimeouts[a] && b.clearAdTimeout(a),
                b.adTimeouts[a] = window.setTimeout(function() {
                    b.logIfRolling("Timeout expired: " + a),
                    b.onAdError()
                }, 3e3)
            },
            onAdComplete: function() {
                this.onAdEnded()
            },
            onAdError: function() {
                this.isRolling && this.player._unsetSource(),
                this.onAdEnded()
            },
            onAdEnded: function() {
                this.$overlay && this.$overlay.hide(),
                this.stopTicking(),
                this.getActionOverrides().deactivate(),
                this.isRolling && this.player.topic("postrollComplete").publish(),
                this.clearAd(),
                this.isRolling = !1
            },
            onAdTick: function() {
                this.tickInterval && this.adUnit && (this.adUnit.getAdDuration(this.boundAdDurationCallback),
                this.adUnit.getAdRemainingTime(this.boundAdRemainingTimeCallback))
            },
            onViewResize: function() {
                if (this.adUnit) {
                    var a = this.getViewSize();
                    this.adUnit.resizeAd(a.width, a.height, a.viewMode)
                }
            },
            rollAdUnit: function() {
                var a = this
                  , b = a.adUnit;
                b.subscribe("AdDurationChange", function() {
                    a.onAdTick()
                }),
                b.subscribe("AdClickThru", function() {
                    c.byKey(a.maiAd, "postrollClickImpressions")
                }),
                b.subscribe("AdError", function(b) {
                    a.isRolling && (a.log("AdError event received", b),
                    c.postrollErrors(a.maiAd, "901")),
                    a.onAdError()
                }),
                b.subscribe("AdImpression", function() {}),
                b.subscribe("AdPaused", function() {
                    c.byKey(a.maiAd, "postrollPauseImpressions")
                }),
                b.subscribe("AdPlaying", function() {
                    c.byKey(a.maiAd, "postrollResumeImpressions")
                }),
                b.subscribe("AdSkipped", function() {
                    a.onAdComplete()
                }),
                b.subscribe("AdStopped", function() {
                    a.onAdComplete()
                }),
                b.subscribe("AdVideoComplete", function() {
                    c.byKey(a.maiAd, "postrollQ4Impressions"),
                    a.onAdComplete()
                }),
                b.subscribe("AdVideoStart", function() {
                    c.byKey(a.maiAd, "postrollQ0Impressions");
                    var b = a.player.topic("muted").read()
                      , d = a.player.topic("volume").read();
                    d && !b ? a.setVolume(d) : a.setMute(!0),
                    a.$overlay.show()
                }),
                b.subscribe("AdVideoFirstQuartile", function() {
                    c.byKey(a.maiAd, "postrollQ1Impressions")
                }),
                b.subscribe("AdVideoMidpoint", function() {
                    c.byKey(a.maiAd, "postrollQ2Impressions")
                }),
                b.subscribe("AdVideoThirdQuartile", function() {
                    c.byKey(a.maiAd, "postrollQ3Impressions")
                }),
                b.subscribe("AdVolumeChange", function() {
                    a.adUnit.getAdVolume(a.boundAdVolumeCallback)
                }),
                b.subscribe("AdStarted", function() {
                    a.clearAdTimeout(j)
                }),
                b.subscribe("AdLoaded", function() {
                    a.clearAdTimeout(i),
                    a.startAdTimeout(j),
                    b.startAd(function(b) {
                        b && (a.logIfRolling("Start ad callback received error", b),
                        a.onAdError())
                    })
                }),
                a.startAdTimeout(h),
                b.handshakeVersion("2.0", function(c) {
                    if (a.clearAdTimeout(h),
                    c)
                        return a.logIfRolling("Error in handshake", c),
                        a.onAdError();
                    var d = a.getViewSize()
                      , e = a.maiAd.postrollAdParameters;
                    a.startAdTimeout(i),
                    b.initAd(d.width, d.height, d.viewMode, -1, {
                        AdParameters: e
                    }, {}, function(b) {
                        b && (a.logIfRolling("Error initializing ad", b),
                        a.onAdError())
                    })
                })
            }
        }),
        f
    }),
    define("player/postroll-client/index", ["jquery", "./ima-sdk-handler", "./vast-handler", "./vpaid-handler"], function(a, b, c, d) {
        "use strict";
        function e(a) {
            this._player = a,
            this._imasdk = new b(a),
            this._vast = new c(a),
            this._vpaid = new d(a)
        }
        return a.extend(e.prototype, {
            abandon: function() {
                this._imasdk.abandonAd(),
                this._vast.abandonAd(),
                this._vpaid.abandonAd()
            },
            clearAd: function() {
                this._imasdk.clearAd(),
                this._vast.clearAd(),
                this._vpaid.clearAd()
            },
            loadAd: function(a) {
                this._imasdk.loadAd(a),
                this._vast.loadAd(a),
                this._vpaid.loadAd(a)
            },
            hasAd: function() {
                return this._imasdk.hasAd() || this._vast.hasAd() || this._vpaid.hasAd()
            },
            startAd: function() {
                this._imasdk.hasAd() ? this._imasdk.startAd() : this._vast.hasAd() ? this._vast.startAd() : this._vpaid.hasAd() && this._vpaid.startAd()
            }
        }),
        e.forPlayer = function(a) {
            return a._postrollClient || (a._postrollClient = new e(a)),
            a._postrollClient
        }
        ,
        e
    }),
    define("player/hlsInitTalk", ["jquery", "./masterAdInterface", "./postroll-client/index"], function(a, b, c) {
        "use strict";
        function d(a, b, c) {
            c && (b += (b.indexOf("?") === -1 ? "?" : "&") + c),
            a._setSource(b)
        }
        return function(e, f) {
            var g, h, i = new a.Deferred, j = i.promise();
            try {
                g = e.currentTalk.resources.hls.stream,
                h = e.currentTalk.resources.hls.adUrl
            } catch (a) {
                return e.throwError({
                    type: "init",
                    message: "Missing HLS stream resource.",
                    severity: "fatal"
                }),
                i.reject(),
                j
            }
            if (!e.options.mai)
                return d(e, g),
                i.resolve(),
                j;
            var k, l = e.currentTalk.resources.hls, m = {
                allowUrlOverrides: !!e.options.maiUrlOverrides,
                postrollType: e.options.maiPostrollType
            }, n = l.maiTargeting || {};
            try {
                k = e.options.maiAdUnitId
            } catch (a) {
                return e.throwError({
                    type: "init",
                    message: "Missing MAI ad unit ID.",
                    severity: "fatal"
                }),
                i.reject(),
                j
            }
            var o = c.forPlayer(e);
            return e.maiAd = void 0,
            o.clearAd(),
            b.loadAd(k, n, m).then(function(a) {
                e.maiAd = a,
                o.loadAd(a),
                e.topic("ad").publish({
                    type: "master",
                    target: a.companionTargetingValue
                }),
                d(e, g, a.hlsParams),
                i.resolve()
            }).catch(function(a) {
                e.throwError({
                    message: "Error retrieving MAI ad",
                    status: "MAI: " + a.message
                }),
                d(e, g),
                i.resolve()
            }),
            j
        }
    }),
    define("player/replaceElement", ["jquery", "./getFlashVars", "./hlsInitTalk", "../vendor/swfobject"], function(a, b, c, d) {
        "use strict";
        function e(a) {
            return a.id || (a.id = "ted-player-" + j++),
            a.id
        }
        function f(a) {
            var c = {
                bgcolor: "#000000",
                quality: "high",
                wmode: "opaque",
                allowscriptaccess: "always",
                allowfullscreen: "true"
            }
              , f = a.options
              , g = e(f.el);
            if ("OBJECT" !== f.el.nodeName) {
                var h = b(a)
                  , i = f.attrs;
                c.flashvars = h,
                i.data = f.swf,
                d.createSWF(i, c, g)
            }
            a.el = document.getElementById(g),
            a.topic("ready.dom").publish()
        }
        function g(b) {
            var c, d = b.options, f = a("<video>"), g = e(d.el);
            b.currentTalk = d.talks[0],
            c = b.currentTalk.resources.h264[0].file,
            f.attr(d.attrs),
            f.attr("preload", "none"),
            f.attr("id", g),
            a(d.el).replaceWith(f),
            b.el = f[0],
            b._setSource(c),
            b.topic("ready.dom").publish()
        }
        function h(b) {
            var d = b.options
              , f = a("<video>")
              , g = e(d.el);
            b.currentTalk = d.talks[0],
            f.attr(d.attrs),
            f.attr("id", g),
            a(d.el).replaceWith(f),
            b.el = f[0],
            c(b, f).always(function() {
                b.topic("ready.dom").publish()
            })
        }
        function i(b) {
            var d = b.options
              , f = a("<video>")
              , g = e(d.el);
            b.currentTalk = d.talks[0],
            f.attr(d.attrs),
            f.attr("id", g),
            f.attr("crossorigin", "anonymous"),
            a(d.el).replaceWith(f),
            b.el = f[0],
            c(b, f).always(function() {
                b.topic("ready.dom").publish()
            })
        }
        var j = Math.floor(9999 * Math.random())
          , k = {
            flash: f,
            h264: g,
            hls: h,
            hlsjs: i
        };
        return function(a) {
            return k[a.mode] ? k[a.mode](a) : void a.throwError({
                type: "init",
                message: "Cannot replace element for unrecognized player mode: " + a.mode,
                severity: "fatal"
            })
        }
    }),
    function(a) {
        if ("object" == typeof exports && "undefined" != typeof module)
            module.exports = a();
        else if ("function" == typeof define && define.amd)
            define("hlsjs", [], a);
        else {
            var b;
            b = "undefined" != typeof window ? window : "undefined" != typeof global ? global : "undefined" != typeof self ? self : this,
            b.Hls = a()
        }
    }(function() {
        var a;
        return function a(b, c, d) {
            function e(g, h) {
                if (!c[g]) {
                    if (!b[g]) {
                        var i = "function" == typeof require && require;
                        if (!h && i)
                            return i(g, !0);
                        if (f)
                            return f(g, !0);
                        var j = new Error("Cannot find module '" + g + "'");
                        throw j.code = "MODULE_NOT_FOUND",
                        j
                    }
                    var k = c[g] = {
                        exports: {}
                    };
                    b[g][0].call(k.exports, function(a) {
                        var c = b[g][1][a];
                        return e(c ? c : a)
                    }, k, k.exports, a, b, c, d)
                }
                return c[g].exports
            }
            for (var f = "function" == typeof require && require, g = 0; g < d.length; g++)
                e(d[g]);
            return e
        }({
            1: [function(a, b, c) {
                function d() {
                    this._events = this._events || {},
                    this._maxListeners = this._maxListeners || void 0
                }
                function e(a) {
                    return "function" == typeof a
                }
                function f(a) {
                    return "number" == typeof a
                }
                function g(a) {
                    return "object" == typeof a && null !== a
                }
                function h(a) {
                    return void 0 === a
                }
                b.exports = d,
                d.EventEmitter = d,
                d.prototype._events = void 0,
                d.prototype._maxListeners = void 0,
                d.defaultMaxListeners = 10,
                d.prototype.setMaxListeners = function(a) {
                    if (!f(a) || a < 0 || isNaN(a))
                        throw TypeError("n must be a positive number");
                    return this._maxListeners = a,
                    this
                }
                ,
                d.prototype.emit = function(a) {
                    var b, c, d, f, i, j;
                    if (this._events || (this._events = {}),
                    "error" === a && (!this._events.error || g(this._events.error) && !this._events.error.length)) {
                        if (b = arguments[1],
                        b instanceof Error)
                            throw b;
                        var k = new Error('Uncaught, unspecified "error" event. (' + b + ")");
                        throw k.context = b,
                        k
                    }
                    if (c = this._events[a],
                    h(c))
                        return !1;
                    if (e(c))
                        switch (arguments.length) {
                        case 1:
                            c.call(this);
                            break;
                        case 2:
                            c.call(this, arguments[1]);
                            break;
                        case 3:
                            c.call(this, arguments[1], arguments[2]);
                            break;
                        default:
                            f = Array.prototype.slice.call(arguments, 1),
                            c.apply(this, f)
                        }
                    else if (g(c))
                        for (f = Array.prototype.slice.call(arguments, 1),
                        j = c.slice(),
                        d = j.length,
                        i = 0; i < d; i++)
                            j[i].apply(this, f);
                    return !0
                }
                ,
                d.prototype.addListener = function(a, b) {
                    var c;
                    if (!e(b))
                        throw TypeError("listener must be a function");
                    return this._events || (this._events = {}),
                    this._events.newListener && this.emit("newListener", a, e(b.listener) ? b.listener : b),
                    this._events[a] ? g(this._events[a]) ? this._events[a].push(b) : this._events[a] = [this._events[a], b] : this._events[a] = b,
                    g(this._events[a]) && !this._events[a].warned && (c = h(this._maxListeners) ? d.defaultMaxListeners : this._maxListeners,
                    c && c > 0 && this._events[a].length > c && (this._events[a].warned = !0,
                    console.error("(node) warning: possible EventEmitter memory leak detected. %d listeners added. Use emitter.setMaxListeners() to increase limit.", this._events[a].length),
                    "function" == typeof console.trace && console.trace())),
                    this
                }
                ,
                d.prototype.on = d.prototype.addListener,
                d.prototype.once = function(a, b) {
                    function c() {
                        this.removeListener(a, c),
                        d || (d = !0,
                        b.apply(this, arguments))
                    }
                    if (!e(b))
                        throw TypeError("listener must be a function");
                    var d = !1;
                    return c.listener = b,
                    this.on(a, c),
                    this
                }
                ,
                d.prototype.removeListener = function(a, b) {
                    var c, d, f, h;
                    if (!e(b))
                        throw TypeError("listener must be a function");
                    if (!this._events || !this._events[a])
                        return this;
                    if (c = this._events[a],
                    f = c.length,
                    d = -1,
                    c === b || e(c.listener) && c.listener === b)
                        delete this._events[a],
                        this._events.removeListener && this.emit("removeListener", a, b);
                    else if (g(c)) {
                        for (h = f; h-- > 0; )
                            if (c[h] === b || c[h].listener && c[h].listener === b) {
                                d = h;
                                break
                            }
                        if (d < 0)
                            return this;
                        1 === c.length ? (c.length = 0,
                        delete this._events[a]) : c.splice(d, 1),
                        this._events.removeListener && this.emit("removeListener", a, b)
                    }
                    return this
                }
                ,
                d.prototype.removeAllListeners = function(a) {
                    var b, c;
                    if (!this._events)
                        return this;
                    if (!this._events.removeListener)
                        return 0 === arguments.length ? this._events = {} : this._events[a] && delete this._events[a],
                        this;
                    if (0 === arguments.length) {
                        for (b in this._events)
                            "removeListener" !== b && this.removeAllListeners(b);
                        return this.removeAllListeners("removeListener"),
                        this._events = {},
                        this
                    }
                    if (c = this._events[a],
                    e(c))
                        this.removeListener(a, c);
                    else if (c)
                        for (; c.length; )
                            this.removeListener(a, c[c.length - 1]);
                    return delete this._events[a],
                    this
                }
                ,
                d.prototype.listeners = function(a) {
                    var b;
                    return b = this._events && this._events[a] ? e(this._events[a]) ? [this._events[a]] : this._events[a].slice() : []
                }
                ,
                d.prototype.listenerCount = function(a) {
                    if (this._events) {
                        var b = this._events[a];
                        if (e(b))
                            return 1;
                        if (b)
                            return b.length
                    }
                    return 0
                }
                ,
                d.listenerCount = function(a, b) {
                    return a.listenerCount(b)
                }
            }
            , {}],
            2: [function(b, c, d) {
                !function(b) {
                    var e = /^((?:[^\/;?#]+:)?)(\/\/[^\/\;?#]*)?(.*?)??(;.*?)?(\?.*?)?(#.*?)?$/
                      , f = /^([^\/;?#]*)(.*)$/
                      , g = /(?:\/|^)\.(?=\/)/g
                      , h = /(?:\/|^)\.\.\/(?!\.\.\/).*?(?=\/)/g
                      , i = {
                        buildAbsoluteURL: function(a, b, c) {
                            if (c = c || {},
                            a = a.trim(),
                            b = b.trim(),
                            !b) {
                                if (!c.alwaysNormalize)
                                    return a;
                                var d = this.parseURL(a);
                                if (!g)
                                    throw new Error("Error trying to parse base URL.");
                                return d.path = i.normalizePath(d.path),
                                i.buildURLFromParts(d)
                            }
                            var e = this.parseURL(b);
                            if (!e)
                                throw new Error("Error trying to parse relative URL.");
                            if (e.scheme)
                                return c.alwaysNormalize ? (e.path = i.normalizePath(e.path),
                                i.buildURLFromParts(e)) : b;
                            var g = this.parseURL(a);
                            if (!g)
                                throw new Error("Error trying to parse base URL.");
                            if (!g.netLoc && g.path && "/" !== g.path[0]) {
                                var h = f.exec(g.path);
                                g.netLoc = h[1],
                                g.path = h[2]
                            }
                            g.netLoc && !g.path && (g.path = "/");
                            var j = {
                                scheme: g.scheme,
                                netLoc: e.netLoc,
                                path: null,
                                params: e.params,
                                query: e.query,
                                fragment: e.fragment
                            };
                            if (!e.netLoc && (j.netLoc = g.netLoc,
                            "/" !== e.path[0]))
                                if (e.path) {
                                    var k = g.path
                                      , l = k.substring(0, k.lastIndexOf("/") + 1) + e.path;
                                    j.path = i.normalizePath(l)
                                } else
                                    j.path = g.path,
                                    e.params || (j.params = g.params,
                                    e.query || (j.query = g.query));
                            return null === j.path && (j.path = c.alwaysNormalize ? i.normalizePath(e.path) : e.path),
                            i.buildURLFromParts(j)
                        },
                        parseURL: function(a) {
                            var b = e.exec(a);
                            return b ? {
                                scheme: b[1] || "",
                                netLoc: b[2] || "",
                                path: b[3] || "",
                                params: b[4] || "",
                                query: b[5] || "",
                                fragment: b[6] || ""
                            } : null
                        },
                        normalizePath: function(a) {
                            for (a = a.split("").reverse().join("").replace(g, ""); a.length !== (a = a.replace(h, "")).length; )
                                ;
                            return a.split("").reverse().join("")
                        },
                        buildURLFromParts: function(a) {
                            return a.scheme + a.netLoc + a.path + a.params + a.query + a.fragment
                        }
                    };
                    "object" == typeof d && "object" == typeof c ? c.exports = i : "function" == typeof a && a.amd ? a([], function() {
                        return i
                    }) : "object" == typeof d ? d.URLToolkit = i : b.URLToolkit = i
                }(this)
            }
            , {}],
            3: [function(a, b, c) {
                var d = arguments[3]
                  , e = arguments[4]
                  , f = arguments[5]
                  , g = JSON.stringify;
                b.exports = function(a, b) {
                    function c(a) {
                        q[a] = !0;
                        for (var b in e[a][1]) {
                            var d = e[a][1][b];
                            q[d] || c(d)
                        }
                    }
                    for (var h, i = Object.keys(f), j = 0, k = i.length; j < k; j++) {
                        var l = i[j]
                          , m = f[l].exports;
                        if (m === a || m && m.default === a) {
                            h = l;
                            break
                        }
                    }
                    if (!h) {
                        h = Math.floor(Math.pow(16, 8) * Math.random()).toString(16);
                        for (var n = {}, j = 0, k = i.length; j < k; j++) {
                            var l = i[j];
                            n[l] = l
                        }
                        e[h] = [Function(["require", "module", "exports"], "(" + a + ")(self)"), n]
                    }
                    var o = Math.floor(Math.pow(16, 8) * Math.random()).toString(16)
                      , p = {};
                    p[h] = h,
                    e[o] = [Function(["require"], "var f = require(" + g(h) + ");(f.default ? f.default : f)(self);"), p];
                    var q = {};
                    c(o);
                    var r = "(" + d + ")({" + Object.keys(q).map(function(a) {
                        return g(a) + ":[" + e[a][0] + "," + g(e[a][1]) + "]"
                    }).join(",") + "},{},[" + g(o) + "])"
                      , s = window.URL || window.webkitURL || window.mozURL || window.msURL
                      , t = new Blob([r],{
                        type: "text/javascript"
                    });
                    if (b && b.bare)
                        return t;
                    var u = s.createObjectURL(t)
                      , v = new Worker(u);
                    return v.objectURL = u,
                    v
                }
            }
            , {}],
            4: [function(a, b, c) {
                "use strict";
                function d(a) {
                    return a && a.__esModule ? a : {
                        default: a
                    }
                }
                Object.defineProperty(c, "__esModule", {
                    value: !0
                }),
                c.hlsDefaultConfig = void 0;
                var e = a(5)
                  , f = d(e)
                  , g = a(8)
                  , h = d(g)
                  , i = a(9)
                  , j = d(i)
                  , k = a(10)
                  , l = d(k)
                  , m = a(55)
                  , n = d(m)
                  , o = a(7)
                  , p = d(o)
                  , q = a(6)
                  , r = d(q)
                  , s = a(47)
                  , t = d(s)
                  , u = a(15)
                  , v = d(u)
                  , w = a(14)
                  , x = d(w)
                  , y = a(13)
                  , z = d(y);
                c.hlsDefaultConfig = {
                    autoStartLoad: !0,
                    startPosition: -1,
                    defaultAudioCodec: void 0,
                    debug: !1,
                    capLevelOnFPSDrop: !1,
                    capLevelToPlayerSize: !1,
                    initialLiveManifestSize: 1,
                    maxBufferLength: 30,
                    maxBufferSize: 6e7,
                    maxBufferHole: .5,
                    maxSeekHole: 2,
                    lowBufferWatchdogPeriod: .5,
                    highBufferWatchdogPeriod: 3,
                    nudgeOffset: .1,
                    nudgeMaxRetry: 3,
                    maxFragLookUpTolerance: .2,
                    liveSyncDurationCount: 3,
                    liveMaxLatencyDurationCount: 1 / 0,
                    liveSyncDuration: void 0,
                    liveMaxLatencyDuration: void 0,
                    maxMaxBufferLength: 600,
                    enableWorker: !0,
                    enableSoftwareAES: !0,
                    manifestLoadingTimeOut: 1e4,
                    manifestLoadingMaxRetry: 1,
                    manifestLoadingRetryDelay: 1e3,
                    manifestLoadingMaxRetryTimeout: 64e3,
                    startLevel: void 0,
                    levelLoadingTimeOut: 1e4,
                    levelLoadingMaxRetry: 4,
                    levelLoadingRetryDelay: 1e3,
                    levelLoadingMaxRetryTimeout: 64e3,
                    fragLoadingTimeOut: 2e4,
                    fragLoadingMaxRetry: 6,
                    fragLoadingRetryDelay: 1e3,
                    fragLoadingMaxRetryTimeout: 64e3,
                    fragLoadingLoopThreshold: 3,
                    startFragPrefetch: !1,
                    fpsDroppedMonitoringPeriod: 5e3,
                    fpsDroppedMonitoringThreshold: .2,
                    appendErrorMaxRetry: 3,
                    loader: n.default,
                    fLoader: void 0,
                    pLoader: void 0,
                    xhrSetup: void 0,
                    fetchSetup: void 0,
                    abrController: f.default,
                    bufferController: h.default,
                    capLevelController: j.default,
                    fpsController: l.default,
                    audioStreamController: r.default,
                    audioTrackController: p.default,
                    subtitleStreamController: z.default,
                    subtitleTrackController: x.default,
                    timelineController: v.default,
                    cueHandler: t.default,
                    enableCEA708Captions: !0,
                    enableWebVTT: !0,
                    captionsTextTrack1Label: "English",
                    captionsTextTrack1LanguageCode: "en",
                    captionsTextTrack2Label: "Spanish",
                    captionsTextTrack2LanguageCode: "es",
                    stretchShortVideoTrack: !1,
                    forceKeyFrameOnDiscontinuity: !0,
                    abrEwmaFastLive: 3,
                    abrEwmaSlowLive: 9,
                    abrEwmaFastVoD: 3,
                    abrEwmaSlowVoD: 9,
                    abrEwmaDefaultEstimate: 5e5,
                    abrBandWidthFactor: .95,
                    abrBandWidthUpFactor: .7,
                    abrMaxWithRealBitrate: !1,
                    maxStarvationDelay: 4,
                    maxLoadingDelay: 4,
                    minAutoBitrate: 0
                }
            }
            , {
                10: 10,
                13: 13,
                14: 14,
                15: 15,
                47: 47,
                5: 5,
                55: 55,
                6: 6,
                7: 7,
                8: 8,
                9: 9
            }],
            5: [function(a, b, c) {
                "use strict";
                function d(a) {
                    return a && a.__esModule ? a : {
                        default: a
                    }
                }
                function e(a, b) {
                    if (!(a instanceof b))
                        throw new TypeError("Cannot call a class as a function")
                }
                function f(a, b) {
                    if (!a)
                        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
                    return !b || "object" != typeof b && "function" != typeof b ? a : b
                }
                function g(a, b) {
                    if ("function" != typeof b && null !== b)
                        throw new TypeError("Super expression must either be null or a function, not " + typeof b);
                    a.prototype = Object.create(b && b.prototype, {
                        constructor: {
                            value: a,
                            enumerable: !1,
                            writable: !0,
                            configurable: !0
                        }
                    }),
                    b && (Object.setPrototypeOf ? Object.setPrototypeOf(a, b) : a.__proto__ = b)
                }
                Object.defineProperty(c, "__esModule", {
                    value: !0
                });
                var h = function() {
                    function a(a, b) {
                        for (var c = 0; c < b.length; c++) {
                            var d = b[c];
                            d.enumerable = d.enumerable || !1,
                            d.configurable = !0,
                            "value"in d && (d.writable = !0),
                            Object.defineProperty(a, d.key, d)
                        }
                    }
                    return function(b, c, d) {
                        return c && a(b.prototype, c),
                        d && a(b, d),
                        b
                    }
                }()
                  , i = a(32)
                  , j = d(i)
                  , k = a(31)
                  , l = d(k)
                  , m = a(34)
                  , n = d(m)
                  , o = a(30)
                  , p = a(50)
                  , q = a(48)
                  , r = d(q)
                  , s = function(a) {
                    function b(a) {
                        e(this, b);
                        var c = f(this, (b.__proto__ || Object.getPrototypeOf(b)).call(this, a, j.default.FRAG_LOADING, j.default.FRAG_LOADED, j.default.FRAG_BUFFERED, j.default.ERROR));
                        return c.lastLoadedFragLevel = 0,
                        c._nextAutoLevel = -1,
                        c.hls = a,
                        c.onCheck = c._abandonRulesCheck.bind(c),
                        c
                    }
                    return g(b, a),
                    h(b, [{
                        key: "destroy",
                        value: function() {
                            this.clearTimer(),
                            l.default.prototype.destroy.call(this)
                        }
                    }, {
                        key: "onFragLoading",
                        value: function(a) {
                            var b = a.frag;
                            if ("main" === b.type) {
                                if (this.timer || (this.timer = setInterval(this.onCheck, 100)),
                                !this._bwEstimator) {
                                    var c = this.hls
                                      , d = a.frag.level
                                      , e = c.levels[d].details.live
                                      , f = c.config
                                      , g = void 0
                                      , h = void 0;
                                    e ? (g = f.abrEwmaFastLive,
                                    h = f.abrEwmaSlowLive) : (g = f.abrEwmaFastVoD,
                                    h = f.abrEwmaSlowVoD),
                                    this._bwEstimator = new r.default(c,h,g,f.abrEwmaDefaultEstimate)
                                }
                                this.fragCurrent = b
                            }
                        }
                    }, {
                        key: "_abandonRulesCheck",
                        value: function() {
                            var a = this.hls
                              , b = a.media
                              , c = this.fragCurrent
                              , d = c.loader
                              , e = a.minAutoLevel;
                            if (!d || d.stats && d.stats.aborted)
                                return p.logger.warn("frag loader destroy or aborted, disarm abandonRules"),
                                void this.clearTimer();
                            var f = d.stats;
                            if (b && (!b.paused && 0 !== b.playbackRate || !b.readyState) && c.autoLevel && c.level) {
                                var g = performance.now() - f.trequest
                                  , h = Math.abs(b.playbackRate);
                                if (g > 500 * c.duration / h) {
                                    var i = a.levels
                                      , k = Math.max(1, f.bw ? f.bw / 8 : 1e3 * f.loaded / g)
                                      , l = i[c.level]
                                      , m = l.realBitrate ? Math.max(l.realBitrate, l.bitrate) : l.bitrate
                                      , o = f.total ? f.total : Math.max(f.loaded, Math.round(c.duration * m / 8))
                                      , q = b.currentTime
                                      , r = (o - f.loaded) / k
                                      , s = (n.default.bufferInfo(b, q, a.config.maxBufferHole).end - q) / h;
                                    if (s < 2 * c.duration / h && r > s) {
                                        var t = void 0
                                          , u = void 0;
                                        for (u = c.level - 1; u > e; u--) {
                                            var v = i[u].realBitrate ? Math.max(i[u].realBitrate, i[u].bitrate) : i[u].bitrate;
                                            if (t = c.duration * v / (6.4 * k),
                                            t < s)
                                                break
                                        }
                                        t < r && (p.logger.warn("loading too slow, abort fragment loading and switch to level " + u + ":fragLoadedDelay[" + u + "]<fragLoadedDelay[" + (c.level - 1) + "];bufferStarvationDelay:" + t.toFixed(1) + "<" + r.toFixed(1) + ":" + s.toFixed(1)),
                                        a.nextLoadLevel = u,
                                        this._bwEstimator.sample(g, f.loaded),
                                        d.abort(),
                                        this.clearTimer(),
                                        a.trigger(j.default.FRAG_LOAD_EMERGENCY_ABORTED, {
                                            frag: c,
                                            stats: f
                                        }))
                                    }
                                }
                            }
                        }
                    }, {
                        key: "onFragLoaded",
                        value: function(a) {
                            var b = a.frag;
                            if ("main" === b.type && !isNaN(b.sn)) {
                                if (this.clearTimer(),
                                this.lastLoadedFragLevel = b.level,
                                this._nextAutoLevel = -1,
                                this.hls.config.abrMaxWithRealBitrate) {
                                    var c = this.hls.levels[b.level]
                                      , d = (c.loaded ? c.loaded.bytes : 0) + a.stats.loaded
                                      , e = (c.loaded ? c.loaded.duration : 0) + a.frag.duration;
                                    c.loaded = {
                                        bytes: d,
                                        duration: e
                                    },
                                    c.realBitrate = Math.round(8 * d / e)
                                }
                                if (a.frag.bitrateTest) {
                                    var f = a.stats;
                                    f.tparsed = f.tbuffered = f.tload,
                                    this.onFragBuffered(a)
                                }
                            }
                        }
                    }, {
                        key: "onFragBuffered",
                        value: function(a) {
                            var b = a.stats
                              , c = a.frag;
                            if (!(b.aborted === !0 || 1 !== c.loadCounter || "main" !== c.type || isNaN(c.sn) || c.bitrateTest && b.tload !== b.tbuffered)) {
                                var d = b.tparsed - b.trequest;
                                p.logger.log("latency/loading/parsing/append/kbps:" + Math.round(b.tfirst - b.trequest) + "/" + Math.round(b.tload - b.tfirst) + "/" + Math.round(b.tparsed - b.tload) + "/" + Math.round(b.tbuffered - b.tparsed) + "/" + Math.round(8 * b.loaded / (b.tbuffered - b.trequest))),
                                this._bwEstimator.sample(d, b.loaded),
                                c.bitrateTest ? this.bitrateTestDelay = d / 1e3 : this.bitrateTestDelay = 0
                            }
                        }
                    }, {
                        key: "onError",
                        value: function(a) {
                            switch (a.details) {
                            case o.ErrorDetails.FRAG_LOAD_ERROR:
                            case o.ErrorDetails.FRAG_LOAD_TIMEOUT:
                                this.clearTimer()
                            }
                        }
                    }, {
                        key: "clearTimer",
                        value: function() {
                            this.timer && (clearInterval(this.timer),
                            this.timer = null)
                        }
                    }, {
                        key: "_findBestLevel",
                        value: function(a, b, c, d, e, f, g, h, i) {
                            for (var j = e; j >= d; j--) {
                                var k = i[j]
                                  , l = k.details
                                  , m = l ? l.totalduration / l.fragments.length : b
                                  , n = !!l && l.live
                                  , o = void 0;
                                o = j <= a ? g * c : h * c;
                                var q = i[j].realBitrate ? Math.max(i[j].realBitrate, i[j].bitrate) : i[j].bitrate
                                  , r = q * m / o;
                                if (p.logger.trace("level/adjustedbw/bitrate/avgDuration/maxFetchDuration/fetchDuration: " + j + "/" + Math.round(o) + "/" + q + "/" + m + "/" + f + "/" + r),
                                o > q && (!r || n || r < f))
                                    return j
                            }
                            return -1
                        }
                    }, {
                        key: "nextAutoLevel",
                        get: function() {
                            var a = this._nextAutoLevel
                              , b = this._bwEstimator;
                            if (!(a === -1 || b && b.canEstimate()))
                                return a;
                            var c = this._nextABRAutoLevel;
                            return a !== -1 && (c = Math.min(a, c)),
                            c
                        },
                        set: function(a) {
                            this._nextAutoLevel = a
                        }
                    }, {
                        key: "_nextABRAutoLevel",
                        get: function() {
                            var a = this.hls
                              , b = a.maxAutoLevel
                              , c = a.levels
                              , d = a.config
                              , e = a.minAutoLevel
                              , f = a.media
                              , g = this.lastLoadedFragLevel
                              , h = this.fragCurrent ? this.fragCurrent.duration : 0
                              , i = f ? f.currentTime : 0
                              , j = f && 0 !== f.playbackRate ? Math.abs(f.playbackRate) : 1
                              , k = this._bwEstimator ? this._bwEstimator.getEstimate() : d.abrEwmaDefaultEstimate
                              , l = (n.default.bufferInfo(f, i, d.maxBufferHole).end - i) / j
                              , m = this._findBestLevel(g, h, k, e, b, l, d.abrBandWidthFactor, d.abrBandWidthUpFactor, c);
                            if (m >= 0)
                                return m;
                            p.logger.trace("rebuffering expected to happen, lets try to find a quality level minimizing the rebuffering");
                            var o = h ? Math.min(h, d.maxStarvationDelay) : d.maxStarvationDelay
                              , q = d.abrBandWidthFactor
                              , r = d.abrBandWidthUpFactor;
                            if (0 === l) {
                                var s = this.bitrateTestDelay;
                                if (s) {
                                    var t = h ? Math.min(h, d.maxLoadingDelay) : d.maxLoadingDelay;
                                    o = t - s,
                                    p.logger.trace("bitrate test took " + Math.round(1e3 * s) + "ms, set first fragment max fetchDuration to " + Math.round(1e3 * o) + " ms"),
                                    q = r = 1
                                }
                            }
                            return m = this._findBestLevel(g, h, k, e, b, l + o, q, r, c),
                            Math.max(m, 0)
                        }
                    }]),
                    b
                }(l.default);
                c.default = s
            }
            , {
                30: 30,
                31: 31,
                32: 32,
                34: 34,
                48: 48,
                50: 50
            }],
            6: [function(a, b, c) {
                "use strict";
                function d(a) {
                    return a && a.__esModule ? a : {
                        default: a
                    }
                }
                function e(a, b) {
                    if (!(a instanceof b))
                        throw new TypeError("Cannot call a class as a function")
                }
                function f(a, b) {
                    if (!a)
                        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
                    return !b || "object" != typeof b && "function" != typeof b ? a : b
                }
                function g(a, b) {
                    if ("function" != typeof b && null !== b)
                        throw new TypeError("Super expression must either be null or a function, not " + typeof b);
                    a.prototype = Object.create(b && b.prototype, {
                        constructor: {
                            value: a,
                            enumerable: !1,
                            writable: !0,
                            configurable: !0
                        }
                    }),
                    b && (Object.setPrototypeOf ? Object.setPrototypeOf(a, b) : a.__proto__ = b)
                }
                Object.defineProperty(c, "__esModule", {
                    value: !0
                });
                var h = function() {
                    function a(a, b) {
                        for (var c = 0; c < b.length; c++) {
                            var d = b[c];
                            d.enumerable = d.enumerable || !1,
                            d.configurable = !0,
                            "value"in d && (d.writable = !0),
                            Object.defineProperty(a, d.key, d)
                        }
                    }
                    return function(b, c, d) {
                        return c && a(b.prototype, c),
                        d && a(b, d),
                        b
                    }
                }()
                  , i = a(45)
                  , j = d(i)
                  , k = a(34)
                  , l = d(k)
                  , m = a(24)
                  , n = d(m)
                  , o = a(32)
                  , p = d(o)
                  , q = a(31)
                  , r = d(q)
                  , s = a(35)
                  , t = d(s)
                  , u = a(51)
                  , v = d(u)
                  , w = a(30)
                  , x = a(50)
                  , y = {
                    STOPPED: "STOPPED",
                    STARTING: "STARTING",
                    IDLE: "IDLE",
                    PAUSED: "PAUSED",
                    KEY_LOADING: "KEY_LOADING",
                    FRAG_LOADING: "FRAG_LOADING",
                    FRAG_LOADING_WAITING_RETRY: "FRAG_LOADING_WAITING_RETRY",
                    WAITING_TRACK: "WAITING_TRACK",
                    PARSING: "PARSING",
                    PARSED: "PARSED",
                    BUFFER_FLUSHING: "BUFFER_FLUSHING",
                    ENDED: "ENDED",
                    ERROR: "ERROR",
                    WAITING_INIT_PTS: "WAITING_INIT_PTS"
                }
                  , z = function(a) {
                    function b(a) {
                        e(this, b);
                        var c = f(this, (b.__proto__ || Object.getPrototypeOf(b)).call(this, a, p.default.MEDIA_ATTACHED, p.default.MEDIA_DETACHING, p.default.AUDIO_TRACKS_UPDATED, p.default.AUDIO_TRACK_SWITCHING, p.default.AUDIO_TRACK_LOADED, p.default.KEY_LOADED, p.default.FRAG_LOADED, p.default.FRAG_PARSING_INIT_SEGMENT, p.default.FRAG_PARSING_DATA, p.default.FRAG_PARSED, p.default.ERROR, p.default.BUFFER_CREATED, p.default.BUFFER_APPENDED, p.default.BUFFER_FLUSHED, p.default.INIT_PTS_FOUND));
                        return c.config = a.config,
                        c.audioCodecSwap = !1,
                        c.ticks = 0,
                        c._state = y.STOPPED,
                        c.ontick = c.tick.bind(c),
                        c.initPTS = [],
                        c.waitingFragment = null,
                        c
                    }
                    return g(b, a),
                    h(b, [{
                        key: "destroy",
                        value: function() {
                            this.stopLoad(),
                            this.timer && (clearInterval(this.timer),
                            this.timer = null),
                            r.default.prototype.destroy.call(this),
                            this.state = y.STOPPED
                        }
                    }, {
                        key: "onInitPtsFound",
                        value: function(a) {
                            var b = a.id
                              , c = a.frag.cc
                              , d = a.initPTS;
                            "main" === b && (this.initPTS[c] = d,
                            x.logger.log("InitPTS for cc:" + c + " found from video track:" + d),
                            this.state === y.WAITING_INIT_PTS && (x.logger.log("sending pending audio frag to demuxer"),
                            this.state = y.FRAG_LOADING,
                            this.onFragLoaded(this.waitingFragment),
                            this.waitingFragment = null))
                        }
                    }, {
                        key: "startLoad",
                        value: function(a) {
                            if (this.tracks) {
                                var b = this.lastCurrentTime;
                                this.stopLoad(),
                                this.timer || (this.timer = setInterval(this.ontick, 100)),
                                this.fragLoadError = 0,
                                b > 0 && a === -1 ? (x.logger.log("audio:override startPosition with lastCurrentTime @" + b.toFixed(3)),
                                this.state = y.IDLE) : (this.lastCurrentTime = this.startPosition ? this.startPosition : a,
                                this.state = y.STARTING),
                                this.nextLoadPosition = this.startPosition = this.lastCurrentTime,
                                this.tick()
                            } else
                                this.startPosition = a,
                                this.state = y.STOPPED
                        }
                    }, {
                        key: "stopLoad",
                        value: function() {
                            var a = this.fragCurrent;
                            a && (a.loader && a.loader.abort(),
                            this.fragCurrent = null),
                            this.fragPrevious = null,
                            this.demuxer && (this.demuxer.destroy(),
                            this.demuxer = null),
                            this.state = y.STOPPED
                        }
                    }, {
                        key: "tick",
                        value: function() {
                            this.ticks++,
                            1 === this.ticks && (this.doTick(),
                            this.ticks > 1 && setTimeout(this.tick, 1),
                            this.ticks = 0)
                        }
                    }, {
                        key: "doTick",
                        value: function() {
                            var a, b, c, d = this.hls, e = d.config;
                            switch (this.state) {
                            case y.ERROR:
                            case y.PAUSED:
                            case y.BUFFER_FLUSHING:
                                break;
                            case y.STARTING:
                                this.state = y.WAITING_TRACK,
                                this.loadedmetadata = !1;
                                break;
                            case y.IDLE:
                                var f = this.tracks;
                                if (!f)
                                    break;
                                if (!this.media && (this.startFragRequested || !e.startFragPrefetch))
                                    break;
                                a = this.loadedmetadata ? this.media.currentTime : this.nextLoadPosition;
                                var g = this.mediaBuffer ? this.mediaBuffer : this.media
                                  , h = l.default.bufferInfo(g, a, e.maxBufferHole)
                                  , i = h.len
                                  , k = h.end
                                  , m = this.fragPrevious
                                  , n = e.maxMaxBufferLength
                                  , o = this.audioSwitch
                                  , q = this.trackId;
                                if ((i < n || o) && q < f.length) {
                                    if (c = f[q].details,
                                    "undefined" == typeof c) {
                                        this.state = y.WAITING_TRACK;
                                        break
                                    }
                                    if (!o && !c.live && m && m.sn === c.endSN && (!this.media.seeking || this.media.duration - k < m.duration / 2)) {
                                        this.hls.trigger(p.default.BUFFER_EOS, {
                                            type: "audio"
                                        }),
                                        this.state = y.ENDED;
                                        break
                                    }
                                    var r = c.fragments
                                      , s = r.length
                                      , t = r[0].start
                                      , u = r[s - 1].start + r[s - 1].duration
                                      , v = void 0;
                                    if (o)
                                        if (c.live && !c.PTSKnown)
                                            x.logger.log("switching audiotrack, live stream, unknown PTS,load first fragment"),
                                            k = 0;
                                        else if (k = a,
                                        c.PTSKnown && a < t) {
                                            if (!(h.end > t || h.nextStart))
                                                return;
                                            x.logger.log("alt audio track ahead of main track, seek to start of alt audio track"),
                                            this.media.currentTime = t + .05
                                        }
                                    if (c.initSegment && !c.initSegment.data)
                                        v = c.initSegment;
                                    else if (k <= t) {
                                        if (v = r[0],
                                        c.live && v.loadIdx && v.loadIdx === this.fragLoadIdx) {
                                            var z = h.nextStart ? h.nextStart : t;
                                            return x.logger.log("no alt audio available @currentTime:" + this.media.currentTime + ", seeking @" + (z + .05)),
                                            void (this.media.currentTime = z + .05)
                                        }
                                    } else {
                                        var A = void 0
                                          , B = e.maxFragLookUpTolerance
                                          , C = m ? r[m.sn - r[0].sn + 1] : void 0
                                          , D = function(a) {
                                            var b = Math.min(B, a.duration);
                                            return a.start + a.duration - b <= k ? 1 : a.start - b > k && a.start ? -1 : 0
                                        };
                                        k < u ? (k > u - B && (B = 0),
                                        A = C && !D(C) ? C : j.default.search(r, D)) : A = r[s - 1],
                                        A && (v = A,
                                        t = A.start,
                                        m && v.level === m.level && v.sn === m.sn && (v.sn < c.endSN ? (v = r[v.sn + 1 - c.startSN],
                                        x.logger.log("SN just loaded, load next one: " + v.sn)) : v = null))
                                    }
                                    if (v)
                                        if (v.decryptdata && null != v.decryptdata.uri && null == v.decryptdata.key)
                                            x.logger.log("Loading key for " + v.sn + " of [" + c.startSN + " ," + c.endSN + "],track " + q),
                                            this.state = y.KEY_LOADING,
                                            d.trigger(p.default.KEY_LOADING, {
                                                frag: v
                                            });
                                        else {
                                            if (x.logger.log("Loading " + v.sn + " of [" + c.startSN + " ," + c.endSN + "],track " + q + ", currentTime:" + a + ",bufferEnd:" + k.toFixed(3)),
                                            void 0 !== this.fragLoadIdx ? this.fragLoadIdx++ : this.fragLoadIdx = 0,
                                            v.loadCounter) {
                                                v.loadCounter++;
                                                var E = e.fragLoadingLoopThreshold;
                                                if (v.loadCounter > E && Math.abs(this.fragLoadIdx - v.loadIdx) < E)
                                                    return void d.trigger(p.default.ERROR, {
                                                        type: w.ErrorTypes.MEDIA_ERROR,
                                                        details: w.ErrorDetails.FRAG_LOOP_LOADING_ERROR,
                                                        fatal: !1,
                                                        frag: v
                                                    })
                                            } else
                                                v.loadCounter = 1;
                                            v.loadIdx = this.fragLoadIdx,
                                            this.fragCurrent = v,
                                            this.startFragRequested = !0,
                                            isNaN(v.sn) || (this.nextLoadPosition = v.start + v.duration),
                                            d.trigger(p.default.FRAG_LOADING, {
                                                frag: v
                                            }),
                                            this.state = y.FRAG_LOADING
                                        }
                                }
                                break;
                            case y.WAITING_TRACK:
                                b = this.tracks[this.trackId],
                                b && b.details && (this.state = y.IDLE);
                                break;
                            case y.FRAG_LOADING_WAITING_RETRY:
                                var F = performance.now()
                                  , G = this.retryDate;
                                g = this.media;
                                var H = g && g.seeking;
                                (!G || F >= G || H) && (x.logger.log("audioStreamController: retryDate reached, switch back to IDLE state"),
                                this.state = y.IDLE);
                                break;
                            case y.WAITING_INIT_PTS:
                            case y.STOPPED:
                            case y.FRAG_LOADING:
                            case y.PARSING:
                            case y.PARSED:
                            case y.ENDED:
                            }
                        }
                    }, {
                        key: "onMediaAttached",
                        value: function(a) {
                            var b = this.media = this.mediaBuffer = a.media;
                            this.onvseeking = this.onMediaSeeking.bind(this),
                            this.onvended = this.onMediaEnded.bind(this),
                            b.addEventListener("seeking", this.onvseeking),
                            b.addEventListener("ended", this.onvended);
                            var c = this.config;
                            this.tracks && c.autoStartLoad && this.startLoad(c.startPosition)
                        }
                    }, {
                        key: "onMediaDetaching",
                        value: function() {
                            var a = this.media;
                            a && a.ended && (x.logger.log("MSE detaching and video ended, reset startPosition"),
                            this.startPosition = this.lastCurrentTime = 0);
                            var b = this.tracks;
                            b && b.forEach(function(a) {
                                a.details && a.details.fragments.forEach(function(a) {
                                    a.loadCounter = void 0
                                })
                            }),
                            a && (a.removeEventListener("seeking", this.onvseeking),
                            a.removeEventListener("ended", this.onvended),
                            this.onvseeking = this.onvseeked = this.onvended = null),
                            this.media = this.mediaBuffer = null,
                            this.loadedmetadata = !1,
                            this.stopLoad()
                        }
                    }, {
                        key: "onMediaSeeking",
                        value: function() {
                            this.state === y.ENDED && (this.state = y.IDLE),
                            this.media && (this.lastCurrentTime = this.media.currentTime),
                            void 0 !== this.fragLoadIdx && (this.fragLoadIdx += 2 * this.config.fragLoadingLoopThreshold),
                            this.tick()
                        }
                    }, {
                        key: "onMediaEnded",
                        value: function() {
                            this.startPosition = this.lastCurrentTime = 0
                        }
                    }, {
                        key: "onAudioTracksUpdated",
                        value: function(a) {
                            x.logger.log("audio tracks updated"),
                            this.tracks = a.audioTracks
                        }
                    }, {
                        key: "onAudioTrackSwitching",
                        value: function(a) {
                            var b = !!a.url;
                            this.trackId = a.id,
                            this.state = y.IDLE,
                            this.fragCurrent = null,
                            this.state = y.PAUSED,
                            this.waitingFragment = null,
                            b ? this.timer || (this.timer = setInterval(this.ontick, 100)) : this.demuxer && (this.demuxer.destroy(),
                            this.demuxer = null),
                            b && (this.audioSwitch = !0,
                            this.state = y.IDLE,
                            void 0 !== this.fragLoadIdx && (this.fragLoadIdx += 2 * this.config.fragLoadingLoopThreshold)),
                            this.tick()
                        }
                    }, {
                        key: "onAudioTrackLoaded",
                        value: function(a) {
                            var b = a.details
                              , c = a.id
                              , d = this.tracks[c]
                              , e = b.totalduration
                              , f = 0;
                            if (x.logger.log("track " + c + " loaded [" + b.startSN + "," + b.endSN + "],duration:" + e),
                            b.live) {
                                var g = d.details;
                                g && b.fragments.length > 0 ? (t.default.mergeDetails(g, b),
                                f = b.fragments[0].start,
                                b.PTSKnown ? x.logger.log("live audio playlist sliding:" + f.toFixed(3)) : x.logger.log("live audio playlist - outdated PTS, unknown sliding")) : (b.PTSKnown = !1,
                                x.logger.log("live audio playlist - first load, unknown sliding"))
                            } else
                                b.PTSKnown = !1;
                            if (d.details = b,
                            !this.startFragRequested) {
                                if (this.startPosition === -1) {
                                    var h = b.startTimeOffset;
                                    isNaN(h) ? this.startPosition = 0 : (x.logger.log("start time offset found in playlist, adjust startPosition to " + h),
                                    this.startPosition = h)
                                }
                                this.nextLoadPosition = this.startPosition
                            }
                            this.state === y.WAITING_TRACK && (this.state = y.IDLE),
                            this.tick()
                        }
                    }, {
                        key: "onKeyLoaded",
                        value: function() {
                            this.state === y.KEY_LOADING && (this.state = y.IDLE,
                            this.tick())
                        }
                    }, {
                        key: "onFragLoaded",
                        value: function(a) {
                            var b = this.fragCurrent
                              , c = a.frag;
                            if (this.state === y.FRAG_LOADING && b && "audio" === c.type && c.level === b.level && c.sn === b.sn) {
                                var d = this.tracks[this.trackId]
                                  , e = d.details
                                  , f = e.totalduration
                                  , g = b.level
                                  , h = b.sn
                                  , i = b.cc
                                  , j = this.config.defaultAudioCodec || d.audioCodec || "mp4a.40.2"
                                  , k = this.stats = a.stats;
                                if ("initSegment" === h)
                                    this.state = y.IDLE,
                                    k.tparsed = k.tbuffered = performance.now(),
                                    e.initSegment.data = a.payload,
                                    this.hls.trigger(p.default.FRAG_BUFFERED, {
                                        stats: k,
                                        frag: b,
                                        id: "audio"
                                    }),
                                    this.tick();
                                else {
                                    this.state = y.PARSING,
                                    this.appended = !1,
                                    this.demuxer || (this.demuxer = new n.default(this.hls,"audio"));
                                    var l = this.initPTS[i]
                                      , m = e.initSegment ? e.initSegment.data : [];
                                    if (m || void 0 !== l) {
                                        this.pendingBuffering = !0,
                                        x.logger.log("Demuxing " + h + " of [" + e.startSN + " ," + e.endSN + "],track " + g);
                                        var o = !1;
                                        this.demuxer.push(a.payload, m, j, null, b, f, o, l)
                                    } else
                                        x.logger.log("unknown video PTS for continuity counter " + i + ", waiting for video PTS before demuxing audio frag " + h + " of [" + e.startSN + " ," + e.endSN + "],track " + g),
                                        this.waitingFragment = a,
                                        this.state = y.WAITING_INIT_PTS
                                }
                            }
                            this.fragLoadError = 0
                        }
                    }, {
                        key: "onFragParsingInitSegment",
                        value: function(a) {
                            var b = this.fragCurrent
                              , c = a.frag;
                            if (b && "audio" === a.id && c.sn === b.sn && c.level === b.level && this.state === y.PARSING) {
                                var d = a.tracks
                                  , e = void 0;
                                if (d.video && delete d.video,
                                e = d.audio) {
                                    e.levelCodec = "mp4a.40.2",
                                    e.id = a.id,
                                    this.hls.trigger(p.default.BUFFER_CODECS, d),
                                    x.logger.log("audio track:audio,container:" + e.container + ",codecs[level/parsed]=[" + e.levelCodec + "/" + e.codec + "]");
                                    var f = e.initSegment;
                                    if (f) {
                                        var g = {
                                            type: "audio",
                                            data: f,
                                            parent: "audio",
                                            content: "initSegment"
                                        };
                                        this.audioSwitch ? this.pendingData = [g] : (this.appended = !0,
                                        this.pendingBuffering = !0,
                                        this.hls.trigger(p.default.BUFFER_APPENDING, g))
                                    }
                                    this.tick()
                                }
                            }
                        }
                    }, {
                        key: "onFragParsingData",
                        value: function(a) {
                            var b = this
                              , c = this.fragCurrent
                              , d = a.frag;
                            if (c && "audio" === a.id && "audio" === a.type && d.sn === c.sn && d.level === c.level && this.state === y.PARSING) {
                                var e = this.trackId
                                  , f = this.tracks[e]
                                  , g = this.hls;
                                isNaN(a.endPTS) && (a.endPTS = a.startPTS + c.duration,
                                a.endDTS = a.startDTS + c.duration),
                                x.logger.log("parsed " + a.type + ",PTS:[" + a.startPTS.toFixed(3) + "," + a.endPTS.toFixed(3) + "],DTS:[" + a.startDTS.toFixed(3) + "/" + a.endDTS.toFixed(3) + "],nb:" + a.nb),
                                t.default.updateFragPTSDTS(f.details, c.sn, a.startPTS, a.endPTS);
                                var h = this.audioSwitch
                                  , i = this.media
                                  , j = !1;
                                if (h && i)
                                    if (i.readyState) {
                                        var k = i.currentTime;
                                        x.logger.log("switching audio track : currentTime:" + k),
                                        k >= a.startPTS && (x.logger.log("switching audio track : flushing all audio"),
                                        this.state = y.BUFFER_FLUSHING,
                                        g.trigger(p.default.BUFFER_FLUSHING, {
                                            startOffset: 0,
                                            endOffset: Number.POSITIVE_INFINITY,
                                            type: "audio"
                                        }),
                                        j = !0,
                                        this.audioSwitch = !1,
                                        g.trigger(p.default.AUDIO_TRACK_SWITCHED, {
                                            id: e
                                        }))
                                    } else
                                        this.audioSwitch = !1,
                                        g.trigger(p.default.AUDIO_TRACK_SWITCHED, {
                                            id: e
                                        });
                                var l = this.pendingData;
                                this.audioSwitch || ([a.data1, a.data2].forEach(function(b) {
                                    b && b.length && l.push({
                                        type: a.type,
                                        data: b,
                                        parent: "audio",
                                        content: "data"
                                    })
                                }),
                                !j && l.length && (l.forEach(function(a) {
                                    b.state === y.PARSING && (b.pendingBuffering = !0,
                                    b.hls.trigger(p.default.BUFFER_APPENDING, a))
                                }),
                                this.pendingData = [],
                                this.appended = !0)),
                                this.tick()
                            }
                        }
                    }, {
                        key: "onFragParsed",
                        value: function(a) {
                            var b = this.fragCurrent
                              , c = a.frag;
                            b && "audio" === a.id && c.sn === b.sn && c.level === b.level && this.state === y.PARSING && (this.stats.tparsed = performance.now(),
                            this.state = y.PARSED,
                            this._checkAppendedParsed())
                        }
                    }, {
                        key: "onBufferCreated",
                        value: function(a) {
                            var b = a.tracks.audio;
                            b && (this.mediaBuffer = b.buffer,
                            this.loadedmetadata = !0)
                        }
                    }, {
                        key: "onBufferAppended",
                        value: function(a) {
                            if ("audio" === a.parent) {
                                var b = this.state;
                                b !== y.PARSING && b !== y.PARSED || (this.pendingBuffering = a.pending > 0,
                                this._checkAppendedParsed())
                            }
                        }
                    }, {
                        key: "_checkAppendedParsed",
                        value: function() {
                            if (!(this.state !== y.PARSED || this.appended && this.pendingBuffering)) {
                                var a = this.fragCurrent
                                  , b = this.stats
                                  , c = this.hls;
                                if (a) {
                                    this.fragPrevious = a,
                                    b.tbuffered = performance.now(),
                                    c.trigger(p.default.FRAG_BUFFERED, {
                                        stats: b,
                                        frag: a,
                                        id: "audio"
                                    });
                                    var d = this.mediaBuffer ? this.mediaBuffer : this.media;
                                    x.logger.log("audio buffered : " + v.default.toString(d.buffered)),
                                    this.audioSwitch && this.appended && (this.audioSwitch = !1,
                                    c.trigger(p.default.AUDIO_TRACK_SWITCHED, {
                                        id: this.trackId
                                    })),
                                    this.state = y.IDLE
                                }
                                this.tick()
                            }
                        }
                    }, {
                        key: "onError",
                        value: function(a) {
                            var b = a.frag;
                            if (!b || "audio" === b.type)
                                switch (a.details) {
                                case w.ErrorDetails.FRAG_LOAD_ERROR:
                                case w.ErrorDetails.FRAG_LOAD_TIMEOUT:
                                    if (!a.fatal) {
                                        var c = this.fragLoadError;
                                        c ? c++ : c = 1;
                                        var d = this.config;
                                        if (c <= d.fragLoadingMaxRetry) {
                                            this.fragLoadError = c,
                                            b.loadCounter = 0;
                                            var e = Math.min(Math.pow(2, c - 1) * d.fragLoadingRetryDelay, d.fragLoadingMaxRetryTimeout);
                                            x.logger.warn("audioStreamController: frag loading failed, retry in " + e + " ms"),
                                            this.retryDate = performance.now() + e,
                                            this.state = y.FRAG_LOADING_WAITING_RETRY
                                        } else
                                            x.logger.error("audioStreamController: " + a.details + " reaches max retry, redispatch as fatal ..."),
                                            a.fatal = !0,
                                            this.state = y.ERROR
                                    }
                                    break;
                                case w.ErrorDetails.FRAG_LOOP_LOADING_ERROR:
                                case w.ErrorDetails.AUDIO_TRACK_LOAD_ERROR:
                                case w.ErrorDetails.AUDIO_TRACK_LOAD_TIMEOUT:
                                case w.ErrorDetails.KEY_LOAD_ERROR:
                                case w.ErrorDetails.KEY_LOAD_TIMEOUT:
                                    this.state !== y.ERROR && (this.state = a.fatal ? y.ERROR : y.IDLE,
                                    x.logger.warn("audioStreamController: " + a.details + " while loading frag,switch to " + this.state + " state ..."));
                                    break;
                                case w.ErrorDetails.BUFFER_FULL_ERROR:
                                    if ("audio" === a.parent && (this.state === y.PARSING || this.state === y.PARSED)) {
                                        var f = this.mediaBuffer
                                          , g = this.media.currentTime
                                          , h = f && l.default.isBuffered(f, g) && l.default.isBuffered(f, g + .5);
                                        if (h) {
                                            var i = this.config;
                                            i.maxMaxBufferLength >= i.maxBufferLength && (i.maxMaxBufferLength /= 2,
                                            x.logger.warn("audio:reduce max buffer length to " + i.maxMaxBufferLength + "s"),
                                            this.fragLoadIdx += 2 * i.fragLoadingLoopThreshold),
                                            this.state = y.IDLE
                                        } else
                                            x.logger.warn("buffer full error also media.currentTime is not buffered, flush audio buffer"),
                                            this.fragCurrent = null,
                                            this.state = y.BUFFER_FLUSHING,
                                            this.hls.trigger(p.default.BUFFER_FLUSHING, {
                                                startOffset: 0,
                                                endOffset: Number.POSITIVE_INFINITY,
                                                type: "audio"
                                            })
                                    }
                                }
                        }
                    }, {
                        key: "onBufferFlushed",
                        value: function() {
                            var a = this
                              , b = this.pendingData;
                            b && b.length ? (x.logger.log("appending pending audio data on Buffer Flushed"),
                            b.forEach(function(b) {
                                a.hls.trigger(p.default.BUFFER_APPENDING, b)
                            }),
                            this.appended = !0,
                            this.pendingData = [],
                            this.state = y.PARSED) : (this.state = y.IDLE,
                            this.fragPrevious = null,
                            this.tick())
                        }
                    }, {
                        key: "state",
                        set: function(a) {
                            if (this.state !== a) {
                                var b = this.state;
                                this._state = a,
                                x.logger.log("audio stream:" + b + "->" + a)
                            }
                        },
                        get: function() {
                            return this._state
                        }
                    }]),
                    b
                }(r.default);
                c.default = z
            }
            , {
                24: 24,
                30: 30,
                31: 31,
                32: 32,
                34: 34,
                35: 35,
                45: 45,
                50: 50,
                51: 51
            }],
            7: [function(a, b, c) {
                "use strict";
                function d(a) {
                    return a && a.__esModule ? a : {
                        default: a
                    }
                }
                function e(a, b) {
                    if (!(a instanceof b))
                        throw new TypeError("Cannot call a class as a function")
                }
                function f(a, b) {
                    if (!a)
                        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
                    return !b || "object" != typeof b && "function" != typeof b ? a : b
                }
                function g(a, b) {
                    if ("function" != typeof b && null !== b)
                        throw new TypeError("Super expression must either be null or a function, not " + typeof b);
                    a.prototype = Object.create(b && b.prototype, {
                        constructor: {
                            value: a,
                            enumerable: !1,
                            writable: !0,
                            configurable: !0
                        }
                    }),
                    b && (Object.setPrototypeOf ? Object.setPrototypeOf(a, b) : a.__proto__ = b)
                }
                Object.defineProperty(c, "__esModule", {
                    value: !0
                });
                var h = function() {
                    function a(a, b) {
                        for (var c = 0; c < b.length; c++) {
                            var d = b[c];
                            d.enumerable = d.enumerable || !1,
                            d.configurable = !0,
                            "value"in d && (d.writable = !0),
                            Object.defineProperty(a, d.key, d)
                        }
                    }
                    return function(b, c, d) {
                        return c && a(b.prototype, c),
                        d && a(b, d),
                        b
                    }
                }()
                  , i = a(32)
                  , j = d(i)
                  , k = a(31)
                  , l = d(k)
                  , m = a(50)
                  , n = function(a) {
                    function b(a) {
                        e(this, b);
                        var c = f(this, (b.__proto__ || Object.getPrototypeOf(b)).call(this, a, j.default.MANIFEST_LOADING, j.default.MANIFEST_LOADED, j.default.AUDIO_TRACK_LOADED));
                        return c.ticks = 0,
                        c.ontick = c.tick.bind(c),
                        c
                    }
                    return g(b, a),
                    h(b, [{
                        key: "destroy",
                        value: function() {
                            l.default.prototype.destroy.call(this)
                        }
                    }, {
                        key: "tick",
                        value: function() {
                            this.ticks++,
                            1 === this.ticks && (this.doTick(),
                            this.ticks > 1 && setTimeout(this.tick, 1),
                            this.ticks = 0)
                        }
                    }, {
                        key: "doTick",
                        value: function() {
                            this.updateTrack(this.trackId)
                        }
                    }, {
                        key: "onManifestLoading",
                        value: function() {
                            this.tracks = [],
                            this.trackId = -1
                        }
                    }, {
                        key: "onManifestLoaded",
                        value: function(a) {
                            var b = this
                              , c = a.audioTracks || []
                              , d = !1;
                            this.tracks = c,
                            this.hls.trigger(j.default.AUDIO_TRACKS_UPDATED, {
                                audioTracks: c
                            });
                            var e = 0;
                            c.forEach(function(a) {
                                return a.default ? (b.audioTrack = e,
                                void (d = !0)) : void e++
                            }),
                            d === !1 && c.length && (m.logger.log("no default audio track defined, use first audio track as default"),
                            this.audioTrack = 0)
                        }
                    }, {
                        key: "onAudioTrackLoaded",
                        value: function(a) {
                            a.id < this.tracks.length && (m.logger.log("audioTrack " + a.id + " loaded"),
                            this.tracks[a.id].details = a.details,
                            a.details.live && !this.timer && (this.timer = setInterval(this.ontick, 1e3 * a.details.targetduration)),
                            !a.details.live && this.timer && (clearInterval(this.timer),
                            this.timer = null))
                        }
                    }, {
                        key: "setAudioTrackInternal",
                        value: function(a) {
                            if (a >= 0 && a < this.tracks.length) {
                                this.timer && (clearInterval(this.timer),
                                this.timer = null),
                                this.trackId = a,
                                m.logger.log("switching to audioTrack " + a);
                                var b = this.tracks[a]
                                  , c = this.hls
                                  , d = b.type
                                  , e = b.url
                                  , f = {
                                    id: a,
                                    type: d,
                                    url: e
                                };
                                c.trigger(j.default.AUDIO_TRACK_SWITCH, f),
                                c.trigger(j.default.AUDIO_TRACK_SWITCHING, f);
                                var g = b.details;
                                !e || void 0 !== g && g.live !== !0 || (m.logger.log("(re)loading playlist for audioTrack " + a),
                                c.trigger(j.default.AUDIO_TRACK_LOADING, {
                                    url: e,
                                    id: a
                                }))
                            }
                        }
                    }, {
                        key: "updateTrack",
                        value: function(a) {
                            if (a >= 0 && a < this.tracks.length) {
                                this.timer && (clearInterval(this.timer),
                                this.timer = null),
                                this.trackId = a,
                                m.logger.log("updating audioTrack " + a);
                                var b = this.tracks[a]
                                  , c = b.url
                                  , d = b.details;
                                !c || void 0 !== d && d.live !== !0 || (m.logger.log("(re)loading playlist for audioTrack " + a),
                                this.hls.trigger(j.default.AUDIO_TRACK_LOADING, {
                                    url: c,
                                    id: a
                                }))
                            }
                        }
                    }, {
                        key: "audioTracks",
                        get: function() {
                            return this.tracks
                        }
                    }, {
                        key: "audioTrack",
                        get: function() {
                            return this.trackId
                        },
                        set: function(a) {
                            this.trackId === a && void 0 !== this.tracks[a].details || this.setAudioTrackInternal(a)
                        }
                    }]),
                    b
                }(l.default);
                c.default = n
            }
            , {
                31: 31,
                32: 32,
                50: 50
            }],
            8: [function(a, b, c) {
                "use strict";
                function d(a) {
                    return a && a.__esModule ? a : {
                        default: a
                    }
                }
                function e(a, b) {
                    if (!(a instanceof b))
                        throw new TypeError("Cannot call a class as a function")
                }
                function f(a, b) {
                    if (!a)
                        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
                    return !b || "object" != typeof b && "function" != typeof b ? a : b
                }
                function g(a, b) {
                    if ("function" != typeof b && null !== b)
                        throw new TypeError("Super expression must either be null or a function, not " + typeof b);
                    a.prototype = Object.create(b && b.prototype, {
                        constructor: {
                            value: a,
                            enumerable: !1,
                            writable: !0,
                            configurable: !0
                        }
                    }),
                    b && (Object.setPrototypeOf ? Object.setPrototypeOf(a, b) : a.__proto__ = b)
                }
                Object.defineProperty(c, "__esModule", {
                    value: !0
                });
                var h = function() {
                    function a(a, b) {
                        for (var c = 0; c < b.length; c++) {
                            var d = b[c];
                            d.enumerable = d.enumerable || !1,
                            d.configurable = !0,
                            "value"in d && (d.writable = !0),
                            Object.defineProperty(a, d.key, d)
                        }
                    }
                    return function(b, c, d) {
                        return c && a(b.prototype, c),
                        d && a(b, d),
                        b
                    }
                }()
                  , i = a(32)
                  , j = d(i)
                  , k = a(31)
                  , l = d(k)
                  , m = a(50)
                  , n = a(30)
                  , o = function(a) {
                    function b(a) {
                        e(this, b);
                        var c = f(this, (b.__proto__ || Object.getPrototypeOf(b)).call(this, a, j.default.MEDIA_ATTACHING, j.default.MEDIA_DETACHING, j.default.MANIFEST_PARSED, j.default.BUFFER_RESET, j.default.BUFFER_APPENDING, j.default.BUFFER_CODECS, j.default.BUFFER_EOS, j.default.BUFFER_FLUSHING, j.default.LEVEL_PTS_UPDATED, j.default.LEVEL_UPDATED));
                        return c._msDuration = null,
                        c._levelDuration = null,
                        c.onsbue = c.onSBUpdateEnd.bind(c),
                        c.onsbe = c.onSBUpdateError.bind(c),
                        c.pendingTracks = {},
                        c.tracks = {},
                        c
                    }
                    return g(b, a),
                    h(b, [{
                        key: "destroy",
                        value: function() {
                            l.default.prototype.destroy.call(this)
                        }
                    }, {
                        key: "onLevelPtsUpdated",
                        value: function(a) {
                            var b = a.type
                              , c = this.tracks.audio;
                            if ("audio" === b && c && "audio/mpeg" === c.container) {
                                var d = this.sourceBuffer.audio
                                  , e = Math.abs(d.timestampOffset - a.start);
                                if (e > .1) {
                                    var f = d.updating;
                                    try {
                                        d.abort()
                                    } catch (a) {
                                        f = !0,
                                        m.logger.warn("can not abort audio buffer: " + a)
                                    }
                                    f ? this.audioTimestampOffset = a.start : (m.logger.warn("change mpeg audio timestamp offset from " + d.timestampOffset + " to " + a.start),
                                    d.timestampOffset = a.start)
                                }
                            }
                        }
                    }, {
                        key: "onManifestParsed",
                        value: function(a) {
                            var b = a.audio
                              , c = a.video
                              , d = 0;
                            a.altAudio && (b || c) && (d = (b ? 1 : 0) + (c ? 1 : 0),
                            m.logger.log(d + " sourceBuffer(s) expected")),
                            this.sourceBufferNb = d
                        }
                    }, {
                        key: "onMediaAttaching",
                        value: function(a) {
                            var b = this.media = a.media;
                            if (b) {
                                var c = this.mediaSource = new MediaSource;
                                this.onmso = this.onMediaSourceOpen.bind(this),
                                this.onmse = this.onMediaSourceEnded.bind(this),
                                this.onmsc = this.onMediaSourceClose.bind(this),
                                c.addEventListener("sourceopen", this.onmso),
                                c.addEventListener("sourceended", this.onmse),
                                c.addEventListener("sourceclose", this.onmsc),
                                b.src = URL.createObjectURL(c)
                            }
                        }
                    }, {
                        key: "onMediaDetaching",
                        value: function() {
                            m.logger.log("media source detaching");
                            var a = this.mediaSource;
                            if (a) {
                                if ("open" === a.readyState)
                                    try {
                                        a.endOfStream()
                                    } catch (a) {
                                        m.logger.warn("onMediaDetaching:" + a.message + " while calling endOfStream")
                                    }
                                a.removeEventListener("sourceopen", this.onmso),
                                a.removeEventListener("sourceended", this.onmse),
                                a.removeEventListener("sourceclose", this.onmsc),
                                this.media && (URL.revokeObjectURL(this.media.src),
                                this.media.removeAttribute("src"),
                                this.media.load()),
                                this.mediaSource = null,
                                this.media = null,
                                this.pendingTracks = {},
                                this.tracks = {},
                                this.sourceBuffer = {},
                                this.flushRange = [],
                                this.segments = [],
                                this.appended = 0
                            }
                            this.onmso = this.onmse = this.onmsc = null,
                            this.hls.trigger(j.default.MEDIA_DETACHED)
                        }
                    }, {
                        key: "onMediaSourceOpen",
                        value: function() {
                            m.logger.log("media source opened"),
                            this.hls.trigger(j.default.MEDIA_ATTACHED, {
                                media: this.media
                            });
                            var a = this.mediaSource;
                            a && a.removeEventListener("sourceopen", this.onmso),
                            this.checkPendingTracks()
                        }
                    }, {
                        key: "checkPendingTracks",
                        value: function() {
                            var a = this.pendingTracks
                              , b = Object.keys(a).length;
                            b && (this.sourceBufferNb <= b || 0 === this.sourceBufferNb) && (this.createSourceBuffers(a),
                            this.pendingTracks = {},
                            this.doAppending())
                        }
                    }, {
                        key: "onMediaSourceClose",
                        value: function() {
                            m.logger.log("media source closed")
                        }
                    }, {
                        key: "onMediaSourceEnded",
                        value: function() {
                            m.logger.log("media source ended")
                        }
                    }, {
                        key: "onSBUpdateEnd",
                        value: function() {
                            if (this.audioTimestampOffset) {
                                var a = this.sourceBuffer.audio;
                                m.logger.warn("change mpeg audio timestamp offset from " + a.timestampOffset + " to " + this.audioTimestampOffset),
                                a.timestampOffset = this.audioTimestampOffset,
                                delete this.audioTimestampOffset
                            }
                            this._needsFlush && this.doFlush(),
                            this._needsEos && this.checkEos(),
                            this.appending = !1;
                            var b = this.parent
                              , c = this.segments.reduce(function(a, c) {
                                return c.parent === b ? a + 1 : a
                            }, 0);
                            this.hls.trigger(j.default.BUFFER_APPENDED, {
                                parent: b,
                                pending: c
                            }),
                            this._needsFlush || this.doAppending(),
                            this.updateMediaElementDuration()
                        }
                    }, {
                        key: "onSBUpdateError",
                        value: function(a) {
                            m.logger.error("sourceBuffer error:", a),
                            this.hls.trigger(j.default.ERROR, {
                                type: n.ErrorTypes.MEDIA_ERROR,
                                details: n.ErrorDetails.BUFFER_APPENDING_ERROR,
                                fatal: !1
                            })
                        }
                    }, {
                        key: "onBufferReset",
                        value: function() {
                            var a = this.sourceBuffer;
                            for (var b in a) {
                                var c = a[b];
                                try {
                                    this.mediaSource.removeSourceBuffer(c),
                                    c.removeEventListener("updateend", this.onsbue),
                                    c.removeEventListener("error", this.onsbe)
                                } catch (a) {}
                            }
                            this.sourceBuffer = {},
                            this.flushRange = [],
                            this.segments = [],
                            this.appended = 0
                        }
                    }, {
                        key: "onBufferCodecs",
                        value: function(a) {
                            if (0 === Object.keys(this.sourceBuffer).length) {
                                for (var b in a)
                                    this.pendingTracks[b] = a[b];
                                var c = this.mediaSource;
                                c && "open" === c.readyState && this.checkPendingTracks()
                            }
                        }
                    }, {
                        key: "createSourceBuffers",
                        value: function(a) {
                            var b = this.sourceBuffer
                              , c = this.mediaSource;
                            for (var d in a)
                                if (!b[d]) {
                                    var e = a[d]
                                      , f = e.levelCodec || e.codec
                                      , g = e.container + ";codecs=" + f;
                                    m.logger.log("creating sourceBuffer(" + g + ")");
                                    try {
                                        var h = b[d] = c.addSourceBuffer(g);
                                        h.addEventListener("updateend", this.onsbue),
                                        h.addEventListener("error", this.onsbe),
                                        this.tracks[d] = {
                                            codec: f,
                                            container: e.container
                                        },
                                        e.buffer = h
                                    } catch (a) {
                                        m.logger.error("error while trying to add sourceBuffer:" + a.message),
                                        this.hls.trigger(j.default.ERROR, {
                                            type: n.ErrorTypes.MEDIA_ERROR,
                                            details: n.ErrorDetails.BUFFER_ADD_CODEC_ERROR,
                                            fatal: !1,
                                            err: a,
                                            mimeType: g
                                        })
                                    }
                                }
                            this.hls.trigger(j.default.BUFFER_CREATED, {
                                tracks: a
                            })
                        }
                    }, {
                        key: "onBufferAppending",
                        value: function(a) {
                            this._needsFlush || (this.segments ? this.segments.push(a) : this.segments = [a],
                            this.doAppending())
                        }
                    }, {
                        key: "onBufferAppendFail",
                        value: function(a) {
                            m.logger.error("sourceBuffer error:", a.event),
                            this.hls.trigger(j.default.ERROR, {
                                type: n.ErrorTypes.MEDIA_ERROR,
                                details: n.ErrorDetails.BUFFER_APPENDING_ERROR,
                                fatal: !1
                            })
                        }
                    }, {
                        key: "onBufferEos",
                        value: function(a) {
                            var b = this.sourceBuffer
                              , c = a.type;
                            for (var d in b)
                                c && d !== c || b[d].ended || (b[d].ended = !0,
                                m.logger.log(d + " sourceBuffer now EOS"));
                            this.checkEos()
                        }
                    }, {
                        key: "checkEos",
                        value: function() {
                            var a = this.sourceBuffer
                              , b = this.mediaSource;
                            if (!b || "open" !== b.readyState)
                                return void (this._needsEos = !1);
                            for (var c in a) {
                                var d = a[c];
                                if (!d.ended)
                                    return;
                                if (d.updating)
                                    return void (this._needsEos = !0)
                            }
                            m.logger.log("all media data available, signal endOfStream() to MediaSource and stop loading fragment");
                            try {
                                b.endOfStream()
                            } catch (a) {
                                m.logger.warn("exception while calling mediaSource.endOfStream()")
                            }
                            this._needsEos = !1
                        }
                    }, {
                        key: "onBufferFlushing",
                        value: function(a) {
                            this.flushRange.push({
                                start: a.startOffset,
                                end: a.endOffset,
                                type: a.type
                            }),
                            this.flushBufferCounter = 0,
                            this.doFlush()
                        }
                    }, {
                        key: "onLevelUpdated",
                        value: function(a) {
                            var b = a.details;
                            0 !== b.fragments.length && (this._levelDuration = b.totalduration + b.fragments[0].start,
                            this.updateMediaElementDuration())
                        }
                    }, {
                        key: "updateMediaElementDuration",
                        value: function() {
                            var a = this.media
                              , b = this.mediaSource
                              , c = this.sourceBuffer
                              , d = this._levelDuration;
                            if (null !== d && a && b && c && 0 !== a.readyState && "open" === b.readyState) {
                                for (var e in c)
                                    if (c[e].updating)
                                        return;
                                null === this._msDuration && (this._msDuration = b.duration);
                                var f = a.duration;
                                (d > this._msDuration && d > f || f === 1 / 0 || isNaN(f)) && (m.logger.log("Updating mediasource duration to " + d.toFixed(3)),
                                this._msDuration = b.duration = d)
                            }
                        }
                    }, {
                        key: "doFlush",
                        value: function() {
                            for (; this.flushRange.length; ) {
                                var a = this.flushRange[0];
                                if (!this.flushBuffer(a.start, a.end, a.type))
                                    return void (this._needsFlush = !0);
                                this.flushRange.shift(),
                                this.flushBufferCounter = 0
                            }
                            if (0 === this.flushRange.length) {
                                this._needsFlush = !1;
                                var b = 0
                                  , c = this.sourceBuffer;
                                try {
                                    for (var d in c)
                                        b += c[d].buffered.length
                                } catch (a) {
                                    m.logger.error("error while accessing sourceBuffer.buffered")
                                }
                                this.appended = b,
                                this.hls.trigger(j.default.BUFFER_FLUSHED)
                            }
                        }
                    }, {
                        key: "doAppending",
                        value: function() {
                            var a = this.hls
                              , b = this.sourceBuffer
                              , c = this.segments;
                            if (Object.keys(b).length) {
                                if (this.media.error)
                                    return this.segments = [],
                                    void m.logger.error("trying to append although a media error occured, flush segment and abort");
                                if (this.appending)
                                    return;
                                if (c && c.length) {
                                    var d = c.shift();
                                    try {
                                        var e = d.type
                                          , f = b[e];
                                        f ? f.updating ? c.unshift(d) : (f.ended = !1,
                                        this.parent = d.parent,
                                        f.appendBuffer(d.data),
                                        this.appendError = 0,
                                        this.appended++,
                                        this.appending = !0) : this.onSBUpdateEnd()
                                    } catch (b) {
                                        m.logger.error("error while trying to append buffer:" + b.message),
                                        c.unshift(d);
                                        var g = {
                                            type: n.ErrorTypes.MEDIA_ERROR,
                                            parent: d.parent
                                        };
                                        if (22 === b.code)
                                            return this.segments = [],
                                            g.details = n.ErrorDetails.BUFFER_FULL_ERROR,
                                            g.fatal = !1,
                                            void a.trigger(j.default.ERROR, g);
                                        if (this.appendError ? this.appendError++ : this.appendError = 1,
                                        g.details = n.ErrorDetails.BUFFER_APPEND_ERROR,
                                        this.appendError > a.config.appendErrorMaxRetry)
                                            return m.logger.log("fail " + a.config.appendErrorMaxRetry + " times to append segment in sourceBuffer"),
                                            c = [],
                                            g.fatal = !0,
                                            void a.trigger(j.default.ERROR, g);
                                        g.fatal = !1,
                                        a.trigger(j.default.ERROR, g)
                                    }
                                }
                            }
                        }
                    }, {
                        key: "flushBuffer",
                        value: function(a, b, c) {
                            var d, e, f, g, h, i, j = this.sourceBuffer;
                            if (Object.keys(j).length) {
                                if (m.logger.log("flushBuffer,pos/start/end: " + this.media.currentTime.toFixed(3) + "/" + a + "/" + b),
                                this.flushBufferCounter < this.appended) {
                                    for (var k in j)
                                        if (!c || k === c) {
                                            if (d = j[k],
                                            d.ended = !1,
                                            d.updating)
                                                return m.logger.warn("cannot flush, sb updating in progress"),
                                                !1;
                                            try {
                                                for (e = 0; e < d.buffered.length; e++)
                                                    if (f = d.buffered.start(e),
                                                    g = d.buffered.end(e),
                                                    navigator.userAgent.toLowerCase().indexOf("firefox") !== -1 && b === Number.POSITIVE_INFINITY ? (h = a,
                                                    i = b) : (h = Math.max(f, a),
                                                    i = Math.min(g, b)),
                                                    Math.min(i, g) - h > .5)
                                                        return this.flushBufferCounter++,
                                                        m.logger.log("flush " + k + " [" + h + "," + i + "], of [" + f + "," + g + "], pos:" + this.media.currentTime),
                                                        d.remove(h, i),
                                                        !1
                                            } catch (a) {
                                                m.logger.warn("exception while accessing sourcebuffer, it might have been removed from MediaSource")
                                            }
                                        }
                                } else
                                    m.logger.warn("abort flushing too many retries");
                                m.logger.log("buffer flushed")
                            }
                            return !0
                        }
                    }]),
                    b
                }(l.default);
                c.default = o
            }
            , {
                30: 30,
                31: 31,
                32: 32,
                50: 50
            }],
            9: [function(a, b, c) {
                "use strict";
                function d(a) {
                    return a && a.__esModule ? a : {
                        default: a
                    }
                }
                function e(a, b) {
                    if (!(a instanceof b))
                        throw new TypeError("Cannot call a class as a function")
                }
                function f(a, b) {
                    if (!a)
                        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
                    return !b || "object" != typeof b && "function" != typeof b ? a : b
                }
                function g(a, b) {
                    if ("function" != typeof b && null !== b)
                        throw new TypeError("Super expression must either be null or a function, not " + typeof b);
                    a.prototype = Object.create(b && b.prototype, {
                        constructor: {
                            value: a,
                            enumerable: !1,
                            writable: !0,
                            configurable: !0
                        }
                    }),
                    b && (Object.setPrototypeOf ? Object.setPrototypeOf(a, b) : a.__proto__ = b)
                }
                Object.defineProperty(c, "__esModule", {
                    value: !0
                });
                var h = function() {
                    function a(a, b) {
                        for (var c = 0; c < b.length; c++) {
                            var d = b[c];
                            d.enumerable = d.enumerable || !1,
                            d.configurable = !0,
                            "value"in d && (d.writable = !0),
                            Object.defineProperty(a, d.key, d)
                        }
                    }
                    return function(b, c, d) {
                        return c && a(b.prototype, c),
                        d && a(b, d),
                        b
                    }
                }()
                  , i = a(32)
                  , j = d(i)
                  , k = a(31)
                  , l = d(k)
                  , m = function(a) {
                    function b(a) {
                        return e(this, b),
                        f(this, (b.__proto__ || Object.getPrototypeOf(b)).call(this, a, j.default.FPS_DROP_LEVEL_CAPPING, j.default.MEDIA_ATTACHING, j.default.MANIFEST_PARSED))
                    }
                    return g(b, a),
                    h(b, [{
                        key: "destroy",
                        value: function() {
                            this.hls.config.capLevelToPlayerSize && (this.media = this.restrictedLevels = null,
                            this.autoLevelCapping = Number.POSITIVE_INFINITY,
                            this.timer && (this.timer = clearInterval(this.timer)))
                        }
                    }, {
                        key: "onFpsDropLevelCapping",
                        value: function(a) {
                            this.restrictedLevels || (this.restrictedLevels = []),
                            this.isLevelRestricted(a.droppedLevel) || this.restrictedLevels.push(a.droppedLevel)
                        }
                    }, {
                        key: "onMediaAttaching",
                        value: function(a) {
                            this.media = a.media instanceof HTMLVideoElement ? a.media : null
                        }
                    }, {
                        key: "onManifestParsed",
                        value: function(a) {
                            var b = this.hls;
                            b.config.capLevelToPlayerSize && (this.autoLevelCapping = Number.POSITIVE_INFINITY,
                            this.levels = a.levels,
                            b.firstLevel = this.getMaxLevel(a.firstLevel),
                            clearInterval(this.timer),
                            this.timer = setInterval(this.detectPlayerSize.bind(this), 1e3),
                            this.detectPlayerSize())
                        }
                    }, {
                        key: "detectPlayerSize",
                        value: function() {
                            if (this.media) {
                                var a = this.levels ? this.levels.length : 0;
                                if (a) {
                                    var b = this.hls;
                                    b.autoLevelCapping = this.getMaxLevel(a - 1),
                                    b.autoLevelCapping > this.autoLevelCapping && b.streamController.nextLevelSwitch(),
                                    this.autoLevelCapping = b.autoLevelCapping
                                }
                            }
                        }
                    }, {
                        key: "getMaxLevel",
                        value: function(a) {
                            var b = 0
                              , c = void 0
                              , d = void 0
                              , e = this.mediaWidth
                              , f = this.mediaHeight
                              , g = 0
                              , h = 0;
                            for (c = 0; c <= a && (d = this.levels[c],
                            !this.isLevelRestricted(c)) && (b = c,
                            g = d.width,
                            h = d.height,
                            !(e <= g || f <= h)); c++)
                                ;
                            return b
                        }
                    }, {
                        key: "isLevelRestricted",
                        value: function(a) {
                            return !(!this.restrictedLevels || this.restrictedLevels.indexOf(a) === -1)
                        }
                    }, {
                        key: "contentScaleFactor",
                        get: function() {
                            var a = 1;
                            try {
                                a = window.devicePixelRatio
                            } catch (a) {}
                            return a
                        }
                    }, {
                        key: "mediaWidth",
                        get: function() {
                            var a = void 0
                              , b = this.media;
                            return b && (a = b.width || b.clientWidth || b.offsetWidth,
                            a *= this.contentScaleFactor),
                            a
                        }
                    }, {
                        key: "mediaHeight",
                        get: function() {
                            var a = void 0
                              , b = this.media;
                            return b && (a = b.height || b.clientHeight || b.offsetHeight,
                            a *= this.contentScaleFactor),
                            a
                        }
                    }]),
                    b
                }(l.default);
                c.default = m
            }
            , {
                31: 31,
                32: 32
            }],
            10: [function(a, b, c) {
                "use strict";
                function d(a) {
                    return a && a.__esModule ? a : {
                        default: a
                    }
                }
                function e(a, b) {
                    if (!(a instanceof b))
                        throw new TypeError("Cannot call a class as a function")
                }
                function f(a, b) {
                    if (!a)
                        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
                    return !b || "object" != typeof b && "function" != typeof b ? a : b
                }
                function g(a, b) {
                    if ("function" != typeof b && null !== b)
                        throw new TypeError("Super expression must either be null or a function, not " + typeof b);
                    a.prototype = Object.create(b && b.prototype, {
                        constructor: {
                            value: a,
                            enumerable: !1,
                            writable: !0,
                            configurable: !0
                        }
                    }),
                    b && (Object.setPrototypeOf ? Object.setPrototypeOf(a, b) : a.__proto__ = b)
                }
                Object.defineProperty(c, "__esModule", {
                    value: !0
                });
                var h = function() {
                    function a(a, b) {
                        for (var c = 0; c < b.length; c++) {
                            var d = b[c];
                            d.enumerable = d.enumerable || !1,
                            d.configurable = !0,
                            "value"in d && (d.writable = !0),
                            Object.defineProperty(a, d.key, d)
                        }
                    }
                    return function(b, c, d) {
                        return c && a(b.prototype, c),
                        d && a(b, d),
                        b
                    }
                }()
                  , i = a(32)
                  , j = d(i)
                  , k = a(31)
                  , l = d(k)
                  , m = a(50)
                  , n = function(a) {
                    function b(a) {
                        return e(this, b),
                        f(this, (b.__proto__ || Object.getPrototypeOf(b)).call(this, a, j.default.MEDIA_ATTACHING))
                    }
                    return g(b, a),
                    h(b, [{
                        key: "destroy",
                        value: function() {
                            this.timer && clearInterval(this.timer),
                            this.isVideoPlaybackQualityAvailable = !1
                        }
                    }, {
                        key: "onMediaAttaching",
                        value: function(a) {
                            var b = this.hls.config;
                            if (b.capLevelOnFPSDrop) {
                                var c = this.video = a.media instanceof HTMLVideoElement ? a.media : null;
                                "function" == typeof c.getVideoPlaybackQuality && (this.isVideoPlaybackQualityAvailable = !0),
                                clearInterval(this.timer),
                                this.timer = setInterval(this.checkFPSInterval.bind(this), b.fpsDroppedMonitoringPeriod)
                            }
                        }
                    }, {
                        key: "checkFPS",
                        value: function(a, b, c) {
                            var d = performance.now();
                            if (b) {
                                if (this.lastTime) {
                                    var e = d - this.lastTime
                                      , f = c - this.lastDroppedFrames
                                      , g = b - this.lastDecodedFrames
                                      , h = 1e3 * f / e
                                      , i = this.hls;
                                    if (i.trigger(j.default.FPS_DROP, {
                                        currentDropped: f,
                                        currentDecoded: g,
                                        totalDroppedFrames: c
                                    }),
                                    h > 0 && f > i.config.fpsDroppedMonitoringThreshold * g) {
                                        var k = i.currentLevel;
                                        m.logger.warn("drop FPS ratio greater than max allowed value for currentLevel: " + k),
                                        k > 0 && (i.autoLevelCapping === -1 || i.autoLevelCapping >= k) && (k -= 1,
                                        i.trigger(j.default.FPS_DROP_LEVEL_CAPPING, {
                                            level: k,
                                            droppedLevel: i.currentLevel
                                        }),
                                        i.autoLevelCapping = k,
                                        i.streamController.nextLevelSwitch())
                                    }
                                }
                                this.lastTime = d,
                                this.lastDroppedFrames = c,
                                this.lastDecodedFrames = b
                            }
                        }
                    }, {
                        key: "checkFPSInterval",
                        value: function() {
                            var a = this.video;
                            if (a)
                                if (this.isVideoPlaybackQualityAvailable) {
                                    var b = a.getVideoPlaybackQuality();
                                    this.checkFPS(a, b.totalVideoFrames, b.droppedVideoFrames)
                                } else
                                    this.checkFPS(a, a.webkitDecodedFrameCount, a.webkitDroppedFrameCount)
                        }
                    }]),
                    b
                }(l.default);
                c.default = n
            }
            , {
                31: 31,
                32: 32,
                50: 50
            }],
            11: [function(a, b, c) {
                "use strict";
                function d(a) {
                    return a && a.__esModule ? a : {
                        default: a
                    }
                }
                function e(a, b) {
                    if (!(a instanceof b))
                        throw new TypeError("Cannot call a class as a function")
                }
                function f(a, b) {
                    if (!a)
                        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
                    return !b || "object" != typeof b && "function" != typeof b ? a : b
                }
                function g(a, b) {
                    if ("function" != typeof b && null !== b)
                        throw new TypeError("Super expression must either be null or a function, not " + typeof b);
                    a.prototype = Object.create(b && b.prototype, {
                        constructor: {
                            value: a,
                            enumerable: !1,
                            writable: !0,
                            configurable: !0
                        }
                    }),
                    b && (Object.setPrototypeOf ? Object.setPrototypeOf(a, b) : a.__proto__ = b)
                }
                Object.defineProperty(c, "__esModule", {
                    value: !0
                });
                var h = function() {
                    function a(a, b) {
                        for (var c = 0; c < b.length; c++) {
                            var d = b[c];
                            d.enumerable = d.enumerable || !1,
                            d.configurable = !0,
                            "value"in d && (d.writable = !0),
                            Object.defineProperty(a, d.key, d)
                        }
                    }
                    return function(b, c, d) {
                        return c && a(b.prototype, c),
                        d && a(b, d),
                        b
                    }
                }()
                  , i = a(32)
                  , j = d(i)
                  , k = a(31)
                  , l = d(k)
                  , m = a(50)
                  , n = a(30)
                  , o = a(34)
                  , p = d(o)
                  , q = function(a) {
                    function b(a) {
                        e(this, b);
                        var c = f(this, (b.__proto__ || Object.getPrototypeOf(b)).call(this, a, j.default.MANIFEST_LOADED, j.default.LEVEL_LOADED, j.default.FRAG_LOADED, j.default.ERROR));
                        return c.ontick = c.tick.bind(c),
                        c._manualLevel = -1,
                        c
                    }
                    return g(b, a),
                    h(b, [{
                        key: "destroy",
                        value: function() {
                            this.timer && (clearTimeout(this.timer),
                            this.timer = null),
                            this._manualLevel = -1
                        }
                    }, {
                        key: "startLoad",
                        value: function() {
                            this.canload = !0;
                            var a = this._levels;
                            a && a.forEach(function(a) {
                                a.loadError = 0;
                                var b = a.details;
                                b && b.live && (a.details = void 0)
                            }),
                            this.timer && this.tick()
                        }
                    }, {
                        key: "stopLoad",
                        value: function() {
                            this.canload = !1
                        }
                    }, {
                        key: "onManifestLoaded",
                        value: function(a) {
                            var b, c = [], d = [], e = {}, f = !1, g = !1, h = this.hls, i = /chrome|firefox/.test(navigator.userAgent.toLowerCase()), k = function(a, b) {
                                return MediaSource.isTypeSupported(a + "/mp4;codecs=" + b)
                            };
                            if (a.levels.forEach(function(a) {
                                a.videoCodec && (f = !0),
                                i && a.audioCodec && a.audioCodec.indexOf("mp4a.40.34") !== -1 && (a.audioCodec = void 0),
                                (a.audioCodec || a.attrs && a.attrs.AUDIO) && (g = !0);
                                var b = e[a.bitrate];
                                void 0 === b ? (e[a.bitrate] = c.length,
                                a.url = [a.url],
                                a.urlId = 0,
                                c.push(a)) : c[b].url.push(a.url)
                            }),
                            f && g ? c.forEach(function(a) {
                                a.videoCodec && d.push(a)
                            }) : d = c,
                            d = d.filter(function(a) {
                                var b = a.audioCodec
                                  , c = a.videoCodec;
                                return (!b || k("audio", b)) && (!c || k("video", c))
                            }),
                            d.length) {
                                b = d[0].bitrate,
                                d.sort(function(a, b) {
                                    return a.bitrate - b.bitrate
                                }),
                                this._levels = d;
                                for (var l = 0; l < d.length; l++)
                                    if (d[l].bitrate === b) {
                                        this._firstLevel = l,
                                        m.logger.log("manifest loaded," + d.length + " level(s) found, first bitrate:" + b);
                                        break
                                    }
                                h.trigger(j.default.MANIFEST_PARSED, {
                                    levels: d,
                                    firstLevel: this._firstLevel,
                                    stats: a.stats,
                                    audio: g,
                                    video: f,
                                    altAudio: a.audioTracks.length > 0
                                })
                            } else
                                h.trigger(j.default.ERROR, {
                                    type: n.ErrorTypes.MEDIA_ERROR,
                                    details: n.ErrorDetails.MANIFEST_INCOMPATIBLE_CODECS_ERROR,
                                    fatal: !0,
                                    url: h.url,
                                    reason: "no level with compatible codecs found in manifest"
                                })
                        }
                    }, {
                        key: "setLevelInternal",
                        value: function(a) {
                            var b = this._levels
                              , c = this.hls;
                            if (a >= 0 && a < b.length) {
                                if (this.timer && (clearTimeout(this.timer),
                                this.timer = null),
                                this._level !== a) {
                                    m.logger.log("switching to level " + a),
                                    this._level = a;
                                    var d = b[a];
                                    d.level = a,
                                    c.trigger(j.default.LEVEL_SWITCH, d),
                                    c.trigger(j.default.LEVEL_SWITCHING, d)
                                }
                                var e = b[a]
                                  , f = e.details;
                                if (!f || f.live === !0) {
                                    var g = e.urlId;
                                    c.trigger(j.default.LEVEL_LOADING, {
                                        url: e.url[g],
                                        level: a,
                                        id: g
                                    })
                                }
                            } else
                                c.trigger(j.default.ERROR, {
                                    type: n.ErrorTypes.OTHER_ERROR,
                                    details: n.ErrorDetails.LEVEL_SWITCH_ERROR,
                                    level: a,
                                    fatal: !1,
                                    reason: "invalid level idx"
                                })
                        }
                    }, {
                        key: "onError",
                        value: function(a) {
                            if (!a.fatal) {
                                var b = a.details
                                  , c = this.hls
                                  , d = void 0
                                  , e = void 0
                                  , f = !1;
                                switch (b) {
                                case n.ErrorDetails.FRAG_LOAD_ERROR:
                                case n.ErrorDetails.FRAG_LOAD_TIMEOUT:
                                case n.ErrorDetails.FRAG_LOOP_LOADING_ERROR:
                                case n.ErrorDetails.KEY_LOAD_ERROR:
                                case n.ErrorDetails.KEY_LOAD_TIMEOUT:
                                    d = a.frag.level;
                                    break;
                                case n.ErrorDetails.LEVEL_LOAD_ERROR:
                                case n.ErrorDetails.LEVEL_LOAD_TIMEOUT:
                                    d = a.context.level,
                                    f = !0;
                                    break;
                                case n.ErrorDetails.REMUX_ALLOC_ERROR:
                                    d = a.level
                                }
                                if (void 0 !== d) {
                                    e = this._levels[d],
                                    e.loadError ? e.loadError++ : e.loadError = 1;
                                    var g = e.url.length;
                                    if (g > 1 && e.loadError < g)
                                        e.urlId = (e.urlId + 1) % g,
                                        e.details = void 0,
                                        m.logger.warn("level controller," + b + " for level " + d + ": switching to redundant stream id " + e.urlId);
                                    else {
                                        var h = this._manualLevel === -1 && d;
                                        if (h)
                                            m.logger.warn("level controller," + b + ": switch-down for next fragment"),
                                            c.nextAutoLevel = Math.max(0, d - 1);
                                        else if (e && e.details && e.details.live)
                                            m.logger.warn("level controller," + b + " on live stream, discard"),
                                            f && (this._level = void 0);
                                        else if (b === n.ErrorDetails.LEVEL_LOAD_ERROR || b === n.ErrorDetails.LEVEL_LOAD_TIMEOUT) {
                                            var i = c.media
                                              , j = i && p.default.isBuffered(i, i.currentTime) && p.default.isBuffered(i, i.currentTime + .5);
                                            if (j) {
                                                var k = c.config.levelLoadingRetryDelay;
                                                m.logger.warn("level controller," + b + ", but media buffered, retry in " + k + "ms"),
                                                this.timer = setTimeout(this.ontick, k)
                                            } else
                                                m.logger.error("cannot recover " + b + " error"),
                                                this._level = void 0,
                                                this.timer && (clearTimeout(this.timer),
                                                this.timer = null),
                                                a.fatal = !0
                                        }
                                    }
                                }
                            }
                        }
                    }, {
                        key: "onFragLoaded",
                        value: function(a) {
                            var b = a.frag;
                            if (b && "main" === b.type) {
                                var c = this._levels[b.level];
                                c && (c.loadError = 0)
                            }
                        }
                    }, {
                        key: "onLevelLoaded",
                        value: function(a) {
                            var b = a.level;
                            if (b === this._level) {
                                var c = this._levels[b];
                                c.loadError = 0;
                                var d = a.details;
                                if (d.live) {
                                    var e = 1e3 * (d.averagetargetduration ? d.averagetargetduration : d.targetduration)
                                      , f = c.details;
                                    f && d.endSN === f.endSN && (e /= 2,
                                    m.logger.log("same live playlist, reload twice faster")),
                                    e -= performance.now() - a.stats.trequest,
                                    e = Math.max(1e3, Math.round(e)),
                                    m.logger.log("live playlist, reload in " + e + " ms"),
                                    this.timer = setTimeout(this.ontick, e)
                                } else
                                    this.timer = null
                            }
                        }
                    }, {
                        key: "tick",
                        value: function() {
                            var a = this._level;
                            if (void 0 !== a && this.canload) {
                                var b = this._levels[a];
                                if (b && b.url) {
                                    var c = b.urlId;
                                    this.hls.trigger(j.default.LEVEL_LOADING, {
                                        url: b.url[c],
                                        level: a,
                                        id: c
                                    })
                                }
                            }
                        }
                    }, {
                        key: "levels",
                        get: function() {
                            return this._levels
                        }
                    }, {
                        key: "level",
                        get: function() {
                            return this._level
                        },
                        set: function(a) {
                            var b = this._levels;
                            b && b.length > a && (this._level === a && void 0 !== b[a].details || this.setLevelInternal(a))
                        }
                    }, {
                        key: "manualLevel",
                        get: function() {
                            return this._manualLevel
                        },
                        set: function(a) {
                            this._manualLevel = a,
                            void 0 === this._startLevel && (this._startLevel = a),
                            a !== -1 && (this.level = a)
                        }
                    }, {
                        key: "firstLevel",
                        get: function() {
                            return this._firstLevel
                        },
                        set: function(a) {
                            this._firstLevel = a
                        }
                    }, {
                        key: "startLevel",
                        get: function() {
                            if (void 0 === this._startLevel) {
                                var a = this.hls.config.startLevel;
                                return void 0 !== a ? a : this._firstLevel
                            }
                            return this._startLevel
                        },
                        set: function(a) {
                            this._startLevel = a
                        }
                    }, {
                        key: "nextLoadLevel",
                        get: function() {
                            return this._manualLevel !== -1 ? this._manualLevel : this.hls.nextAutoLevel
                        },
                        set: function(a) {
                            this.level = a,
                            this._manualLevel === -1 && (this.hls.nextAutoLevel = a)
                        }
                    }]),
                    b
                }(l.default);
                c.default = q
            }
            , {
                30: 30,
                31: 31,
                32: 32,
                34: 34,
                50: 50
            }],
            12: [function(a, b, c) {
                "use strict";
                function d(a) {
                    return a && a.__esModule ? a : {
                        default: a
                    }
                }
                function e(a, b) {
                    if (!(a instanceof b))
                        throw new TypeError("Cannot call a class as a function")
                }
                function f(a, b) {
                    if (!a)
                        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
                    return !b || "object" != typeof b && "function" != typeof b ? a : b
                }
                function g(a, b) {
                    if ("function" != typeof b && null !== b)
                        throw new TypeError("Super expression must either be null or a function, not " + typeof b);
                    a.prototype = Object.create(b && b.prototype, {
                        constructor: {
                            value: a,
                            enumerable: !1,
                            writable: !0,
                            configurable: !0
                        }
                    }),
                    b && (Object.setPrototypeOf ? Object.setPrototypeOf(a, b) : a.__proto__ = b)
                }
                Object.defineProperty(c, "__esModule", {
                    value: !0
                });
                var h = function() {
                    function a(a, b) {
                        for (var c = 0; c < b.length; c++) {
                            var d = b[c];
                            d.enumerable = d.enumerable || !1,
                            d.configurable = !0,
                            "value"in d && (d.writable = !0),
                            Object.defineProperty(a, d.key, d)
                        }
                    }
                    return function(b, c, d) {
                        return c && a(b.prototype, c),
                        d && a(b, d),
                        b
                    }
                }()
                  , i = a(45)
                  , j = d(i)
                  , k = a(34)
                  , l = d(k)
                  , m = a(24)
                  , n = d(m)
                  , o = a(32)
                  , p = d(o)
                  , q = a(31)
                  , r = d(q)
                  , s = a(35)
                  , t = d(s)
                  , u = a(51)
                  , v = d(u)
                  , w = a(30)
                  , x = a(50)
                  , y = {
                    STOPPED: "STOPPED",
                    IDLE: "IDLE",
                    KEY_LOADING: "KEY_LOADING",
                    FRAG_LOADING: "FRAG_LOADING",
                    FRAG_LOADING_WAITING_RETRY: "FRAG_LOADING_WAITING_RETRY",
                    WAITING_LEVEL: "WAITING_LEVEL",
                    PARSING: "PARSING",
                    PARSED: "PARSED",
                    BUFFER_FLUSHING: "BUFFER_FLUSHING",
                    ENDED: "ENDED",
                    ERROR: "ERROR"
                }
                  , z = function(a) {
                    function b(a) {
                        e(this, b);
                        var c = f(this, (b.__proto__ || Object.getPrototypeOf(b)).call(this, a, p.default.MEDIA_ATTACHED, p.default.MEDIA_DETACHING, p.default.MANIFEST_LOADING, p.default.MANIFEST_PARSED, p.default.LEVEL_LOADED, p.default.KEY_LOADED, p.default.FRAG_LOADED, p.default.FRAG_LOAD_EMERGENCY_ABORTED, p.default.FRAG_PARSING_INIT_SEGMENT, p.default.FRAG_PARSING_DATA, p.default.FRAG_PARSED, p.default.ERROR, p.default.AUDIO_TRACK_SWITCHING, p.default.AUDIO_TRACK_SWITCHED, p.default.BUFFER_CREATED, p.default.BUFFER_APPENDED, p.default.BUFFER_FLUSHED));
                        return c.config = a.config,
                        c.audioCodecSwap = !1,
                        c.ticks = 0,
                        c._state = y.STOPPED,
                        c.ontick = c.tick.bind(c),
                        c
                    }
                    return g(b, a),
                    h(b, [{
                        key: "destroy",
                        value: function() {
                            this.stopLoad(),
                            this.timer && (clearInterval(this.timer),
                            this.timer = null),
                            r.default.prototype.destroy.call(this),
                            this.state = y.STOPPED
                        }
                    }, {
                        key: "startLoad",
                        value: function(a) {
                            if (this.levels) {
                                var b = this.lastCurrentTime
                                  , c = this.hls;
                                if (this.stopLoad(),
                                this.timer || (this.timer = setInterval(this.ontick, 100)),
                                this.level = -1,
                                this.fragLoadError = 0,
                                !this.startFragRequested) {
                                    var d = c.startLevel;
                                    d === -1 && (d = 0,
                                    this.bitrateTest = !0),
                                    this.level = c.nextLoadLevel = d,
                                    this.loadedmetadata = !1
                                }
                                b > 0 && a === -1 && (x.logger.log("override startPosition with lastCurrentTime @" + b.toFixed(3)),
                                a = b),
                                this.state = y.IDLE,
                                this.nextLoadPosition = this.startPosition = this.lastCurrentTime = a,
                                this.tick()
                            } else
                                this.forceStartLoad = !0,
                                this.state = y.STOPPED
                        }
                    }, {
                        key: "stopLoad",
                        value: function() {
                            var a = this.fragCurrent;
                            a && (a.loader && a.loader.abort(),
                            this.fragCurrent = null),
                            this.fragPrevious = null,
                            this.demuxer && (this.demuxer.destroy(),
                            this.demuxer = null),
                            this.state = y.STOPPED,
                            this.forceStartLoad = !1
                        }
                    }, {
                        key: "tick",
                        value: function() {
                            this.ticks++,
                            1 === this.ticks && (this.doTick(),
                            this.ticks > 1 && setTimeout(this.tick, 1),
                            this.ticks = 0)
                        }
                    }, {
                        key: "doTick",
                        value: function() {
                            switch (this.state) {
                            case y.ERROR:
                                break;
                            case y.BUFFER_FLUSHING:
                                this.fragLoadError = 0;
                                break;
                            case y.IDLE:
                                if (!this._doTickIdle())
                                    return;
                                break;
                            case y.WAITING_LEVEL:
                                var a = this.levels[this.level];
                                a && a.details && (this.state = y.IDLE);
                                break;
                            case y.FRAG_LOADING_WAITING_RETRY:
                                var b = performance.now()
                                  , c = this.retryDate;
                                (!c || b >= c || this.media && this.media.seeking) && (x.logger.log("mediaController: retryDate reached, switch back to IDLE state"),
                                this.state = y.IDLE);
                                break;
                            case y.ERROR:
                            case y.STOPPED:
                            case y.FRAG_LOADING:
                            case y.PARSING:
                            case y.PARSED:
                            case y.ENDED:
                            }
                            this._checkBuffer(),
                            this._checkFragmentChanged()
                        }
                    }, {
                        key: "_doTickIdle",
                        value: function() {
                            var a = this.hls
                              , b = a.config
                              , c = this.media;
                            if (void 0 !== this.levelLastLoaded && !c && (this.startFragRequested || !b.startFragPrefetch))
                                return !0;
                            var d = void 0;
                            d = this.loadedmetadata ? c.currentTime : this.nextLoadPosition;
                            var e = a.nextLoadLevel
                              , f = this.levels[e]
                              , g = f.bitrate
                              , h = void 0;
                            h = g ? Math.max(8 * b.maxBufferSize / g, b.maxBufferLength) : b.maxBufferLength,
                            h = Math.min(h, b.maxMaxBufferLength);
                            var i = l.default.bufferInfo(this.mediaBuffer ? this.mediaBuffer : c, d, b.maxBufferHole)
                              , j = i.len;
                            if (j >= h)
                                return !0;
                            x.logger.trace("buffer length of " + j.toFixed(3) + " is below max of " + h.toFixed(3) + ". checking for more payload ..."),
                            this.level = a.nextLoadLevel = e;
                            var k = f.details;
                            if ("undefined" == typeof k || k.live && this.levelLastLoaded !== e)
                                return this.state = y.WAITING_LEVEL,
                                !0;
                            var m = this.fragPrevious;
                            if (!k.live && m && m.sn === k.endSN) {
                                var n = Math.min(c.duration, m.start + m.duration);
                                if (n - Math.max(i.end, m.start) <= Math.max(.2, m.duration / 2)) {
                                    var o = {};
                                    return this.altAudio && (o.type = "video"),
                                    this.hls.trigger(p.default.BUFFER_EOS, o),
                                    this.state = y.ENDED,
                                    !0
                                }
                            }
                            return this._fetchPayloadOrEos(d, i, k)
                        }
                    }, {
                        key: "_fetchPayloadOrEos",
                        value: function(a, b, c) {
                            var d = this.fragPrevious
                              , e = this.level
                              , f = c.fragments
                              , g = f.length;
                            if (0 === g)
                                return !1;
                            var h = f[0].start
                              , i = f[g - 1].start + f[g - 1].duration
                              , j = b.end
                              , k = void 0;
                            if (c.initSegment && !c.initSegment.data)
                                k = c.initSegment;
                            else if (c.live) {
                                var l = this.config.initialLiveManifestSize;
                                if (g < l)
                                    return x.logger.warn("Can not start playback of a level, reason: not enough fragments " + g + " < " + l),
                                    !1;
                                if (k = this._ensureFragmentAtLivePoint(c, j, h, i, d, f, g),
                                null === k)
                                    return !1
                            } else
                                j < h && (k = f[0]);
                            return k || (k = this._findFragment(h, d, g, f, j, i, c)),
                            !k || this._loadFragmentOrKey(k, e, c, a, j)
                        }
                    }, {
                        key: "_ensureFragmentAtLivePoint",
                        value: function(a, b, c, d, e, f, g) {
                            var h = this.hls.config
                              , i = this.media
                              , j = void 0
                              , k = void 0 !== h.liveMaxLatencyDuration ? h.liveMaxLatencyDuration : h.liveMaxLatencyDurationCount * a.targetduration;
                            if (b < Math.max(c - h.maxFragLookUpTolerance, d - k)) {
                                var l = this.liveSyncPosition = this.computeLivePosition(c, a);
                                x.logger.log("buffer end: " + b.toFixed(3) + " is located too far from the end of live sliding playlist, reset currentTime to : " + l.toFixed(3)),
                                b = l,
                                i && i.readyState && i.duration > l && (i.currentTime = l)
                            }
                            if (a.PTSKnown && b > d && i && i.readyState)
                                return null;
                            if (this.startFragRequested && !a.PTSKnown) {
                                if (e) {
                                    var m = e.sn + 1;
                                    m >= a.startSN && m <= a.endSN && (j = f[m - a.startSN],
                                    x.logger.log("live playlist, switching playlist, load frag with next SN: " + j.sn))
                                }
                                j || (j = f[Math.min(g - 1, Math.round(g / 2))],
                                x.logger.log("live playlist, switching playlist, unknown, load middle frag : " + j.sn))
                            }
                            return j
                        }
                    }, {
                        key: "_findFragment",
                        value: function(a, b, c, d, e, f, g) {
                            var h = this.hls.config
                              , i = void 0
                              , k = void 0
                              , l = h.maxFragLookUpTolerance
                              , m = b ? d[b.sn - d[0].sn + 1] : void 0
                              , n = function(a) {
                                var b = Math.min(l, a.duration);
                                return a.start + a.duration - b <= e ? 1 : a.start - b > e && a.start ? -1 : 0
                            };
                            if (e < f ? (e > f - l && (l = 0),
                            k = m && !n(m) ? m : j.default.search(d, n)) : k = d[c - 1],
                            k) {
                                i = k;
                                var o = i.sn - g.startSN
                                  , p = b && i.level === b.level
                                  , q = d[o - 1]
                                  , r = d[o + 1];
                                if (p && i.sn === b.sn)
                                    if (i.sn < g.endSN) {
                                        var s = b.deltaPTS;
                                        s && s > h.maxBufferHole && b.dropped && o ? (i = q,
                                        x.logger.warn("SN just loaded, with large PTS gap between audio and video, maybe frag is not starting with a keyframe ? load previous one to try to overcome this"),
                                        b.loadCounter--) : (i = r,
                                        x.logger.log("SN just loaded, load next one: " + i.sn))
                                    } else
                                        i = null;
                                else
                                    i.dropped && !p && (r && r.backtracked ? (x.logger.warn("Already backtracked from fragment " + (o + 1) + ", will not backtrack to fragment " + o + ". Loading fragment " + (o + 1)),
                                    i = r) : (x.logger.warn("Loaded fragment with dropped frames, backtracking 1 segment to find a keyframe"),
                                    i.dropped = 0,
                                    q ? (q.loadCounter && q.loadCounter--,
                                    i = q) : i = null))
                            }
                            return i
                        }
                    }, {
                        key: "_loadFragmentOrKey",
                        value: function(a, b, c, d, e) {
                            var f = this.hls
                              , g = f.config;
                            if (!a.decryptdata || null == a.decryptdata.uri || null != a.decryptdata.key) {
                                if (x.logger.log("Loading " + a.sn + " of [" + c.startSN + " ," + c.endSN + "],level " + b + ", currentTime:" + d.toFixed(3) + ",bufferEnd:" + e.toFixed(3)),
                                void 0 !== this.fragLoadIdx ? this.fragLoadIdx++ : this.fragLoadIdx = 0,
                                a.loadCounter) {
                                    a.loadCounter++;
                                    var h = g.fragLoadingLoopThreshold;
                                    if (a.loadCounter > h && Math.abs(this.fragLoadIdx - a.loadIdx) < h)
                                        return f.trigger(p.default.ERROR, {
                                            type: w.ErrorTypes.MEDIA_ERROR,
                                            details: w.ErrorDetails.FRAG_LOOP_LOADING_ERROR,
                                            fatal: !1,
                                            frag: a
                                        }),
                                        !1
                                } else
                                    a.loadCounter = 1;
                                return a.loadIdx = this.fragLoadIdx,
                                this.fragCurrent = a,
                                this.startFragRequested = !0,
                                isNaN(a.sn) || (this.nextLoadPosition = a.start + a.duration),
                                a.autoLevel = f.autoLevelEnabled,
                                a.bitrateTest = this.bitrateTest,
                                f.trigger(p.default.FRAG_LOADING, {
                                    frag: a
                                }),
                                this.demuxer || (this.demuxer = new n.default(f,"main")),
                                this.state = y.FRAG_LOADING,
                                !0
                            }
                            x.logger.log("Loading key for " + a.sn + " of [" + c.startSN + " ," + c.endSN + "],level " + b),
                            this.state = y.KEY_LOADING,
                            f.trigger(p.default.KEY_LOADING, {
                                frag: a
                            })
                        }
                    }, {
                        key: "getBufferedFrag",
                        value: function(a) {
                            return j.default.search(this._bufferedFrags, function(b) {
                                return a < b.startPTS ? -1 : a > b.endPTS ? 1 : 0
                            })
                        }
                    }, {
                        key: "followingBufferedFrag",
                        value: function(a) {
                            return a ? this.getBufferedFrag(a.endPTS + .5) : null
                        }
                    }, {
                        key: "_checkFragmentChanged",
                        value: function() {
                            var a, b, c = this.media;
                            if (c && c.readyState && c.seeking === !1 && (b = c.currentTime,
                            b > c.playbackRate * this.lastCurrentTime && (this.lastCurrentTime = b),
                            l.default.isBuffered(c, b) ? a = this.getBufferedFrag(b) : l.default.isBuffered(c, b + .1) && (a = this.getBufferedFrag(b + .1)),
                            a)) {
                                var d = a;
                                if (d !== this.fragPlaying) {
                                    this.hls.trigger(p.default.FRAG_CHANGED, {
                                        frag: d
                                    });
                                    var e = d.level;
                                    this.fragPlaying && this.fragPlaying.level === e || this.hls.trigger(p.default.LEVEL_SWITCHED, {
                                        level: e
                                    }),
                                    this.fragPlaying = d
                                }
                            }
                        }
                    }, {
                        key: "immediateLevelSwitch",
                        value: function() {
                            if (x.logger.log("immediateLevelSwitch"),
                            !this.immediateSwitch) {
                                this.immediateSwitch = !0;
                                var a = this.media
                                  , b = void 0;
                                a ? (b = a.paused,
                                a.pause()) : b = !0,
                                this.previouslyPaused = b
                            }
                            var c = this.fragCurrent;
                            c && c.loader && c.loader.abort(),
                            this.fragCurrent = null,
                            this.fragLoadIdx += 2 * this.config.fragLoadingLoopThreshold,
                            this.flushMainBuffer(0, Number.POSITIVE_INFINITY)
                        }
                    }, {
                        key: "immediateLevelSwitchEnd",
                        value: function() {
                            var a = this.media;
                            a && a.buffered.length && (this.immediateSwitch = !1,
                            l.default.isBuffered(a, a.currentTime) && (a.currentTime -= 1e-4),
                            this.previouslyPaused || a.play())
                        }
                    }, {
                        key: "nextLevelSwitch",
                        value: function() {
                            var a = this.media;
                            if (a && a.readyState) {
                                var b = void 0
                                  , c = void 0
                                  , d = void 0;
                                if (this.fragLoadIdx += 2 * this.config.fragLoadingLoopThreshold,
                                c = this.getBufferedFrag(a.currentTime),
                                c && c.startPTS > 1 && this.flushMainBuffer(0, c.startPTS - 1),
                                a.paused)
                                    b = 0;
                                else {
                                    var e = this.hls.nextLoadLevel
                                      , f = this.levels[e]
                                      , g = this.fragLastKbps;
                                    b = g && this.fragCurrent ? this.fragCurrent.duration * f.bitrate / (1e3 * g) + 1 : 0
                                }
                                if (d = this.getBufferedFrag(a.currentTime + b),
                                d && (d = this.followingBufferedFrag(d))) {
                                    var h = this.fragCurrent;
                                    h && h.loader && h.loader.abort(),
                                    this.fragCurrent = null,
                                    this.flushMainBuffer(d.startPTS, Number.POSITIVE_INFINITY)
                                }
                            }
                        }
                    }, {
                        key: "flushMainBuffer",
                        value: function(a, b) {
                            this.state = y.BUFFER_FLUSHING;
                            var c = {
                                startOffset: a,
                                endOffset: b
                            };
                            this.altAudio && (c.type = "video"),
                            this.hls.trigger(p.default.BUFFER_FLUSHING, c)
                        }
                    }, {
                        key: "onMediaAttached",
                        value: function(a) {
                            var b = this.media = this.mediaBuffer = a.media;
                            this.onvseeking = this.onMediaSeeking.bind(this),
                            this.onvseeked = this.onMediaSeeked.bind(this),
                            this.onvended = this.onMediaEnded.bind(this),
                            b.addEventListener("seeking", this.onvseeking),
                            b.addEventListener("seeked", this.onvseeked),
                            b.addEventListener("ended", this.onvended);
                            var c = this.config;
                            this.levels && c.autoStartLoad && this.hls.startLoad(c.startPosition)
                        }
                    }, {
                        key: "onMediaDetaching",
                        value: function() {
                            var a = this.media;
                            a && a.ended && (x.logger.log("MSE detaching and video ended, reset startPosition"),
                            this.startPosition = this.lastCurrentTime = 0);
                            var b = this.levels;
                            b && b.forEach(function(a) {
                                a.details && a.details.fragments.forEach(function(a) {
                                    a.loadCounter = void 0,
                                    a.backtracked = void 0
                                })
                            }),
                            a && (a.removeEventListener("seeking", this.onvseeking),
                            a.removeEventListener("seeked", this.onvseeked),
                            a.removeEventListener("ended", this.onvended),
                            this.onvseeking = this.onvseeked = this.onvended = null),
                            this.media = this.mediaBuffer = null,
                            this.loadedmetadata = !1,
                            this.stopLoad()
                        }
                    }, {
                        key: "onMediaSeeking",
                        value: function() {
                            var a = this.media
                              , b = a ? a.currentTime : void 0
                              , c = this.config;
                            if (x.logger.log("media seeking to " + b.toFixed(3)),
                            this.state === y.FRAG_LOADING) {
                                var d = this.mediaBuffer ? this.mediaBuffer : a
                                  , e = l.default.bufferInfo(d, b, this.config.maxBufferHole)
                                  , f = this.fragCurrent;
                                if (0 === e.len && f) {
                                    var g = c.maxFragLookUpTolerance
                                      , h = f.start - g
                                      , i = f.start + f.duration + g;
                                    b < h || b > i ? (f.loader && (x.logger.log("seeking outside of buffer while fragment load in progress, cancel fragment load"),
                                    f.loader.abort()),
                                    this.fragCurrent = null,
                                    this.fragPrevious = null,
                                    this.state = y.IDLE) : x.logger.log("seeking outside of buffer but within currently loaded fragment range")
                                }
                            } else
                                this.state === y.ENDED && (this.state = y.IDLE);
                            a && (this.lastCurrentTime = b),
                            this.state !== y.FRAG_LOADING && void 0 !== this.fragLoadIdx && (this.fragLoadIdx += 2 * c.fragLoadingLoopThreshold),
                            this.loadedmetadata || (this.nextLoadPosition = this.startPosition = b),
                            this.tick()
                        }
                    }, {
                        key: "onMediaSeeked",
                        value: function() {
                            x.logger.log("media seeked to " + this.media.currentTime.toFixed(3)),
                            this.tick()
                        }
                    }, {
                        key: "onMediaEnded",
                        value: function() {
                            x.logger.log("media ended"),
                            this.startPosition = this.lastCurrentTime = 0
                        }
                    }, {
                        key: "onManifestLoading",
                        value: function() {
                            x.logger.log("trigger BUFFER_RESET"),
                            this.hls.trigger(p.default.BUFFER_RESET),
                            this._bufferedFrags = [],
                            this.stalled = !1,
                            this.startPosition = this.lastCurrentTime = 0
                        }
                    }, {
                        key: "onManifestParsed",
                        value: function(a) {
                            var b, c = !1, d = !1;
                            a.levels.forEach(function(a) {
                                b = a.audioCodec,
                                b && (b.indexOf("mp4a.40.2") !== -1 && (c = !0),
                                b.indexOf("mp4a.40.5") !== -1 && (d = !0))
                            }),
                            this.audioCodecSwitch = c && d,
                            this.audioCodecSwitch && x.logger.log("both AAC/HE-AAC audio found in levels; declaring level codec as HE-AAC"),
                            this.levels = a.levels,
                            this.startLevelLoaded = !1,
                            this.startFragRequested = !1;
                            var e = this.config;
                            (e.autoStartLoad || this.forceStartLoad) && this.hls.startLoad(e.startPosition)
                        }
                    }, {
                        key: "onLevelLoaded",
                        value: function(a) {
                            var b = a.details
                              , c = a.level
                              , d = this.levels[c]
                              , e = b.totalduration
                              , f = 0;
                            if (x.logger.log("level " + c + " loaded [" + b.startSN + "," + b.endSN + "],duration:" + e),
                            this.levelLastLoaded = c,
                            b.live) {
                                var g = d.details;
                                g && b.fragments.length > 0 ? (t.default.mergeDetails(g, b),
                                f = b.fragments[0].start,
                                this.liveSyncPosition = this.computeLivePosition(f, g),
                                b.PTSKnown ? x.logger.log("live playlist sliding:" + f.toFixed(3)) : x.logger.log("live playlist - outdated PTS, unknown sliding")) : (b.PTSKnown = !1,
                                x.logger.log("live playlist - first load, unknown sliding"))
                            } else
                                b.PTSKnown = !1;
                            if (d.details = b,
                            this.hls.trigger(p.default.LEVEL_UPDATED, {
                                details: b,
                                level: c
                            }),
                            this.startFragRequested === !1) {
                                if (this.startPosition === -1 || this.lastCurrentTime === -1) {
                                    var h = b.startTimeOffset;
                                    isNaN(h) ? b.live ? (this.startPosition = this.computeLivePosition(f, b),
                                    x.logger.log("configure startPosition to " + this.startPosition)) : this.startPosition = 0 : (h < 0 && (x.logger.log("negative start time offset " + h + ", count from end of last fragment"),
                                    h = f + e + h),
                                    x.logger.log("start time offset found in playlist, adjust startPosition to " + h),
                                    this.startPosition = h),
                                    this.lastCurrentTime = this.startPosition
                                }
                                this.nextLoadPosition = this.startPosition
                            }
                            this.state === y.WAITING_LEVEL && (this.state = y.IDLE),
                            this.tick()
                        }
                    }, {
                        key: "onKeyLoaded",
                        value: function() {
                            this.state === y.KEY_LOADING && (this.state = y.IDLE,
                            this.tick())
                        }
                    }, {
                        key: "onFragLoaded",
                        value: function(a) {
                            var b = this.fragCurrent
                              , c = a.frag;
                            if (this.state === y.FRAG_LOADING && b && "main" === c.type && c.level === b.level && c.sn === b.sn) {
                                var d = a.stats
                                  , e = this.levels[b.level]
                                  , f = e.details;
                                if (x.logger.log("Loaded  " + b.sn + " of [" + f.startSN + " ," + f.endSN + "],level " + b.level),
                                this.bitrateTest = !1,
                                this.stats = d,
                                c.bitrateTest === !0 && this.hls.nextLoadLevel)
                                    this.state = y.IDLE,
                                    this.startFragRequested = !1,
                                    d.tparsed = d.tbuffered = performance.now(),
                                    this.hls.trigger(p.default.FRAG_BUFFERED, {
                                        stats: d,
                                        frag: b,
                                        id: "main"
                                    }),
                                    this.tick();
                                else if ("initSegment" === c.sn)
                                    this.state = y.IDLE,
                                    d.tparsed = d.tbuffered = performance.now(),
                                    f.initSegment.data = a.payload,
                                    this.hls.trigger(p.default.FRAG_BUFFERED, {
                                        stats: d,
                                        frag: b,
                                        id: "main"
                                    }),
                                    this.tick();
                                else {
                                    this.state = y.PARSING;
                                    var g = f.totalduration
                                      , h = b.level
                                      , i = b.sn
                                      , j = this.config.defaultAudioCodec || e.audioCodec;
                                    this.audioCodecSwap && (x.logger.log("swapping playlist audio codec"),
                                    void 0 === j && (j = this.lastAudioCodec),
                                    j && (j = j.indexOf("mp4a.40.5") !== -1 ? "mp4a.40.2" : "mp4a.40.5")),
                                    this.pendingBuffering = !0,
                                    this.appended = !1,
                                    x.logger.log("Parsing " + i + " of [" + f.startSN + " ," + f.endSN + "],level " + h + ", cc " + b.cc);
                                    var k = this.demuxer;
                                    k || (k = this.demuxer = new n.default(this.hls,"main"));
                                    var l = this.media
                                      , m = l && l.seeking
                                      , o = !m && (f.PTSKnown || !f.live)
                                      , q = f.initSegment ? f.initSegment.data : [];
                                    k.push(a.payload, q, j, e.videoCodec, b, g, o, void 0)
                                }
                            }
                            this.fragLoadError = 0
                        }
                    }, {
                        key: "onFragParsingInitSegment",
                        value: function(a) {
                            var b = this.fragCurrent
                              , c = a.frag;
                            if (b && "main" === a.id && c.sn === b.sn && c.level === b.level && this.state === y.PARSING) {
                                var d, e, f = a.tracks;
                                if (f.audio && this.altAudio && delete f.audio,
                                e = f.audio) {
                                    var g = this.levels[this.level].audioCodec
                                      , h = navigator.userAgent.toLowerCase();
                                    g && this.audioCodecSwap && (x.logger.log("swapping playlist audio codec"),
                                    g = g.indexOf("mp4a.40.5") !== -1 ? "mp4a.40.2" : "mp4a.40.5"),
                                    this.audioCodecSwitch && 1 !== e.metadata.channelCount && h.indexOf("firefox") === -1 && (g = "mp4a.40.5"),
                                    h.indexOf("android") !== -1 && "audio/mpeg" !== e.container && (g = "mp4a.40.2",
                                    x.logger.log("Android: force audio codec to " + g)),
                                    e.levelCodec = g,
                                    e.id = a.id
                                }
                                e = f.video,
                                e && (e.levelCodec = this.levels[this.level].videoCodec,
                                e.id = a.id),
                                this.hls.trigger(p.default.BUFFER_CODECS, f);
                                for (d in f) {
                                    e = f[d],
                                    x.logger.log("main track:" + d + ",container:" + e.container + ",codecs[level/parsed]=[" + e.levelCodec + "/" + e.codec + "]");
                                    var i = e.initSegment;
                                    i && (this.appended = !0,
                                    this.pendingBuffering = !0,
                                    this.hls.trigger(p.default.BUFFER_APPENDING, {
                                        type: d,
                                        data: i,
                                        parent: "main",
                                        content: "initSegment"
                                    }))
                                }
                                this.tick()
                            }
                        }
                    }, {
                        key: "onFragParsingData",
                        value: function(a) {
                            var b = this
                              , c = this.fragCurrent
                              , d = a.frag;
                            if (c && "main" === a.id && d.sn === c.sn && d.level === c.level && ("audio" !== a.type || !this.altAudio) && this.state === y.PARSING) {
                                var e = this.levels[this.level]
                                  , f = c;
                                if (isNaN(a.endPTS) && (a.endPTS = a.startPTS + c.duration,
                                a.endDTS = a.startDTS + c.duration),
                                x.logger.log("Parsed " + a.type + ",PTS:[" + a.startPTS.toFixed(3) + "," + a.endPTS.toFixed(3) + "],DTS:[" + a.startDTS.toFixed(3) + "/" + a.endDTS.toFixed(3) + "],nb:" + a.nb + ",dropped:" + (a.dropped || 0)),
                                "video" === a.type)
                                    if (f.dropped = a.dropped,
                                    f.dropped) {
                                        if (!f.backtracked)
                                            return f.backtracked = !0,
                                            this.nextLoadPosition = a.startPTS,
                                            this.state = y.IDLE,
                                            void this.tick();
                                        x.logger.warn("Already backtracked on this fragment, appending with the gap")
                                    } else
                                        f.backtracked = !1;
                                var g = t.default.updateFragPTSDTS(e.details, f.sn, a.startPTS, a.endPTS, a.startDTS, a.endDTS)
                                  , h = this.hls;
                                h.trigger(p.default.LEVEL_PTS_UPDATED, {
                                    details: e.details,
                                    level: this.level,
                                    drift: g,
                                    type: a.type,
                                    start: a.startPTS,
                                    end: a.endPTS
                                }),
                                [a.data1, a.data2].forEach(function(c) {
                                    c && c.length && b.state === y.PARSING && (b.appended = !0,
                                    b.pendingBuffering = !0,
                                    h.trigger(p.default.BUFFER_APPENDING, {
                                        type: a.type,
                                        data: c,
                                        parent: "main",
                                        content: "data"
                                    }))
                                }),
                                this.tick()
                            }
                        }
                    }, {
                        key: "onFragParsed",
                        value: function(a) {
                            var b = this.fragCurrent
                              , c = a.frag;
                            b && "main" === a.id && c.sn === b.sn && c.level === b.level && this.state === y.PARSING && (this.stats.tparsed = performance.now(),
                            this.state = y.PARSED,
                            this._checkAppendedParsed())
                        }
                    }, {
                        key: "onAudioTrackSwitching",
                        value: function(a) {
                            var b = !!a.url
                              , c = a.id;
                            if (!b) {
                                if (this.mediaBuffer !== this.media) {
                                    x.logger.log("switching on main audio, use media.buffered to schedule main fragment loading"),
                                    this.mediaBuffer = this.media;
                                    var d = this.fragCurrent;
                                    d.loader && (x.logger.log("switching to main audio track, cancel main fragment load"),
                                    d.loader.abort()),
                                    this.fragCurrent = null,
                                    this.fragPrevious = null,
                                    this.demuxer && (this.demuxer.destroy(),
                                    this.demuxer = null),
                                    this.state = y.IDLE
                                }
                                var e = this.hls;
                                e.trigger(p.default.BUFFER_FLUSHING, {
                                    startOffset: 0,
                                    endOffset: Number.POSITIVE_INFINITY,
                                    type: "audio"
                                }),
                                e.trigger(p.default.AUDIO_TRACK_SWITCHED, {
                                    id: c
                                }),
                                this.altAudio = !1
                            }
                        }
                    }, {
                        key: "onAudioTrackSwitched",
                        value: function(a) {
                            var b = a.id
                              , c = !!this.hls.audioTracks[b].url;
                            if (c) {
                                var d = this.videoBuffer;
                                d && this.mediaBuffer !== d && (x.logger.log("switching on alternate audio, use video.buffered to schedule main fragment loading"),
                                this.mediaBuffer = d)
                            }
                            this.altAudio = c,
                            this.tick()
                        }
                    }, {
                        key: "onBufferCreated",
                        value: function(a) {
                            var b = a.tracks
                              , c = void 0
                              , d = void 0
                              , e = !1;
                            for (var f in b) {
                                var g = b[f];
                                "main" === g.id ? (d = f,
                                c = g,
                                "video" === f && (this.videoBuffer = b[f].buffer)) : e = !0
                            }
                            e && c ? (x.logger.log("alternate track found, use " + d + ".buffered to schedule main fragment loading"),
                            this.mediaBuffer = c.buffer) : this.mediaBuffer = this.media
                        }
                    }, {
                        key: "onBufferAppended",
                        value: function(a) {
                            if ("main" === a.parent) {
                                var b = this.state;
                                b !== y.PARSING && b !== y.PARSED || (this.pendingBuffering = a.pending > 0,
                                this._checkAppendedParsed())
                            }
                        }
                    }, {
                        key: "_checkAppendedParsed",
                        value: function() {
                            if (!(this.state !== y.PARSED || this.appended && this.pendingBuffering)) {
                                var a = this.fragCurrent;
                                if (a) {
                                    var b = this.mediaBuffer ? this.mediaBuffer : this.media;
                                    x.logger.log("main buffered : " + v.default.toString(b.buffered));
                                    var c = this._bufferedFrags.filter(function(a) {
                                        return l.default.isBuffered(b, (a.startPTS + a.endPTS) / 2)
                                    });
                                    c.push(a),
                                    this._bufferedFrags = c.sort(function(a, b) {
                                        return a.startPTS - b.startPTS
                                    }),
                                    this.fragPrevious = a;
                                    var d = this.stats;
                                    d.tbuffered = performance.now(),
                                    this.fragLastKbps = Math.round(8 * d.total / (d.tbuffered - d.tfirst)),
                                    this.hls.trigger(p.default.FRAG_BUFFERED, {
                                        stats: d,
                                        frag: a,
                                        id: "main"
                                    }),
                                    this.state = y.IDLE
                                }
                                this.tick()
                            }
                        }
                    }, {
                        key: "onError",
                        value: function(a) {
                            var b = a.frag || this.fragCurrent;
                            if (!b || "main" === b.type) {
                                var c = this.media
                                  , d = c && l.default.isBuffered(c, c.currentTime) && l.default.isBuffered(c, c.currentTime + .5);
                                switch (a.details) {
                                case w.ErrorDetails.FRAG_LOAD_ERROR:
                                case w.ErrorDetails.FRAG_LOAD_TIMEOUT:
                                case w.ErrorDetails.KEY_LOAD_ERROR:
                                case w.ErrorDetails.KEY_LOAD_TIMEOUT:
                                    if (!a.fatal) {
                                        var e = this.fragLoadError;
                                        e ? e++ : e = 1;
                                        var f = this.config;
                                        if (e <= f.fragLoadingMaxRetry || d || b.autoLevel && b.level) {
                                            this.fragLoadError = e,
                                            b.loadCounter = 0;
                                            var g = Math.min(Math.pow(2, e - 1) * f.fragLoadingRetryDelay, f.fragLoadingMaxRetryTimeout);
                                            x.logger.warn("mediaController: frag loading failed, retry in " + g + " ms"),
                                            this.retryDate = performance.now() + g,
                                            this.loadedmetadata || (this.startFragRequested = !1,
                                            this.nextLoadPosition = this.startPosition),
                                            this.state = y.FRAG_LOADING_WAITING_RETRY
                                        } else
                                            x.logger.error("mediaController: " + a.details + " reaches max retry, redispatch as fatal ..."),
                                            a.fatal = !0,
                                            this.state = y.ERROR
                                    }
                                    break;
                                case w.ErrorDetails.FRAG_LOOP_LOADING_ERROR:
                                    a.fatal || (d ? (this._reduceMaxBufferLength(b.duration),
                                    this.state = y.IDLE) : b.autoLevel && 0 !== b.level || (a.fatal = !0,
                                    this.state = y.ERROR));
                                    break;
                                case w.ErrorDetails.LEVEL_LOAD_ERROR:
                                case w.ErrorDetails.LEVEL_LOAD_TIMEOUT:
                                    this.state !== y.ERROR && (a.fatal ? (this.state = y.ERROR,
                                    x.logger.warn("streamController: " + a.details + ",switch to " + this.state + " state ...")) : this.state === y.WAITING_LEVEL && (this.state = y.IDLE));
                                    break;
                                case w.ErrorDetails.BUFFER_FULL_ERROR:
                                    "main" !== a.parent || this.state !== y.PARSING && this.state !== y.PARSED || (d ? (this._reduceMaxBufferLength(this.config.maxBufferLength),
                                    this.state = y.IDLE) : (x.logger.warn("buffer full error also media.currentTime is not buffered, flush everything"),
                                    this.fragCurrent = null,
                                    this.flushMainBuffer(0, Number.POSITIVE_INFINITY)))
                                }
                            }
                        }
                    }, {
                        key: "_reduceMaxBufferLength",
                        value: function(a) {
                            var b = this.config;
                            b.maxMaxBufferLength >= a && (b.maxMaxBufferLength /= 2,
                            x.logger.warn("main:reduce max buffer length to " + b.maxMaxBufferLength + "s"),
                            this.fragLoadIdx += 2 * b.fragLoadingLoopThreshold)
                        }
                    }, {
                        key: "_checkBuffer",
                        value: function() {
                            var a = this.media;
                            if (a && a.readyState) {
                                var b = a.currentTime
                                  , c = this.mediaBuffer ? this.mediaBuffer : a
                                  , d = c.buffered;
                                if (!this.loadedmetadata && d.length) {
                                    this.loadedmetadata = !0;
                                    var e = a.seeking ? b : this.startPosition
                                      , f = l.default.isBuffered(c, e);
                                    b === e && f || (x.logger.log("target start position:" + e),
                                    f || (e = d.start(0),
                                    x.logger.log("target start position not buffered, seek to buffered.start(0) " + e)),
                                    x.logger.log("adjust currentTime from " + b + " to " + e),
                                    a.currentTime = e)
                                } else if (this.immediateSwitch)
                                    this.immediateLevelSwitchEnd();
                                else {
                                    var g = l.default.bufferInfo(a, b, 0)
                                      , h = !(a.paused || a.ended || 0 === a.buffered.length)
                                      , i = .5
                                      , j = b !== this.lastCurrentTime
                                      , k = this.config;
                                    if (j)
                                        this.stallReported && (x.logger.warn("playback not stuck anymore @" + b + ", after " + Math.round(performance.now() - this.stalled) + "ms"),
                                        this.stallReported = !1),
                                        this.stalled = void 0,
                                        this.nudgeRetry = 0;
                                    else if (h) {
                                        var m = performance.now()
                                          , n = this.hls;
                                        if (this.stalled) {
                                            var o = m - this.stalled
                                              , q = g.len
                                              , r = this.nudgeRetry || 0;
                                            if (q <= i && o > 1e3 * k.lowBufferWatchdogPeriod) {
                                                this.stallReported || (this.stallReported = !0,
                                                x.logger.warn("playback stalling in low buffer @" + b),
                                                n.trigger(p.default.ERROR, {
                                                    type: w.ErrorTypes.MEDIA_ERROR,
                                                    details: w.ErrorDetails.BUFFER_STALLED_ERROR,
                                                    fatal: !1,
                                                    buffer: q
                                                }));
                                                var s = g.nextStart
                                                  , t = s - b;
                                                if (s && t < k.maxSeekHole && t > 0) {
                                                    this.nudgeRetry = ++r;
                                                    var u = r * k.nudgeOffset;
                                                    x.logger.log("adjust currentTime from " + a.currentTime + " to next buffered @ " + s + " + nudge " + u),
                                                    a.currentTime = s + u,
                                                    this.stalled = void 0,
                                                    n.trigger(p.default.ERROR, {
                                                        type: w.ErrorTypes.MEDIA_ERROR,
                                                        details: w.ErrorDetails.BUFFER_SEEK_OVER_HOLE,
                                                        fatal: !1,
                                                        hole: s + u - b
                                                    })
                                                }
                                            } else if (q > i && o > 1e3 * k.highBufferWatchdogPeriod)
                                                if (this.stallReported || (this.stallReported = !0,
                                                x.logger.warn("playback stalling in high buffer @" + b),
                                                n.trigger(p.default.ERROR, {
                                                    type: w.ErrorTypes.MEDIA_ERROR,
                                                    details: w.ErrorDetails.BUFFER_STALLED_ERROR,
                                                    fatal: !1,
                                                    buffer: q
                                                })),
                                                this.stalled = void 0,
                                                this.nudgeRetry = ++r,
                                                r < k.nudgeMaxRetry) {
                                                    var v = a.currentTime
                                                      , y = v + r * k.nudgeOffset;
                                                    x.logger.log("adjust currentTime from " + v + " to " + y),
                                                    a.currentTime = y,
                                                    n.trigger(p.default.ERROR, {
                                                        type: w.ErrorTypes.MEDIA_ERROR,
                                                        details: w.ErrorDetails.BUFFER_NUDGE_ON_STALL,
                                                        fatal: !1
                                                    })
                                                } else
                                                    x.logger.error("still stuck in high buffer @" + b + " after " + k.nudgeMaxRetry + ", raise fatal error"),
                                                    n.trigger(p.default.ERROR, {
                                                        type: w.ErrorTypes.MEDIA_ERROR,
                                                        details: w.ErrorDetails.BUFFER_STALLED_ERROR,
                                                        fatal: !0
                                                    })
                                        } else
                                            this.stalled = m,
                                            this.stallReported = !1
                                    }
                                }
                            }
                        }
                    }, {
                        key: "onFragLoadEmergencyAborted",
                        value: function() {
                            this.state = y.IDLE,
                            this.loadedmetadata || (this.startFragRequested = !1,
                            this.nextLoadPosition = this.startPosition),
                            this.tick()
                        }
                    }, {
                        key: "onBufferFlushed",
                        value: function() {
                            var a = this.mediaBuffer ? this.mediaBuffer : this.media;
                            this._bufferedFrags = this._bufferedFrags.filter(function(b) {
                                return l.default.isBuffered(a, (b.startPTS + b.endPTS) / 2)
                            }),
                            this.fragLoadIdx += 2 * this.config.fragLoadingLoopThreshold,
                            this.state = y.IDLE,
                            this.fragPrevious = null
                        }
                    }, {
                        key: "swapAudioCodec",
                        value: function() {
                            this.audioCodecSwap = !this.audioCodecSwap
                        }
                    }, {
                        key: "computeLivePosition",
                        value: function(a, b) {
                            var c = void 0 !== this.config.liveSyncDuration ? this.config.liveSyncDuration : this.config.liveSyncDurationCount * b.targetduration;
                            return a + Math.max(0, b.totalduration - c)
                        }
                    }, {
                        key: "state",
                        set: function(a) {
                            if (this.state !== a) {
                                var b = this.state;
                                this._state = a,
                                x.logger.log("main stream:" + b + "->" + a),
                                this.hls.trigger(p.default.STREAM_STATE_TRANSITION, {
                                    previousState: b,
                                    nextState: a
                                })
                            }
                        },
                        get: function() {
                            return this._state
                        }
                    }, {
                        key: "currentLevel",
                        get: function() {
                            var a = this.media;
                            if (a) {
                                var b = this.getBufferedFrag(a.currentTime);
                                if (b)
                                    return b.level
                            }
                            return -1
                        }
                    }, {
                        key: "nextBufferedFrag",
                        get: function() {
                            var a = this.media;
                            return a ? this.followingBufferedFrag(this.getBufferedFrag(a.currentTime)) : null
                        }
                    }, {
                        key: "nextLevel",
                        get: function() {
                            var a = this.nextBufferedFrag;
                            return a ? a.level : -1
                        }
                    }, {
                        key: "liveSyncPosition",
                        get: function() {
                            return this._liveSyncPosition
                        },
                        set: function(a) {
                            this._liveSyncPosition = a
                        }
                    }]),
                    b
                }(r.default);
                c.default = z
            }
            , {
                24: 24,
                30: 30,
                31: 31,
                32: 32,
                34: 34,
                35: 35,
                45: 45,
                50: 50,
                51: 51
            }],
            13: [function(a, b, c) {
                "use strict";
                function d(a) {
                    return a && a.__esModule ? a : {
                        default: a
                    }
                }
                function e(a, b) {
                    if (!(a instanceof b))
                        throw new TypeError("Cannot call a class as a function")
                }
                function f(a, b) {
                    if (!a)
                        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
                    return !b || "object" != typeof b && "function" != typeof b ? a : b
                }
                function g(a, b) {
                    if ("function" != typeof b && null !== b)
                        throw new TypeError("Super expression must either be null or a function, not " + typeof b);
                    a.prototype = Object.create(b && b.prototype, {
                        constructor: {
                            value: a,
                            enumerable: !1,
                            writable: !0,
                            configurable: !0
                        }
                    }),
                    b && (Object.setPrototypeOf ? Object.setPrototypeOf(a, b) : a.__proto__ = b)
                }
                Object.defineProperty(c, "__esModule", {
                    value: !0
                });
                var h = function() {
                    function a(a, b) {
                        for (var c = 0; c < b.length; c++) {
                            var d = b[c];
                            d.enumerable = d.enumerable || !1,
                            d.configurable = !0,
                            "value"in d && (d.writable = !0),
                            Object.defineProperty(a, d.key, d)
                        }
                    }
                    return function(b, c, d) {
                        return c && a(b.prototype, c),
                        d && a(b, d),
                        b
                    }
                }()
                  , i = a(32)
                  , j = d(i)
                  , k = a(31)
                  , l = d(k)
                  , m = a(50)
                  , n = function(a) {
                    function b(a) {
                        e(this, b);
                        var c = f(this, (b.__proto__ || Object.getPrototypeOf(b)).call(this, a, j.default.ERROR, j.default.SUBTITLE_TRACKS_UPDATED, j.default.SUBTITLE_TRACK_SWITCH, j.default.SUBTITLE_TRACK_LOADED, j.default.SUBTITLE_FRAG_PROCESSED));
                        return c.config = a.config,
                        c.vttFragSNsProcessed = {},
                        c.vttFragQueues = void 0,
                        c.currentlyProcessing = null,
                        c.currentTrackId = -1,
                        c
                    }
                    return g(b, a),
                    h(b, [{
                        key: "destroy",
                        value: function() {
                            l.default.prototype.destroy.call(this)
                        }
                    }, {
                        key: "clearVttFragQueues",
                        value: function() {
                            var a = this;
                            this.vttFragQueues = {},
                            this.tracks.forEach(function(b) {
                                a.vttFragQueues[b.id] = []
                            })
                        }
                    }, {
                        key: "nextFrag",
                        value: function() {
                            if (null === this.currentlyProcessing && this.currentTrackId > -1 && this.vttFragQueues[this.currentTrackId].length) {
                                var a = this.currentlyProcessing = this.vttFragQueues[this.currentTrackId].shift();
                                this.hls.trigger(j.default.FRAG_LOADING, {
                                    frag: a
                                })
                            }
                        }
                    }, {
                        key: "onSubtitleFragProcessed",
                        value: function(a) {
                            a.success && this.vttFragSNsProcessed[a.frag.trackId].push(a.frag.sn),
                            this.currentlyProcessing = null,
                            this.nextFrag()
                        }
                    }, {
                        key: "onError",
                        value: function(a) {
                            var b = a.frag;
                            b && "subtitle" !== b.type || this.currentlyProcessing && (this.currentlyProcessing = null,
                            this.nextFrag())
                        }
                    }, {
                        key: "onSubtitleTracksUpdated",
                        value: function(a) {
                            var b = this;
                            m.logger.log("subtitle tracks updated"),
                            this.tracks = a.subtitleTracks,
                            this.clearVttFragQueues(),
                            this.vttFragSNsProcessed = {},
                            this.tracks.forEach(function(a) {
                                b.vttFragSNsProcessed[a.id] = []
                            })
                        }
                    }, {
                        key: "onSubtitleTrackSwitch",
                        value: function(a) {
                            this.currentTrackId = a.id,
                            this.clearVttFragQueues()
                        }
                    }, {
                        key: "onSubtitleTrackLoaded",
                        value: function(a) {
                            var b = this.vttFragSNsProcessed[a.id]
                              , c = this.vttFragQueues[a.id]
                              , d = this.currentlyProcessing ? this.currentlyProcessing.sn : -1
                              , e = function(a) {
                                return b.indexOf(a.sn) > -1
                            }
                              , f = function(a) {
                                return c.some(function(b) {
                                    return b.sn === a.sn
                                })
                            };
                            a.details.fragments.forEach(function(b) {
                                e(b) || b.sn === d || f(b) || (b.trackId = a.id,
                                c.push(b))
                            }),
                            this.nextFrag()
                        }
                    }]),
                    b
                }(l.default);
                c.default = n
            }
            , {
                31: 31,
                32: 32,
                50: 50
            }],
            14: [function(a, b, c) {
                "use strict";
                function d(a) {
                    return a && a.__esModule ? a : {
                        default: a
                    }
                }
                function e(a, b) {
                    if (!(a instanceof b))
                        throw new TypeError("Cannot call a class as a function")
                }
                function f(a, b) {
                    if (!a)
                        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
                    return !b || "object" != typeof b && "function" != typeof b ? a : b
                }
                function g(a, b) {
                    if ("function" != typeof b && null !== b)
                        throw new TypeError("Super expression must either be null or a function, not " + typeof b);
                    a.prototype = Object.create(b && b.prototype, {
                        constructor: {
                            value: a,
                            enumerable: !1,
                            writable: !0,
                            configurable: !0
                        }
                    }),
                    b && (Object.setPrototypeOf ? Object.setPrototypeOf(a, b) : a.__proto__ = b)
                }
                Object.defineProperty(c, "__esModule", {
                    value: !0
                });
                var h = function() {
                    function a(a, b) {
                        for (var c = 0; c < b.length; c++) {
                            var d = b[c];
                            d.enumerable = d.enumerable || !1,
                            d.configurable = !0,
                            "value"in d && (d.writable = !0),
                            Object.defineProperty(a, d.key, d)
                        }
                    }
                    return function(b, c, d) {
                        return c && a(b.prototype, c),
                        d && a(b, d),
                        b
                    }
                }()
                  , i = a(32)
                  , j = d(i)
                  , k = a(31)
                  , l = d(k)
                  , m = a(50)
                  , n = function(a) {
                    function b(a) {
                        e(this, b);
                        var c = f(this, (b.__proto__ || Object.getPrototypeOf(b)).call(this, a, j.default.MEDIA_ATTACHED, j.default.MEDIA_DETACHING, j.default.MANIFEST_LOADING, j.default.MANIFEST_LOADED, j.default.SUBTITLE_TRACK_LOADED));
                        return c.tracks = [],
                        c.trackId = -1,
                        c.media = void 0,
                        c
                    }
                    return g(b, a),
                    h(b, [{
                        key: "destroy",
                        value: function() {
                            l.default.prototype.destroy.call(this)
                        }
                    }, {
                        key: "onMediaAttached",
                        value: function(a) {
                            var b = this;
                            this.media = a.media,
                            this.media && this.media.textTracks.addEventListener("change", function() {
                                if (b.media) {
                                    for (var a = -1, c = b.media.textTracks, d = 0; d < c.length; d++)
                                        "showing" === c[d].mode && (a = d);
                                    b.subtitleTrack = a
                                }
                            })
                        }
                    }, {
                        key: "onMediaDetaching",
                        value: function() {
                            this.media = void 0
                        }
                    }, {
                        key: "onManifestLoading",
                        value: function() {
                            this.tracks = [],
                            this.trackId = -1
                        }
                    }, {
                        key: "onManifestLoaded",
                        value: function(a) {
                            var b = this
                              , c = a.subtitles || []
                              , d = !1;
                            this.tracks = c,
                            this.trackId = -1,
                            this.hls.trigger(j.default.SUBTITLE_TRACKS_UPDATED, {
                                subtitleTracks: c
                            }),
                            c.forEach(function(a) {
                                a.default && (b.subtitleTrack = a.id,
                                d = !0)
                            })
                        }
                    }, {
                        key: "onTick",
                        value: function() {
                            var a = this.trackId
                              , b = this.tracks[a];
                            if (b) {
                                var c = b.details;
                                void 0 !== c && c.live !== !0 || (m.logger.log("(re)loading playlist for subtitle track " + a),
                                this.hls.trigger(j.default.SUBTITLE_TRACK_LOADING, {
                                    url: b.url,
                                    id: a
                                }))
                            }
                        }
                    }, {
                        key: "onSubtitleTrackLoaded",
                        value: function(a) {
                            var b = this;
                            a.id < this.tracks.length && (m.logger.log("subtitle track " + a.id + " loaded"),
                            this.tracks[a.id].details = a.details,
                            a.details.live && !this.timer && (this.timer = setInterval(function() {
                                b.onTick()
                            }, 1e3 * a.details.targetduration, this)),
                            !a.details.live && this.timer && (clearInterval(this.timer),
                            this.timer = null))
                        }
                    }, {
                        key: "setSubtitleTrackInternal",
                        value: function(a) {
                            if (a >= 0 && a < this.tracks.length) {
                                this.timer && (clearInterval(this.timer),
                                this.timer = null),
                                this.trackId = a,
                                m.logger.log("switching to subtitle track " + a);
                                var b = this.tracks[a];
                                this.hls.trigger(j.default.SUBTITLE_TRACK_SWITCH, {
                                    id: a
                                });
                                var c = b.details;
                                void 0 !== c && c.live !== !0 || (m.logger.log("(re)loading playlist for subtitle track " + a),
                                this.hls.trigger(j.default.SUBTITLE_TRACK_LOADING, {
                                    url: b.url,
                                    id: a
                                }))
                            }
                        }
                    }, {
                        key: "subtitleTracks",
                        get: function() {
                            return this.tracks
                        }
                    }, {
                        key: "subtitleTrack",
                        get: function() {
                            return this.trackId
                        },
                        set: function(a) {
                            this.trackId !== a && this.setSubtitleTrackInternal(a)
                        }
                    }]),
                    b
                }(l.default);
                c.default = n
            }
            , {
                31: 31,
                32: 32,
                50: 50
            }],
            15: [function(a, b, c) {
                "use strict";
                function d(a) {
                    return a && a.__esModule ? a : {
                        default: a
                    }
                }
                function e(a, b) {
                    if (!(a instanceof b))
                        throw new TypeError("Cannot call a class as a function")
                }
                function f(a, b) {
                    if (!a)
                        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
                    return !b || "object" != typeof b && "function" != typeof b ? a : b
                }
                function g(a, b) {
                    if ("function" != typeof b && null !== b)
                        throw new TypeError("Super expression must either be null or a function, not " + typeof b);
                    a.prototype = Object.create(b && b.prototype, {
                        constructor: {
                            value: a,
                            enumerable: !1,
                            writable: !0,
                            configurable: !0
                        }
                    }),
                    b && (Object.setPrototypeOf ? Object.setPrototypeOf(a, b) : a.__proto__ = b)
                }
                function h(a) {
                    if (a && a.cues)
                        for (; a.cues.length > 0; )
                            a.removeCue(a.cues[0])
                }
                function i(a, b) {
                    return a && a.label === b.name && !(a.textTrack1 || a.textTrack2)
                }
                function j(a, b, c, d) {
                    return Math.min(b, d) - Math.max(a, c)
                }
                Object.defineProperty(c, "__esModule", {
                    value: !0
                });
                var k = function() {
                    function a(a, b) {
                        for (var c = 0; c < b.length; c++) {
                            var d = b[c];
                            d.enumerable = d.enumerable || !1,
                            d.configurable = !0,
                            "value"in d && (d.writable = !0),
                            Object.defineProperty(a, d.key, d)
                        }
                    }
                    return function(b, c, d) {
                        return c && a(b.prototype, c),
                        d && a(b, d),
                        b
                    }
                }()
                  , l = a(32)
                  , m = d(l)
                  , n = a(31)
                  , o = d(n)
                  , p = a(46)
                  , q = d(p)
                  , r = a(54)
                  , s = d(r)
                  , t = a(50)
                  , u = function(a) {
                    function b(a) {
                        e(this, b);
                        var c = f(this, (b.__proto__ || Object.getPrototypeOf(b)).call(this, a, m.default.MEDIA_ATTACHING, m.default.MEDIA_DETACHING, m.default.FRAG_PARSING_USERDATA, m.default.MANIFEST_LOADING, m.default.MANIFEST_LOADED, m.default.FRAG_LOADED, m.default.LEVEL_SWITCHING, m.default.INIT_PTS_FOUND));
                        if (c.hls = a,
                        c.config = a.config,
                        c.enabled = !0,
                        c.Cues = a.config.cueHandler,
                        c.textTracks = [],
                        c.tracks = [],
                        c.unparsedVttFrags = [],
                        c.initPTS = void 0,
                        c.cueRanges = [],
                        c.config.enableCEA708Captions) {
                            var d = c
                              , g = function(a, b) {
                                var c = null;
                                try {
                                    c = new window.Event("addtrack")
                                } catch (a) {
                                    c = document.createEvent("Event"),
                                    c.initEvent("addtrack", !1, !1)
                                }
                                c.track = a,
                                b.dispatchEvent(c)
                            }
                              , i = {
                                newCue: function(a, b, c) {
                                    if (!d.textTrack1) {
                                        var e = d.getExistingTrack("1");
                                        if (e)
                                            d.textTrack1 = e,
                                            h(d.textTrack1),
                                            g(d.textTrack1, d.media);
                                        else {
                                            var f = d.createTextTrack("captions", d.config.captionsTextTrack1Label, d.config.captionsTextTrack1LanguageCode);
                                            f && (f.textTrack1 = !0,
                                            d.textTrack1 = f)
                                        }
                                    }
                                    d.addCues("textTrack1", a, b, c)
                                }
                            }
                              , j = {
                                newCue: function(a, b, c) {
                                    if (!d.textTrack2) {
                                        var e = d.getExistingTrack("2");
                                        if (e)
                                            d.textTrack2 = e,
                                            h(d.textTrack2),
                                            g(d.textTrack2, d.media);
                                        else {
                                            var f = d.createTextTrack("captions", d.config.captionsTextTrack2Label, d.config.captionsTextTrack1LanguageCode);
                                            f && (f.textTrack2 = !0,
                                            d.textTrack2 = f)
                                        }
                                    }
                                    d.addCues("textTrack2", a, b, c)
                                }
                            };
                            c.cea608Parser = new q.default(0,i,j)
                        }
                        return c
                    }
                    return g(b, a),
                    k(b, [{
                        key: "addCues",
                        value: function(a, b, c, d) {
                            for (var e = this.cueRanges, f = !1, g = e.length; g--; ) {
                                var h = e[g]
                                  , i = j(h[0], h[1], b, c);
                                if (i >= 0 && (h[0] = Math.min(h[0], b),
                                h[1] = Math.max(h[1], c),
                                f = !0,
                                i / (c - b) > .5))
                                    return
                            }
                            f || e.push([b, c]),
                            this.Cues.newCue(this[a], b, c, d)
                        }
                    }, {
                        key: "onInitPtsFound",
                        value: function(a) {
                            var b = this;
                            "undefined" == typeof this.initPTS && (this.initPTS = a.initPTS),
                            this.unparsedVttFrags.length && (this.unparsedVttFrags.forEach(function(a) {
                                b.onFragLoaded(a)
                            }),
                            this.unparsedVttFrags = [])
                        }
                    }, {
                        key: "getExistingTrack",
                        value: function(a) {
                            var b = this.media;
                            if (b)
                                for (var c = 0; c < b.textTracks.length; c++) {
                                    var d = b.textTracks[c]
                                      , e = "textTrack" + a;
                                    if (d[e] === !0)
                                        return d
                                }
                            return null
                        }
                    }, {
                        key: "createTextTrack",
                        value: function(a, b, c) {
                            var d = this.media;
                            if (d)
                                return d.addTextTrack(a, b, c)
                        }
                    }, {
                        key: "destroy",
                        value: function() {
                            o.default.prototype.destroy.call(this)
                        }
                    }, {
                        key: "onMediaAttaching",
                        value: function(a) {
                            this.media = a.media
                        }
                    }, {
                        key: "onMediaDetaching",
                        value: function() {
                            h(this.textTrack1),
                            h(this.textTrack2)
                        }
                    }, {
                        key: "onManifestLoading",
                        value: function() {
                            this.lastSn = -1,
                            this.prevCC = -1,
                            this.vttCCs = {
                                ccOffset: 0,
                                presentationOffset: 0
                            };
                            var a = this.media;
                            if (a) {
                                var b = a.textTracks;
                                if (b)
                                    for (var c = 0; c < b.length; c++)
                                        h(b[c])
                            }
                        }
                    }, {
                        key: "onManifestLoaded",
                        value: function(a) {
                            var b = this;
                            if (this.textTracks = [],
                            this.unparsedVttFrags = this.unparsedVttFrags || [],
                            this.initPTS = void 0,
                            this.cueRanges = [],
                            this.config.enableWebVTT) {
                                this.tracks = a.subtitles || [];
                                var c = this.media ? this.media.textTracks : [];
                                this.tracks.forEach(function(a, d) {
                                    var e = void 0;
                                    if (d < c.length) {
                                        var f = c[d];
                                        i(f, a) && (e = f)
                                    }
                                    e || (e = b.createTextTrack("subtitles", a.name, a.lang)),
                                    e.mode = a.default ? "showing" : "hidden",
                                    b.textTracks.push(e)
                                })
                            }
                        }
                    }, {
                        key: "onLevelSwitching",
                        value: function() {
                            this.enabled = "NONE" !== this.hls.currentLevel.closedCaptions
                        }
                    }, {
                        key: "onFragLoaded",
                        value: function(a) {
                            var b = a.frag
                              , c = a.payload;
                            if ("main" === b.type) {
                                var d = b.sn;
                                d !== this.lastSn + 1 && this.cea608Parser.reset(),
                                this.lastSn = d
                            } else if ("subtitle" === b.type)
                                if (c.byteLength) {
                                    if ("undefined" == typeof this.initPTS)
                                        return void this.unparsedVttFrags.push(a);
                                    var e = this.vttCCs;
                                    e[b.cc] || (e[b.cc] = {
                                        start: b.start,
                                        prevCC: this.prevCC,
                                        new: !0
                                    },
                                    this.prevCC = b.cc);
                                    var f = this.textTracks
                                      , g = this.hls;
                                    s.default.parse(c, this.initPTS, e, b.cc, function(a) {
                                        a.forEach(function(a) {
                                            f[b.trackId].addCue(a)
                                        }),
                                        g.trigger(m.default.SUBTITLE_FRAG_PROCESSED, {
                                            success: !0,
                                            frag: b
                                        })
                                    }, function(a) {
                                        t.logger.log("Failed to parse VTT cue: " + a),
                                        g.trigger(m.default.SUBTITLE_FRAG_PROCESSED, {
                                            success: !1,
                                            frag: b
                                        })
                                    })
                                } else
                                    this.hls.trigger(m.default.SUBTITLE_FRAG_PROCESSED, {
                                        success: !1,
                                        frag: b
                                    })
                        }
                    }, {
                        key: "onFragParsingUserdata",
                        value: function(a) {
                            if (this.enabled && this.config.enableCEA708Captions)
                                for (var b = 0; b < a.samples.length; b++) {
                                    var c = this.extractCea608Data(a.samples[b].bytes);
                                    this.cea608Parser.addData(a.samples[b].pts, c)
                                }
                        }
                    }, {
                        key: "extractCea608Data",
                        value: function(a) {
                            for (var b, c, d, e, f, g = 31 & a[0], h = 2, i = [], j = 0; j < g; j++)
                                b = a[h++],
                                c = 127 & a[h++],
                                d = 127 & a[h++],
                                e = 0 !== (4 & b),
                                f = 3 & b,
                                0 === c && 0 === d || e && 0 === f && (i.push(c),
                                i.push(d));
                            return i
                        }
                    }]),
                    b
                }(o.default);
                c.default = u
            }
            , {
                31: 31,
                32: 32,
                46: 46,
                50: 50,
                54: 54
            }],
            16: [function(a, b, c) {
                "use strict";
                function d(a, b) {
                    if (!(a instanceof b))
                        throw new TypeError("Cannot call a class as a function")
                }
                Object.defineProperty(c, "__esModule", {
                    value: !0
                });
                var e = function() {
                    function a(a, b) {
                        for (var c = 0; c < b.length; c++) {
                            var d = b[c];
                            d.enumerable = d.enumerable || !1,
                            d.configurable = !0,
                            "value"in d && (d.writable = !0),
                            Object.defineProperty(a, d.key, d)
                        }
                    }
                    return function(b, c, d) {
                        return c && a(b.prototype, c),
                        d && a(b, d),
                        b
                    }
                }()
                  , f = function() {
                    function a(b, c) {
                        d(this, a),
                        this.subtle = b,
                        this.aesIV = c
                    }
                    return e(a, [{
                        key: "decrypt",
                        value: function(a, b) {
                            return this.subtle.decrypt({
                                name: "AES-CBC",
                                iv: this.aesIV
                            }, b, a)
                        }
                    }]),
                    a
                }();
                c.default = f
            }
            , {}],
            17: [function(a, b, c) {
                "use strict";
                function d(a, b) {
                    if (!(a instanceof b))
                        throw new TypeError("Cannot call a class as a function")
                }
                Object.defineProperty(c, "__esModule", {
                    value: !0
                });
                var e = function() {
                    function a(a, b) {
                        for (var c = 0; c < b.length; c++) {
                            var d = b[c];
                            d.enumerable = d.enumerable || !1,
                            d.configurable = !0,
                            "value"in d && (d.writable = !0),
                            Object.defineProperty(a, d.key, d)
                        }
                    }
                    return function(b, c, d) {
                        return c && a(b.prototype, c),
                        d && a(b, d),
                        b
                    }
                }()
                  , f = function() {
                    function a() {
                        d(this, a),
                        this.rcon = [0, 1, 2, 4, 8, 16, 32, 64, 128, 27, 54],
                        this.subMix = [new Uint32Array(256), new Uint32Array(256), new Uint32Array(256), new Uint32Array(256)],
                        this.invSubMix = [new Uint32Array(256), new Uint32Array(256), new Uint32Array(256), new Uint32Array(256)],
                        this.sBox = new Uint32Array(256),
                        this.invSBox = new Uint32Array(256),
                        this.key = new Uint32Array(0),
                        this.initTable()
                    }
                    return e(a, [{
                        key: "uint8ArrayToUint32Array_",
                        value: function(a) {
                            for (var b = new DataView(a), c = new Uint32Array(4), d = 0; d < 4; d++)
                                c[d] = b.getUint32(4 * d);
                            return c
                        }
                    }, {
                        key: "initTable",
                        value: function() {
                            var a = this.sBox
                              , b = this.invSBox
                              , c = this.subMix
                              , d = c[0]
                              , e = c[1]
                              , f = c[2]
                              , g = c[3]
                              , h = this.invSubMix
                              , i = h[0]
                              , j = h[1]
                              , k = h[2]
                              , l = h[3]
                              , m = new Uint32Array(256)
                              , n = 0
                              , o = 0
                              , p = 0;
                            for (p = 0; p < 256; p++)
                                p < 128 ? m[p] = p << 1 : m[p] = p << 1 ^ 283;
                            for (p = 0; p < 256; p++) {
                                var q = o ^ o << 1 ^ o << 2 ^ o << 3 ^ o << 4;
                                q = q >>> 8 ^ 255 & q ^ 99,
                                a[n] = q,
                                b[q] = n;
                                var r = m[n]
                                  , s = m[r]
                                  , t = m[s]
                                  , u = 257 * m[q] ^ 16843008 * q;
                                d[n] = u << 24 | u >>> 8,
                                e[n] = u << 16 | u >>> 16,
                                f[n] = u << 8 | u >>> 24,
                                g[n] = u,
                                u = 16843009 * t ^ 65537 * s ^ 257 * r ^ 16843008 * n,
                                i[q] = u << 24 | u >>> 8,
                                j[q] = u << 16 | u >>> 16,
                                k[q] = u << 8 | u >>> 24,
                                l[q] = u,
                                n ? (n = r ^ m[m[m[t ^ r]]],
                                o ^= m[m[o]]) : n = o = 1
                            }
                        }
                    }, {
                        key: "expandKey",
                        value: function(a) {
                            for (var b = this.uint8ArrayToUint32Array_(a), c = !0, d = 0; d < b.length && c; )
                                c = b[d] === this.key[d],
                                d++;
                            if (!c) {
                                this.key = b;
                                var e = this.keySize = b.length;
                                if (4 !== e && 6 !== e && 8 !== e)
                                    throw new Error("Invalid aes key size=" + e);
                                var f = this.ksRows = 4 * (e + 6 + 1)
                                  , g = void 0
                                  , h = void 0
                                  , i = this.keySchedule = new Uint32Array(f)
                                  , j = this.invKeySchedule = new Uint32Array(f)
                                  , k = this.sBox
                                  , l = this.rcon
                                  , m = this.invSubMix
                                  , n = m[0]
                                  , o = m[1]
                                  , p = m[2]
                                  , q = m[3]
                                  , r = void 0
                                  , s = void 0;
                                for (g = 0; g < f; g++)
                                    g < e ? r = i[g] = b[g] : (s = r,
                                    g % e === 0 ? (s = s << 8 | s >>> 24,
                                    s = k[s >>> 24] << 24 | k[s >>> 16 & 255] << 16 | k[s >>> 8 & 255] << 8 | k[255 & s],
                                    s ^= l[g / e | 0] << 24) : e > 6 && g % e === 4 && (s = k[s >>> 24] << 24 | k[s >>> 16 & 255] << 16 | k[s >>> 8 & 255] << 8 | k[255 & s]),
                                    i[g] = r = (i[g - e] ^ s) >>> 0);
                                for (h = 0; h < f; h++)
                                    g = f - h,
                                    s = 3 & h ? i[g] : i[g - 4],
                                    h < 4 || g <= 4 ? j[h] = s : j[h] = n[k[s >>> 24]] ^ o[k[s >>> 16 & 255]] ^ p[k[s >>> 8 & 255]] ^ q[k[255 & s]],
                                    j[h] = j[h] >>> 0
                            }
                        }
                    }, {
                        key: "networkToHostOrderSwap",
                        value: function(a) {
                            return a << 24 | (65280 & a) << 8 | (16711680 & a) >> 8 | a >>> 24
                        }
                    }, {
                        key: "decrypt",
                        value: function(a, b, c) {
                            for (var d, e, f = this.keySize + 6, g = this.invKeySchedule, h = this.invSBox, i = this.invSubMix, j = i[0], k = i[1], l = i[2], m = i[3], n = this.uint8ArrayToUint32Array_(c), o = n[0], p = n[1], q = n[2], r = n[3], s = new Int32Array(a), t = new Int32Array(s.length), u = void 0, v = void 0, w = void 0, x = void 0, y = void 0, z = void 0, A = void 0, B = void 0, C = void 0, D = void 0, E = void 0, F = void 0, G = this.networkToHostOrderSwap; b < s.length; ) {
                                for (C = G(s[b]),
                                D = G(s[b + 1]),
                                E = G(s[b + 2]),
                                F = G(s[b + 3]),
                                y = C ^ g[0],
                                z = F ^ g[1],
                                A = E ^ g[2],
                                B = D ^ g[3],
                                d = 4,
                                e = 1; e < f; e++)
                                    u = j[y >>> 24] ^ k[z >> 16 & 255] ^ l[A >> 8 & 255] ^ m[255 & B] ^ g[d],
                                    v = j[z >>> 24] ^ k[A >> 16 & 255] ^ l[B >> 8 & 255] ^ m[255 & y] ^ g[d + 1],
                                    w = j[A >>> 24] ^ k[B >> 16 & 255] ^ l[y >> 8 & 255] ^ m[255 & z] ^ g[d + 2],
                                    x = j[B >>> 24] ^ k[y >> 16 & 255] ^ l[z >> 8 & 255] ^ m[255 & A] ^ g[d + 3],
                                    y = u,
                                    z = v,
                                    A = w,
                                    B = x,
                                    d += 4;
                                u = h[y >>> 24] << 24 ^ h[z >> 16 & 255] << 16 ^ h[A >> 8 & 255] << 8 ^ h[255 & B] ^ g[d],
                                v = h[z >>> 24] << 24 ^ h[A >> 16 & 255] << 16 ^ h[B >> 8 & 255] << 8 ^ h[255 & y] ^ g[d + 1],
                                w = h[A >>> 24] << 24 ^ h[B >> 16 & 255] << 16 ^ h[y >> 8 & 255] << 8 ^ h[255 & z] ^ g[d + 2],
                                x = h[B >>> 24] << 24 ^ h[y >> 16 & 255] << 16 ^ h[z >> 8 & 255] << 8 ^ h[255 & A] ^ g[d + 3],
                                d += 3,
                                t[b] = G(u ^ o),
                                t[b + 1] = G(x ^ p),
                                t[b + 2] = G(w ^ q),
                                t[b + 3] = G(v ^ r),
                                o = C,
                                p = D,
                                q = E,
                                r = F,
                                b += 4
                            }
                            return t.buffer
                        }
                    }, {
                        key: "destroy",
                        value: function() {
                            this.key = void 0,
                            this.keySize = void 0,
                            this.ksRows = void 0,
                            this.sBox = void 0,
                            this.invSBox = void 0,
                            this.subMix = void 0,
                            this.invSubMix = void 0,
                            this.keySchedule = void 0,
                            this.invKeySchedule = void 0,
                            this.rcon = void 0
                        }
                    }]),
                    a
                }();
                c.default = f
            }
            , {}],
            18: [function(a, b, c) {
                "use strict";
                function d(a) {
                    return a && a.__esModule ? a : {
                        default: a
                    }
                }
                function e(a, b) {
                    if (!(a instanceof b))
                        throw new TypeError("Cannot call a class as a function")
                }
                Object.defineProperty(c, "__esModule", {
                    value: !0
                });
                var f = function() {
                    function a(a, b) {
                        for (var c = 0; c < b.length; c++) {
                            var d = b[c];
                            d.enumerable = d.enumerable || !1,
                            d.configurable = !0,
                            "value"in d && (d.writable = !0),
                            Object.defineProperty(a, d.key, d)
                        }
                    }
                    return function(b, c, d) {
                        return c && a(b.prototype, c),
                        d && a(b, d),
                        b
                    }
                }()
                  , g = a(16)
                  , h = d(g)
                  , i = a(19)
                  , j = d(i)
                  , k = a(17)
                  , l = d(k)
                  , m = a(30)
                  , n = a(50)
                  , o = function() {
                    function a(b, c) {
                        e(this, a),
                        this.observer = b,
                        this.config = c,
                        this.logEnabled = !0;
                        try {
                            var d = crypto ? crypto : self.crypto;
                            this.subtle = d.subtle || d.webkitSubtle
                        } catch (a) {}
                        this.disableWebCrypto = !this.subtle
                    }
                    return f(a, [{
                        key: "isSync",
                        value: function() {
                            return this.disableWebCrypto && this.config.enableSoftwareAES
                        }
                    }, {
                        key: "decrypt",
                        value: function(a, b, c, d) {
                            var e = this;
                            if (this.disableWebCrypto && this.config.enableSoftwareAES) {
                                this.logEnabled && (n.logger.log("JS AES decrypt"),
                                this.logEnabled = !1);
                                var f = this.decryptor;
                                f || (this.decryptor = f = new l.default),
                                f.expandKey(b),
                                d(f.decrypt(a, 0, c))
                            } else {
                                this.logEnabled && (n.logger.log("WebCrypto AES decrypt"),
                                this.logEnabled = !1);
                                var g = this.subtle;
                                this.key !== b && (this.key = b,
                                this.fastAesKey = new j.default(g,b)),
                                this.fastAesKey.expandKey().then(function(f) {
                                    var i = new h.default(g,c);
                                    i.decrypt(a, f).catch(function(f) {
                                        e.onWebCryptoError(f, a, b, c, d)
                                    }).then(function(a) {
                                        d(a)
                                    })
                                }).catch(function(f) {
                                    e.onWebCryptoError(f, a, b, c, d)
                                })
                            }
                        }
                    }, {
                        key: "onWebCryptoError",
                        value: function(a, b, c, d, e) {
                            this.config.enableSoftwareAES ? (n.logger.log("WebCrypto Error, disable WebCrypto API"),
                            this.disableWebCrypto = !0,
                            this.logEnabled = !0,
                            this.decrypt(b, c, d, e)) : (n.logger.error("decrypting error : " + a.message),
                            this.observer.trigger(Event.ERROR, {
                                type: m.ErrorTypes.MEDIA_ERROR,
                                details: m.ErrorDetails.FRAG_DECRYPT_ERROR,
                                fatal: !0,
                                reason: a.message
                            }))
                        }
                    }, {
                        key: "destroy",
                        value: function() {
                            var a = this.decryptor;
                            a && (a.destroy(),
                            this.decryptor = void 0)
                        }
                    }]),
                    a
                }();
                c.default = o
            }
            , {
                16: 16,
                17: 17,
                19: 19,
                30: 30,
                50: 50
            }],
            19: [function(a, b, c) {
                "use strict";
                function d(a, b) {
                    if (!(a instanceof b))
                        throw new TypeError("Cannot call a class as a function")
                }
                Object.defineProperty(c, "__esModule", {
                    value: !0
                });
                var e = function() {
                    function a(a, b) {
                        for (var c = 0; c < b.length; c++) {
                            var d = b[c];
                            d.enumerable = d.enumerable || !1,
                            d.configurable = !0,
                            "value"in d && (d.writable = !0),
                            Object.defineProperty(a, d.key, d)
                        }
                    }
                    return function(b, c, d) {
                        return c && a(b.prototype, c),
                        d && a(b, d),
                        b
                    }
                }()
                  , f = function() {
                    function a(b, c) {
                        d(this, a),
                        this.subtle = b,
                        this.key = c
                    }
                    return e(a, [{
                        key: "expandKey",
                        value: function() {
                            return this.subtle.importKey("raw", this.key, {
                                name: "AES-CBC"
                            }, !1, ["encrypt", "decrypt"])
                        }
                    }]),
                    a
                }();
                c.default = f
            }
            , {}],
            20: [function(a, b, c) {
                "use strict";
                function d(a) {
                    return a && a.__esModule ? a : {
                        default: a
                    }
                }
                function e(a, b) {
                    if (!(a instanceof b))
                        throw new TypeError("Cannot call a class as a function")
                }
                Object.defineProperty(c, "__esModule", {
                    value: !0
                });
                var f = function() {
                    function a(a, b) {
                        for (var c = 0; c < b.length; c++) {
                            var d = b[c];
                            d.enumerable = d.enumerable || !1,
                            d.configurable = !0,
                            "value"in d && (d.writable = !0),
                            Object.defineProperty(a, d.key, d)
                        }
                    }
                    return function(b, c, d) {
                        return c && a(b.prototype, c),
                        d && a(b, d),
                        b
                    }
                }()
                  , g = a(21)
                  , h = d(g)
                  , i = a(50)
                  , j = a(26)
                  , k = d(j)
                  , l = function() {
                    function a(b, c, d) {
                        e(this, a),
                        this.observer = b,
                        this.config = d,
                        this.remuxer = c
                    }
                    return f(a, [{
                        key: "resetInitSegment",
                        value: function(a, b, c, d) {
                            this._aacTrack = {
                                container: "audio/adts",
                                type: "audio",
                                id: -1,
                                sequenceNumber: 0,
                                isAAC: !0,
                                samples: [],
                                len: 0,
                                manifestCodec: b,
                                duration: d,
                                inputTimeScale: 9e4
                            }
                        }
                    }, {
                        key: "resetTimeStamp",
                        value: function() {}
                    }, {
                        key: "append",
                        value: function(a, b, c, d) {
                            var e, f, g, j, l, m, n, o, p, q, r = new k.default(a), s = 90 * r.timeStamp;
                            for (e = this._aacTrack,
                            m = r.length,
                            p = a.length; m < p - 1 && (255 !== a[m] || 240 !== (240 & a[m + 1])); m++)
                                ;
                            for (e.samplerate || (f = h.default.getAudioConfig(this.observer, a, m, e.manifestCodec),
                            e.config = f.config,
                            e.samplerate = f.samplerate,
                            e.channelCount = f.channelCount,
                            e.codec = f.codec,
                            i.logger.log("parsed codec:" + e.codec + ",rate:" + f.samplerate + ",nb channel:" + f.channelCount)),
                            l = 0,
                            j = 9216e4 / e.samplerate; m + 5 < p && (n = 1 & a[m + 1] ? 7 : 9,
                            g = (3 & a[m + 3]) << 11 | a[m + 4] << 3 | (224 & a[m + 5]) >>> 5,
                            g -= n,
                            g > 0 && m + n + g <= p); )
                                for (o = s + l * j,
                                q = {
                                    unit: a.subarray(m + n, m + n + g),
                                    pts: o,
                                    dts: o
                                },
                                e.samples.push(q),
                                e.len += g,
                                m += g + n,
                                l++; m < p - 1 && (255 !== a[m] || 240 !== (240 & a[m + 1])); m++)
                                    ;
                            this.remuxer.remux(e, {
                                samples: []
                            }, {
                                samples: [{
                                    pts: s,
                                    dts: s,
                                    unit: r.payload
                                }]
                            }, {
                                samples: []
                            }, b, c, d)
                        }
                    }, {
                        key: "destroy",
                        value: function() {}
                    }], [{
                        key: "probe",
                        value: function(a) {
                            var b, c, d = new k.default(a);
                            if (d.hasTimeStamp)
                                for (b = d.length,
                                c = a.length; b < c - 1; b++)
                                    if (255 === a[b] && 240 === (240 & a[b + 1]))
                                        return !0;
                            return !1
                        }
                    }]),
                    a
                }();
                c.default = l
            }
            , {
                21: 21,
                26: 26,
                50: 50
            }],
            21: [function(a, b, c) {
                "use strict";
                var d = a(50)
                  , e = a(30)
                  , f = {
                    getAudioConfig: function(a, b, c, f) {
                        var g, h, i, j, k, l = navigator.userAgent.toLowerCase(), m = f, n = [96e3, 88200, 64e3, 48e3, 44100, 32e3, 24e3, 22050, 16e3, 12e3, 11025, 8e3, 7350];
                        return g = ((192 & b[c + 2]) >>> 6) + 1,
                        h = (60 & b[c + 2]) >>> 2,
                        h > n.length - 1 ? void a.trigger(Event.ERROR, {
                            type: e.ErrorTypes.MEDIA_ERROR,
                            details: e.ErrorDetails.FRAG_PARSING_ERROR,
                            fatal: !0,
                            reason: "invalid ADTS sampling index:" + h
                        }) : (j = (1 & b[c + 2]) << 2,
                        j |= (192 & b[c + 3]) >>> 6,
                        d.logger.log("manifest codec:" + f + ",ADTS data:type:" + g + ",sampleingIndex:" + h + "[" + n[h] + "Hz],channelConfig:" + j),
                        /firefox/i.test(l) ? h >= 6 ? (g = 5,
                        k = new Array(4),
                        i = h - 3) : (g = 2,
                        k = new Array(2),
                        i = h) : l.indexOf("android") !== -1 ? (g = 2,
                        k = new Array(2),
                        i = h) : (g = 5,
                        k = new Array(4),
                        f && (f.indexOf("mp4a.40.29") !== -1 || f.indexOf("mp4a.40.5") !== -1) || !f && h >= 6 ? i = h - 3 : ((f && f.indexOf("mp4a.40.2") !== -1 && h >= 6 && 1 === j || !f && 1 === j) && (g = 2,
                        k = new Array(2)),
                        i = h)),
                        k[0] = g << 3,
                        k[0] |= (14 & h) >> 1,
                        k[1] |= (1 & h) << 7,
                        k[1] |= j << 3,
                        5 === g && (k[1] |= (14 & i) >> 1,
                        k[2] = (1 & i) << 7,
                        k[2] |= 8,
                        k[3] = 0),
                        {
                            config: k,
                            samplerate: n[h],
                            channelCount: j,
                            codec: "mp4a.40." + g,
                            manifestCodec: m
                        })
                    }
                };
                b.exports = f
            }
            , {
                30: 30,
                50: 50
            }],
            22: [function(a, b, c) {
                "use strict";
                function d(a) {
                    return a && a.__esModule ? a : {
                        default: a
                    }
                }
                function e(a, b) {
                    if (!(a instanceof b))
                        throw new TypeError("Cannot call a class as a function")
                }
                Object.defineProperty(c, "__esModule", {
                    value: !0
                });
                var f = function() {
                    function a(a, b) {
                        for (var c = 0; c < b.length; c++) {
                            var d = b[c];
                            d.enumerable = d.enumerable || !1,
                            d.configurable = !0,
                            "value"in d && (d.writable = !0),
                            Object.defineProperty(a, d.key, d)
                        }
                    }
                    return function(b, c, d) {
                        return c && a(b.prototype, c),
                        d && a(b, d),
                        b
                    }
                }()
                  , g = a(32)
                  , h = d(g)
                  , i = a(30)
                  , j = a(18)
                  , k = d(j)
                  , l = a(20)
                  , m = d(l)
                  , n = a(27)
                  , o = d(n)
                  , p = a(29)
                  , q = d(p)
                  , r = a(42)
                  , s = d(r)
                  , t = a(43)
                  , u = d(t)
                  , v = function() {
                    function a(b, c, d, f) {
                        e(this, a),
                        this.observer = b,
                        this.typeSupported = c,
                        this.config = d,
                        this.vendor = f
                    }
                    return f(a, [{
                        key: "destroy",
                        value: function() {
                            var a = this.demuxer;
                            a && a.destroy()
                        }
                    }, {
                        key: "push",
                        value: function(a, b, c, d, e, f, g, i, j, l, m, n) {
                            if (a.byteLength > 0 && null != b && null != b.key && "AES-128" === b.method) {
                                var o = this.decrypter;
                                null == o && (o = this.decrypter = new k.default(this.observer,this.config));
                                var p, q = this;
                                try {
                                    p = performance.now()
                                } catch (a) {
                                    p = Date.now()
                                }
                                o.decrypt(a, b.key.buffer, b.iv.buffer, function(a) {
                                    var k;
                                    try {
                                        k = performance.now()
                                    } catch (a) {
                                        k = Date.now()
                                    }
                                    q.observer.trigger(h.default.FRAG_DECRYPTED, {
                                        stats: {
                                            tstart: p,
                                            tdecrypt: k
                                        }
                                    }),
                                    q.pushDecrypted(new Uint8Array(a), b, new Uint8Array(c), d, e, f, g, i, j, l, m, n)
                                })
                            } else
                                this.pushDecrypted(new Uint8Array(a), b, new Uint8Array(c), d, e, f, g, i, j, l, m, n)
                        }
                    }, {
                        key: "pushDecrypted",
                        value: function(a, b, c, d, e, f, g, j, k, l, n, p) {
                            var r = this.demuxer;
                            if (!r || g && !this.probe(a)) {
                                var t = this.observer
                                  , v = this.typeSupported
                                  , w = this.config
                                  , x = [{
                                    demux: q.default,
                                    remux: s.default
                                }, {
                                    demux: m.default,
                                    remux: s.default
                                }, {
                                    demux: o.default,
                                    remux: u.default
                                }];
                                for (var y in x) {
                                    var z = x[y]
                                      , A = z.demux.probe;
                                    if (A(a)) {
                                        var B = this.remuxer = new z.remux(t,w,v,this.vendor);
                                        r = new z.demux(t,B,w,v),
                                        this.probe = A;
                                        break
                                    }
                                }
                                if (!r)
                                    return void t.trigger(h.default.ERROR, {
                                        type: i.ErrorTypes.MEDIA_ERROR,
                                        details: i.ErrorDetails.FRAG_PARSING_ERROR,
                                        fatal: !0,
                                        reason: "no demux matching with content found"
                                    });
                                this.demuxer = r
                            }
                            var C = this.remuxer;
                            (g || j) && (r.resetInitSegment(c, d, e, l),
                            C.resetInitSegment()),
                            g && (r.resetTimeStamp(),
                            C.resetTimeStamp(p)),
                            "function" == typeof r.setDecryptData && r.setDecryptData(b),
                            r.append(a, f, k, n)
                        }
                    }]),
                    a
                }();
                c.default = v
            }
            , {
                18: 18,
                20: 20,
                27: 27,
                29: 29,
                30: 30,
                32: 32,
                42: 42,
                43: 43
            }],
            23: [function(a, b, c) {
                "use strict";
                function d(a) {
                    return a && a.__esModule ? a : {
                        default: a
                    }
                }
                Object.defineProperty(c, "__esModule", {
                    value: !0
                });
                var e = a(22)
                  , f = d(e)
                  , g = a(32)
                  , h = d(g)
                  , i = a(50)
                  , j = a(1)
                  , k = d(j)
                  , l = function(a) {
                    var b = new k.default;
                    b.trigger = function(a) {
                        for (var c = arguments.length, d = Array(c > 1 ? c - 1 : 0), e = 1; e < c; e++)
                            d[e - 1] = arguments[e];
                        b.emit.apply(b, [a, a].concat(d))
                    }
                    ,
                    b.off = function(a) {
                        for (var c = arguments.length, d = Array(c > 1 ? c - 1 : 0), e = 1; e < c; e++)
                            d[e - 1] = arguments[e];
                        b.removeListener.apply(b, [a].concat(d))
                    }
                    ;
                    var c = function(b, c) {
                        a.postMessage({
                            event: b,
                            data: c
                        })
                    };
                    a.addEventListener("message", function(d) {
                        var e = d.data;
                        switch (e.cmd) {
                        case "init":
                            var g = JSON.parse(e.config);
                            a.demuxer = new f.default(b,e.typeSupported,g,e.vendor);
                            try {
                                (0,
                                i.enableLogs)(g.debug === !0)
                            } catch (a) {
                                console.warn("demuxerWorker: unable to enable logs")
                            }
                            c("init", null);
                            break;
                        case "demux":
                            a.demuxer.push(e.data, e.decryptdata, e.initSegment, e.audioCodec, e.videoCodec, e.timeOffset, e.discontinuity, e.trackSwitch, e.contiguous, e.duration, e.accurateTimeOffset, e.defaultInitPTS)
                        }
                    }),
                    b.on(h.default.FRAG_DECRYPTED, c),
                    b.on(h.default.FRAG_PARSING_INIT_SEGMENT, c),
                    b.on(h.default.FRAG_PARSED, c),
                    b.on(h.default.ERROR, c),
                    b.on(h.default.FRAG_PARSING_METADATA, c),
                    b.on(h.default.FRAG_PARSING_USERDATA, c),
                    b.on(h.default.INIT_PTS_FOUND, c),
                    b.on(h.default.FRAG_PARSING_DATA, function(b, c) {
                        var d = []
                          , e = {
                            event: b,
                            data: c
                        };
                        c.data1 && (e.data1 = c.data1.buffer,
                        d.push(c.data1.buffer),
                        delete c.data1),
                        c.data2 && (e.data2 = c.data2.buffer,
                        d.push(c.data2.buffer),
                        delete c.data2),
                        a.postMessage(e, d)
                    })
                };
                c.default = l
            }
            , {
                1: 1,
                22: 22,
                32: 32,
                50: 50
            }],
            24: [function(a, b, c) {
                "use strict";
                function d(a) {
                    return a && a.__esModule ? a : {
                        default: a
                    }
                }
                function e(a, b) {
                    if (!(a instanceof b))
                        throw new TypeError("Cannot call a class as a function")
                }
                Object.defineProperty(c, "__esModule", {
                    value: !0
                });
                var f = function() {
                    function a(a, b) {
                        for (var c = 0; c < b.length; c++) {
                            var d = b[c];
                            d.enumerable = d.enumerable || !1,
                            d.configurable = !0,
                            "value"in d && (d.writable = !0),
                            Object.defineProperty(a, d.key, d)
                        }
                    }
                    return function(b, c, d) {
                        return c && a(b.prototype, c),
                        d && a(b, d),
                        b
                    }
                }()
                  , g = a(32)
                  , h = d(g)
                  , i = a(22)
                  , j = d(i)
                  , k = a(23)
                  , l = d(k)
                  , m = a(50)
                  , n = a(30)
                  , o = a(1)
                  , p = d(o)
                  , q = function() {
                    function b(c, d) {
                        e(this, b),
                        this.hls = c,
                        this.id = d;
                        var f = this.observer = new p.default
                          , g = c.config;
                        f.trigger = function(a) {
                            for (var b = arguments.length, c = Array(b > 1 ? b - 1 : 0), d = 1; d < b; d++)
                                c[d - 1] = arguments[d];
                            f.emit.apply(f, [a, a].concat(c))
                        }
                        ,
                        f.off = function(a) {
                            for (var b = arguments.length, c = Array(b > 1 ? b - 1 : 0), d = 1; d < b; d++)
                                c[d - 1] = arguments[d];
                            f.removeListener.apply(f, [a].concat(c))
                        }
                        ;
                        var i = function(a, b) {
                            b = b || {},
                            b.frag = this.frag,
                            b.id = this.id,
                            c.trigger(a, b)
                        }
                        .bind(this);
                        f.on(h.default.FRAG_DECRYPTED, i),
                        f.on(h.default.FRAG_PARSING_INIT_SEGMENT, i),
                        f.on(h.default.FRAG_PARSING_DATA, i),
                        f.on(h.default.FRAG_PARSED, i),
                        f.on(h.default.ERROR, i),
                        f.on(h.default.FRAG_PARSING_METADATA, i),
                        f.on(h.default.FRAG_PARSING_USERDATA, i),
                        f.on(h.default.INIT_PTS_FOUND, i);
                        var k = {
                            mp4: MediaSource.isTypeSupported("video/mp4"),
                            mpeg: MediaSource.isTypeSupported("audio/mpeg"),
                            mp3: MediaSource.isTypeSupported('audio/mp4; codecs="mp3"')
                        }
                          , o = navigator.vendor;
                        if (g.enableWorker && "undefined" != typeof Worker) {
                            m.logger.log("demuxing in webworker");
                            var q = void 0;
                            try {
                                var r = a(3);
                                q = this.w = r(l.default),
                                this.onwmsg = this.onWorkerMessage.bind(this),
                                q.addEventListener("message", this.onwmsg),
                                q.onerror = function(a) {
                                    c.trigger(h.default.ERROR, {
                                        type: n.ErrorTypes.OTHER_ERROR,
                                        details: n.ErrorDetails.INTERNAL_EXCEPTION,
                                        fatal: !0,
                                        event: "demuxerWorker",
                                        err: {
                                            message: a.message + " (" + a.filename + ":" + a.lineno + ")"
                                        }
                                    })
                                }
                                ,
                                q.postMessage({
                                    cmd: "init",
                                    typeSupported: k,
                                    vendor: o,
                                    id: d,
                                    config: JSON.stringify(g)
                                })
                            } catch (a) {
                                m.logger.error("error while initializing DemuxerWorker, fallback on DemuxerInline"),
                                q && URL.revokeObjectURL(q.objectURL),
                                this.demuxer = new j.default(f,k,g,o),
                                this.w = void 0
                            }
                        } else
                            this.demuxer = new j.default(f,k,g,o)
                    }
                    return f(b, [{
                        key: "destroy",
                        value: function() {
                            var a = this.w;
                            if (a)
                                a.removeEventListener("message", this.onwmsg),
                                a.terminate(),
                                this.w = null;
                            else {
                                var b = this.demuxer;
                                b && (b.destroy(),
                                this.demuxer = null)
                            }
                            var c = this.observer;
                            c && (c.removeAllListeners(),
                            this.observer = null)
                        }
                    }, {
                        key: "push",
                        value: function(a, b, c, d, e, f, g, h) {
                            var i = this.w
                              , j = isNaN(e.startDTS) ? e.start : e.startDTS
                              , k = e.decryptdata
                              , l = this.frag
                              , n = !(l && e.cc === l.cc)
                              , o = !(l && e.level === l.level)
                              , p = l && e.sn === l.sn + 1
                              , q = !o && p;
                            if (n && m.logger.log(this.id + ":discontinuity detected"),
                            o && m.logger.log(this.id + ":switch detected"),
                            this.frag = e,
                            i)
                                i.postMessage({
                                    cmd: "demux",
                                    data: a,
                                    decryptdata: k,
                                    initSegment: b,
                                    audioCodec: c,
                                    videoCodec: d,
                                    timeOffset: j,
                                    discontinuity: n,
                                    trackSwitch: o,
                                    contiguous: q,
                                    duration: f,
                                    accurateTimeOffset: g,
                                    defaultInitPTS: h
                                }, [a]);
                            else {
                                var r = this.demuxer;
                                r && r.push(a, k, b, c, d, j, n, o, q, f, g, h)
                            }
                        }
                    }, {
                        key: "onWorkerMessage",
                        value: function(a) {
                            var b = a.data
                              , c = this.hls;
                            switch (b.event) {
                            case "init":
                                URL.revokeObjectURL(this.w.objectURL);
                                break;
                            case h.default.FRAG_PARSING_DATA:
                                b.data.data1 = new Uint8Array(b.data1),
                                b.data2 && (b.data.data2 = new Uint8Array(b.data2));
                            default:
                                b.data = b.data || {},
                                b.data.frag = this.frag,
                                b.data.id = this.id,
                                c.trigger(b.event, b.data)
                            }
                        }
                    }]),
                    b
                }();
                c.default = q
            }
            , {
                1: 1,
                22: 22,
                23: 23,
                3: 3,
                30: 30,
                32: 32,
                50: 50
            }],
            25: [function(a, b, c) {
                "use strict";
                function d(a, b) {
                    if (!(a instanceof b))
                        throw new TypeError("Cannot call a class as a function")
                }
                Object.defineProperty(c, "__esModule", {
                    value: !0
                });
                var e = function() {
                    function a(a, b) {
                        for (var c = 0; c < b.length; c++) {
                            var d = b[c];
                            d.enumerable = d.enumerable || !1,
                            d.configurable = !0,
                            "value"in d && (d.writable = !0),
                            Object.defineProperty(a, d.key, d)
                        }
                    }
                    return function(b, c, d) {
                        return c && a(b.prototype, c),
                        d && a(b, d),
                        b
                    }
                }()
                  , f = a(50)
                  , g = function() {
                    function a(b) {
                        d(this, a),
                        this.data = b,
                        this.bytesAvailable = b.byteLength,
                        this.word = 0,
                        this.bitsAvailable = 0
                    }
                    return e(a, [{
                        key: "loadWord",
                        value: function() {
                            var a = this.data
                              , b = this.bytesAvailable
                              , c = a.byteLength - b
                              , d = new Uint8Array(4)
                              , e = Math.min(4, b);
                            if (0 === e)
                                throw new Error("no bytes available");
                            d.set(a.subarray(c, c + e)),
                            this.word = new DataView(d.buffer).getUint32(0),
                            this.bitsAvailable = 8 * e,
                            this.bytesAvailable -= e
                        }
                    }, {
                        key: "skipBits",
                        value: function(a) {
                            var b;
                            this.bitsAvailable > a ? (this.word <<= a,
                            this.bitsAvailable -= a) : (a -= this.bitsAvailable,
                            b = a >> 3,
                            a -= b >> 3,
                            this.bytesAvailable -= b,
                            this.loadWord(),
                            this.word <<= a,
                            this.bitsAvailable -= a)
                        }
                    }, {
                        key: "readBits",
                        value: function(a) {
                            var b = Math.min(this.bitsAvailable, a)
                              , c = this.word >>> 32 - b;
                            return a > 32 && f.logger.error("Cannot read more than 32 bits at a time"),
                            this.bitsAvailable -= b,
                            this.bitsAvailable > 0 ? this.word <<= b : this.bytesAvailable > 0 && this.loadWord(),
                            b = a - b,
                            b > 0 && this.bitsAvailable ? c << b | this.readBits(b) : c
                        }
                    }, {
                        key: "skipLZ",
                        value: function() {
                            var a;
                            for (a = 0; a < this.bitsAvailable; ++a)
                                if (0 !== (this.word & 2147483648 >>> a))
                                    return this.word <<= a,
                                    this.bitsAvailable -= a,
                                    a;
                            return this.loadWord(),
                            a + this.skipLZ()
                        }
                    }, {
                        key: "skipUEG",
                        value: function() {
                            this.skipBits(1 + this.skipLZ())
                        }
                    }, {
                        key: "skipEG",
                        value: function() {
                            this.skipBits(1 + this.skipLZ())
                        }
                    }, {
                        key: "readUEG",
                        value: function() {
                            var a = this.skipLZ();
                            return this.readBits(a + 1) - 1
                        }
                    }, {
                        key: "readEG",
                        value: function() {
                            var a = this.readUEG();
                            return 1 & a ? 1 + a >>> 1 : -1 * (a >>> 1)
                        }
                    }, {
                        key: "readBoolean",
                        value: function() {
                            return 1 === this.readBits(1)
                        }
                    }, {
                        key: "readUByte",
                        value: function() {
                            return this.readBits(8)
                        }
                    }, {
                        key: "readUShort",
                        value: function() {
                            return this.readBits(16)
                        }
                    }, {
                        key: "readUInt",
                        value: function() {
                            return this.readBits(32)
                        }
                    }, {
                        key: "skipScalingList",
                        value: function(a) {
                            var b, c, d = 8, e = 8;
                            for (b = 0; b < a; b++)
                                0 !== e && (c = this.readEG(),
                                e = (d + c + 256) % 256),
                                d = 0 === e ? d : e
                        }
                    }, {
                        key: "readSPS",
                        value: function() {
                            var a, b, c, d, e, f, g, h, i, j = 0, k = 0, l = 0, m = 0, n = this.readUByte.bind(this), o = this.readBits.bind(this), p = this.readUEG.bind(this), q = this.readBoolean.bind(this), r = this.skipBits.bind(this), s = this.skipEG.bind(this), t = this.skipUEG.bind(this), u = this.skipScalingList.bind(this);
                            if (n(),
                            a = n(),
                            b = o(5),
                            r(3),
                            c = n(),
                            t(),
                            100 === a || 110 === a || 122 === a || 244 === a || 44 === a || 83 === a || 86 === a || 118 === a || 128 === a) {
                                var v = p();
                                if (3 === v && r(1),
                                t(),
                                t(),
                                r(1),
                                q())
                                    for (h = 3 !== v ? 8 : 12,
                                    i = 0; i < h; i++)
                                        q() && u(i < 6 ? 16 : 64)
                            }
                            t();
                            var w = p();
                            if (0 === w)
                                p();
                            else if (1 === w)
                                for (r(1),
                                s(),
                                s(),
                                d = p(),
                                i = 0; i < d; i++)
                                    s();
                            t(),
                            r(1),
                            e = p(),
                            f = p(),
                            g = o(1),
                            0 === g && r(1),
                            r(1),
                            q() && (j = p(),
                            k = p(),
                            l = p(),
                            m = p());
                            var x = [1, 1];
                            if (q() && q()) {
                                var y = n();
                                switch (y) {
                                case 1:
                                    x = [1, 1];
                                    break;
                                case 2:
                                    x = [12, 11];
                                    break;
                                case 3:
                                    x = [10, 11];
                                    break;
                                case 4:
                                    x = [16, 11];
                                    break;
                                case 5:
                                    x = [40, 33];
                                    break;
                                case 6:
                                    x = [24, 11];
                                    break;
                                case 7:
                                    x = [20, 11];
                                    break;
                                case 8:
                                    x = [32, 11];
                                    break;
                                case 9:
                                    x = [80, 33];
                                    break;
                                case 10:
                                    x = [18, 11];
                                    break;
                                case 11:
                                    x = [15, 11];
                                    break;
                                case 12:
                                    x = [64, 33];
                                    break;
                                case 13:
                                    x = [160, 99];
                                    break;
                                case 14:
                                    x = [4, 3];
                                    break;
                                case 15:
                                    x = [3, 2];
                                    break;
                                case 16:
                                    x = [2, 1];
                                    break;
                                case 255:
                                    x = [n() << 8 | n(), n() << 8 | n()]
                                }
                            }
                            return {
                                width: Math.ceil(16 * (e + 1) - 2 * j - 2 * k),
                                height: (2 - g) * (f + 1) * 16 - (g ? 2 : 4) * (l + m),
                                pixelRatio: x
                            }
                        }
                    }, {
                        key: "readSliceType",
                        value: function() {
                            return this.readUByte(),
                            this.readUEG(),
                            this.readUEG()
                        }
                    }]),
                    a
                }();
                c.default = g
            }
            , {
                50: 50
            }],
            26: [function(a, b, c) {
                "use strict";
                function d(a, b) {
                    if (!(a instanceof b))
                        throw new TypeError("Cannot call a class as a function")
                }
                Object.defineProperty(c, "__esModule", {
                    value: !0
                });
                var e = function() {
                    function a(a, b) {
                        for (var c = 0; c < b.length; c++) {
                            var d = b[c];
                            d.enumerable = d.enumerable || !1,
                            d.configurable = !0,
                            "value"in d && (d.writable = !0),
                            Object.defineProperty(a, d.key, d)
                        }
                    }
                    return function(b, c, d) {
                        return c && a(b.prototype, c),
                        d && a(b, d),
                        b
                    }
                }()
                  , f = a(50)
                  , g = function() {
                    function a(b) {
                        d(this, a),
                        this._hasTimeStamp = !1;
                        for (var c, e, g, h, i, j, k, l, m = 0; ; )
                            if (k = this.readUTF(b, m, 3),
                            m += 3,
                            "ID3" === k)
                                m += 3,
                                c = 127 & b[m++],
                                e = 127 & b[m++],
                                g = 127 & b[m++],
                                h = 127 & b[m++],
                                i = (c << 21) + (e << 14) + (g << 7) + h,
                                j = m + i,
                                this._parseID3Frames(b, m, j),
                                m = j;
                            else {
                                if ("3DI" !== k)
                                    return m -= 3,
                                    l = m,
                                    void (l && (this.hasTimeStamp || f.logger.warn("ID3 tag found, but no timestamp"),
                                    this._length = l,
                                    this._payload = b.subarray(0, l)));
                                m += 7,
                                f.logger.log("3DI footer found, end: " + m)
                            }
                    }
                    return e(a, [{
                        key: "readUTF",
                        value: function(a, b, c) {
                            var d = ""
                              , e = b
                              , f = b + c;
                            do
                                d += String.fromCharCode(a[e++]);
                            while (e < f);return d
                        }
                    }, {
                        key: "_parseID3Frames",
                        value: function(a, b, c) {
                            for (var d, e, g, h, i; b + 8 <= c; )
                                switch (d = this.readUTF(a, b, 4),
                                b += 4,
                                e = a[b++] << 24 + a[b++] << 16 + a[b++] << 8 + a[b++],
                                h = a[b++] << 8 + a[b++],
                                g = b,
                                d) {
                                case "PRIV":
                                    if ("com.apple.streaming.transportStreamTimestamp" === this.readUTF(a, b, 44)) {
                                        b += 44,
                                        b += 4;
                                        var j = 1 & a[b++];
                                        this._hasTimeStamp = !0,
                                        i = ((a[b++] << 23) + (a[b++] << 15) + (a[b++] << 7) + a[b++]) / 45,
                                        j && (i += 47721858.84),
                                        i = Math.round(i),
                                        f.logger.trace("ID3 timestamp found: " + i),
                                        this._timeStamp = i
                                    }
                                }
                        }
                    }, {
                        key: "hasTimeStamp",
                        get: function() {
                            return this._hasTimeStamp
                        }
                    }, {
                        key: "timeStamp",
                        get: function() {
                            return this._timeStamp
                        }
                    }, {
                        key: "length",
                        get: function() {
                            return this._length
                        }
                    }, {
                        key: "payload",
                        get: function() {
                            return this._payload
                        }
                    }]),
                    a
                }();
                c.default = g
            }
            , {
                50: 50
            }],
            27: [function(a, b, c) {
                "use strict";
                function d(a) {
                    return a && a.__esModule ? a : {
                        default: a
                    }
                }
                function e(a, b) {
                    if (!(a instanceof b))
                        throw new TypeError("Cannot call a class as a function")
                }
                Object.defineProperty(c, "__esModule", {
                    value: !0
                });
                var f = function() {
                    function a(a, b) {
                        for (var c = 0; c < b.length; c++) {
                            var d = b[c];
                            d.enumerable = d.enumerable || !1,
                            d.configurable = !0,
                            "value"in d && (d.writable = !0),
                            Object.defineProperty(a, d.key, d)
                        }
                    }
                    return function(b, c, d) {
                        return c && a(b.prototype, c),
                        d && a(b, d),
                        b
                    }
                }()
                  , g = a(32)
                  , h = d(g)
                  , i = function() {
                    function a(b, c) {
                        e(this, a),
                        this.observer = b,
                        this.remuxer = c
                    }
                    return f(a, [{
                        key: "resetTimeStamp",
                        value: function() {}
                    }, {
                        key: "resetInitSegment",
                        value: function(b, c, d, e) {
                            var f = this.initData = a.parseInitSegment(b)
                              , g = {};
                            f.audio && (g.audio = {
                                container: "audio/mp4",
                                codec: c,
                                initSegment: b
                            }),
                            f.video && (g.video = {
                                container: "video/mp4",
                                codec: d,
                                initSegment: b
                            }),
                            this.observer.trigger(h.default.FRAG_PARSING_INIT_SEGMENT, {
                                tracks: g
                            })
                        }
                    }, {
                        key: "append",
                        value: function(b, c, d, e) {
                            var f = this.initData
                              , g = a.startDTS(f, b);
                            this.remuxer.remux(f.audio, f.video, null, null, g, d, e, b)
                        }
                    }, {
                        key: "destroy",
                        value: function() {}
                    }], [{
                        key: "probe",
                        value: function(b) {
                            if (b.length >= 8) {
                                var c = a.bin2str(b.subarray(4, 8));
                                return ["moof", "ftyp", "styp"].indexOf(c) >= 0
                            }
                            return !1
                        }
                    }, {
                        key: "bin2str",
                        value: function(a) {
                            return String.fromCharCode.apply(null, a)
                        }
                    }, {
                        key: "findBox",
                        value: function(b, c) {
                            var d, e, f, g, h, i = [];
                            if (!c.length)
                                return null;
                            for (d = 0; d < b.byteLength; )
                                e = b[d] << 24,
                                e |= b[d + 1] << 16,
                                e |= b[d + 2] << 8,
                                e |= b[d + 3],
                                f = a.bin2str(b.subarray(d + 4, d + 8)),
                                g = e > 1 ? d + e : b.byteLength,
                                f === c[0] && (1 === c.length ? i.push(b.subarray(d + 8, g)) : (h = a.findBox(b.subarray(d + 8, g), c.slice(1)),
                                h.length && (i = i.concat(h)))),
                                d = g;
                            return i
                        }
                    }, {
                        key: "parseInitSegment",
                        value: function(b) {
                            var c = []
                              , d = a.findBox(b, ["moov", "trak"]);
                            return d.forEach(function(b) {
                                var d = a.findBox(b, ["tkhd"])[0];
                                if (d) {
                                    var e = d[0]
                                      , f = 0 === e ? 12 : 20
                                      , g = d[f] << 24 | d[f + 1] << 16 | d[f + 2] << 8 | d[f + 3];
                                    g = g < 0 ? 4294967296 + g : g;
                                    var h = a.findBox(b, ["mdia", "mdhd"])[0];
                                    if (h) {
                                        e = h[0],
                                        f = 0 === e ? 12 : 20;
                                        var i = h[f] << 24 | h[f + 1] << 16 | h[f + 2] << 8 | h[f + 3]
                                          , j = a.findBox(b, ["mdia", "hdlr"])[0];
                                        if (j) {
                                            var k = a.bin2str(j.subarray(8, 12))
                                              , l = {
                                                soun: "audio",
                                                vide: "video"
                                            }[k];
                                            l && (c[g] = {
                                                timescale: i,
                                                type: l
                                            },
                                            c[l] = {
                                                timescale: i,
                                                id: g
                                            })
                                        }
                                    }
                                }
                            }),
                            c
                        }
                    }, {
                        key: "startDTS",
                        value: function(b, c) {
                            var d, e, f;
                            return d = a.findBox(c, ["moof", "traf"]),
                            e = [].concat.apply([], d.map(function(c) {
                                return a.findBox(c, ["tfhd"]).map(function(d) {
                                    var e, f, g;
                                    return e = d[4] << 24 | d[5] << 16 | d[6] << 8 | d[7],
                                    f = b[e].timescale || 9e4,
                                    g = a.findBox(c, ["tfdt"]).map(function(a) {
                                        var b, c;
                                        return b = a[0],
                                        c = a[4] << 24 | a[5] << 16 | a[6] << 8 | a[7],
                                        1 === b && (c *= Math.pow(2, 32),
                                        c += a[8] << 24 | a[9] << 16 | a[10] << 8 | a[11]),
                                        c
                                    })[0],
                                    g = g || 1 / 0,
                                    g / f
                                })
                            })),
                            f = Math.min.apply(null, e),
                            isFinite(f) ? f : 0
                        }
                    }]),
                    a
                }();
                c.default = i
            }
            , {
                32: 32
            }],
            28: [function(a, b, c) {
                "use strict";
                function d(a) {
                    return a && a.__esModule ? a : {
                        default: a
                    }
                }
                function e(a, b) {
                    if (!(a instanceof b))
                        throw new TypeError("Cannot call a class as a function")
                }
                Object.defineProperty(c, "__esModule", {
                    value: !0
                });
                var f = function() {
                    function a(a, b) {
                        for (var c = 0; c < b.length; c++) {
                            var d = b[c];
                            d.enumerable = d.enumerable || !1,
                            d.configurable = !0,
                            "value"in d && (d.writable = !0),
                            Object.defineProperty(a, d.key, d)
                        }
                    }
                    return function(b, c, d) {
                        return c && a(b.prototype, c),
                        d && a(b, d),
                        b
                    }
                }()
                  , g = a(18)
                  , h = d(g)
                  , i = function() {
                    function a(b, c, d, f) {
                        e(this, a),
                        this.decryptdata = d,
                        this.discardEPB = f,
                        this.decrypter = new h.default(b,c)
                    }
                    return f(a, [{
                        key: "decryptBuffer",
                        value: function(a, b) {
                            this.decrypter.decrypt(a, this.decryptdata.key.buffer, this.decryptdata.iv.buffer, b)
                        }
                    }, {
                        key: "decryptAacSample",
                        value: function(a, b, c, d) {
                            var e = a[b].unit
                              , f = e.subarray(16, e.length - e.length % 16)
                              , g = f.buffer.slice(f.byteOffset, f.byteOffset + f.length)
                              , h = this;
                            this.decryptBuffer(g, function(f) {
                                f = new Uint8Array(f),
                                e.set(f, 16),
                                d || h.decryptAacSamples(a, b + 1, c)
                            })
                        }
                    }, {
                        key: "decryptAacSamples",
                        value: function(a, b, c) {
                            for (; ; b++) {
                                if (b >= a.length)
                                    return void c();
                                if (!(a[b].unit.length < 32)) {
                                    var d = this.decrypter.isSync();
                                    if (this.decryptAacSample(a, b, c, d),
                                    !d)
                                        return
                                }
                            }
                        }
                    }, {
                        key: "getAvcEncryptedData",
                        value: function(a) {
                            for (var b = 16 * Math.floor((a.length - 48) / 160) + 16, c = new Int8Array(b), d = 0, e = 32; e <= a.length - 16; e += 160,
                            d += 16)
                                c.set(a.subarray(e, e + 16), d);
                            return c
                        }
                    }, {
                        key: "getAvcDecryptedUnit",
                        value: function(a, b) {
                            b = new Uint8Array(b);
                            for (var c = 0, d = 32; d <= a.length - 16; d += 160,
                            c += 16)
                                a.set(b.subarray(c, c + 16), d);
                            return a
                        }
                    }, {
                        key: "decryptAvcSample",
                        value: function(a, b, c, d, e, f) {
                            var g = this.discardEPB(e.data)
                              , h = this.getAvcEncryptedData(g)
                              , i = this;
                            this.decryptBuffer(h.buffer, function(h) {
                                e.data = i.getAvcDecryptedUnit(g, h),
                                f || i.decryptAvcSamples(a, b, c + 1, d)
                            })
                        }
                    }, {
                        key: "decryptAvcSamples",
                        value: function(a, b, c, d) {
                            for (; ; b++,
                            c = 0) {
                                if (b >= a.length)
                                    return void d();
                                for (var e = a[b].units; !(c >= e.length); c++) {
                                    var f = e[c];
                                    if (!(f.length <= 48 || 1 !== f.type && 5 !== f.type)) {
                                        var g = this.decrypter.isSync();
                                        if (this.decryptAvcSample(a, b, c, d, f, g),
                                        !g)
                                            return
                                    }
                                }
                            }
                        }
                    }]),
                    a
                }();
                c.default = i
            }
            , {
                18: 18
            }],
            29: [function(a, b, c) {
                "use strict";
                function d(a) {
                    return a && a.__esModule ? a : {
                        default: a
                    }
                }
                function e(a, b) {
                    if (!(a instanceof b))
                        throw new TypeError("Cannot call a class as a function");
                }
                Object.defineProperty(c, "__esModule", {
                    value: !0
                });
                var f = function() {
                    function a(a, b) {
                        for (var c = 0; c < b.length; c++) {
                            var d = b[c];
                            d.enumerable = d.enumerable || !1,
                            d.configurable = !0,
                            "value"in d && (d.writable = !0),
                            Object.defineProperty(a, d.key, d)
                        }
                    }
                    return function(b, c, d) {
                        return c && a(b.prototype, c),
                        d && a(b, d),
                        b
                    }
                }()
                  , g = a(21)
                  , h = d(g)
                  , i = a(32)
                  , j = d(i)
                  , k = a(25)
                  , l = d(k)
                  , m = a(28)
                  , n = d(m)
                  , o = a(50)
                  , p = a(30)
                  , q = function() {
                    function a(b, c, d, f) {
                        e(this, a),
                        this.observer = b,
                        this.config = d,
                        this.typeSupported = f,
                        this.remuxer = c,
                        this.sampleAes = null
                    }
                    return f(a, [{
                        key: "setDecryptData",
                        value: function(a) {
                            null != a && null != a.key && "SAMPLE-AES" === a.method ? this.sampleAes = new n.default(this.observer,this.config,a,this.discardEPB) : this.sampleAes = null
                        }
                    }, {
                        key: "resetInitSegment",
                        value: function(a, b, c, d) {
                            this.pmtParsed = !1,
                            this._pmtId = -1,
                            this._avcTrack = {
                                container: "video/mp2t",
                                type: "video",
                                id: -1,
                                inputTimeScale: 9e4,
                                sequenceNumber: 0,
                                samples: [],
                                len: 0,
                                dropped: 0
                            },
                            this._audioTrack = {
                                container: "video/mp2t",
                                type: "audio",
                                id: -1,
                                inputTimeScale: 9e4,
                                sequenceNumber: 0,
                                samples: [],
                                len: 0,
                                isAAC: !0
                            },
                            this._id3Track = {
                                type: "id3",
                                id: -1,
                                inputTimeScale: 9e4,
                                sequenceNumber: 0,
                                samples: [],
                                len: 0
                            },
                            this._txtTrack = {
                                type: "text",
                                id: -1,
                                inputTimeScale: 9e4,
                                sequenceNumber: 0,
                                samples: [],
                                len: 0
                            },
                            this.aacOverFlow = null,
                            this.aacLastPTS = null,
                            this.avcSample = null,
                            this.audioCodec = b,
                            this.videoCodec = c,
                            this._duration = d
                        }
                    }, {
                        key: "resetTimeStamp",
                        value: function() {}
                    }, {
                        key: "append",
                        value: function(a, b, c, d) {
                            var e, f, g, h, i, k, l = a.length, m = !1;
                            this.contiguous = c;
                            var n = this.pmtParsed
                              , q = this._avcTrack
                              , r = this._audioTrack
                              , s = this._id3Track
                              , t = q.id
                              , u = r.id
                              , v = s.id
                              , w = this._pmtId
                              , x = q.pesData
                              , y = r.pesData
                              , z = s.pesData
                              , A = this._parsePAT
                              , B = this._parsePMT
                              , C = this._parsePES
                              , D = this._parseAVCPES.bind(this)
                              , E = this._parseAACPES.bind(this)
                              , F = this._parseMPEGPES.bind(this)
                              , G = this._parseID3PES.bind(this);
                            for (l -= l % 188,
                            e = 0; e < l; e += 188)
                                if (71 === a[e]) {
                                    if (f = !!(64 & a[e + 1]),
                                    g = ((31 & a[e + 1]) << 8) + a[e + 2],
                                    h = (48 & a[e + 3]) >> 4,
                                    h > 1) {
                                        if (i = e + 5 + a[e + 4],
                                        i === e + 188)
                                            continue
                                    } else
                                        i = e + 4;
                                    switch (g) {
                                    case t:
                                        f && (x && (k = C(x)) && D(k, !1),
                                        x = {
                                            data: [],
                                            size: 0
                                        }),
                                        x && (x.data.push(a.subarray(i, e + 188)),
                                        x.size += e + 188 - i);
                                        break;
                                    case u:
                                        f && (y && (k = C(y)) && (r.isAAC ? E(k) : F(k)),
                                        y = {
                                            data: [],
                                            size: 0
                                        }),
                                        y && (y.data.push(a.subarray(i, e + 188)),
                                        y.size += e + 188 - i);
                                        break;
                                    case v:
                                        f && (z && (k = C(z)) && G(k),
                                        z = {
                                            data: [],
                                            size: 0
                                        }),
                                        z && (z.data.push(a.subarray(i, e + 188)),
                                        z.size += e + 188 - i);
                                        break;
                                    case 0:
                                        f && (i += a[i] + 1),
                                        w = this._pmtId = A(a, i);
                                        break;
                                    case w:
                                        f && (i += a[i] + 1);
                                        var H = B(a, i, this.typeSupported.mpeg === !0 || this.typeSupported.mp3 === !0, null != this.sampleAes);
                                        t = H.avc,
                                        t > 0 && (q.id = t),
                                        u = H.audio,
                                        u > 0 && (r.id = u,
                                        r.isAAC = H.isAAC),
                                        v = H.id3,
                                        v > 0 && (s.id = v),
                                        m && !n && (o.logger.log("reparse from beginning"),
                                        m = !1,
                                        e = -188),
                                        n = this.pmtParsed = !0;
                                        break;
                                    case 17:
                                    case 8191:
                                        break;
                                    default:
                                        m = !0
                                    }
                                } else
                                    this.observer.trigger(j.default.ERROR, {
                                        type: p.ErrorTypes.MEDIA_ERROR,
                                        details: p.ErrorDetails.FRAG_PARSING_ERROR,
                                        fatal: !1,
                                        reason: "TS packet did not start with 0x47"
                                    });
                            x && (k = C(x)) ? (D(k, !0),
                            q.pesData = null) : q.pesData = x,
                            y && (k = C(y)) ? (r.isAAC ? E(k) : F(k),
                            r.pesData = null) : (y && y.size && o.logger.log("last AAC PES packet truncated,might overlap between fragments"),
                            r.pesData = y),
                            z && (k = C(z)) ? (G(k),
                            s.pesData = null) : s.pesData = z,
                            null == this.sampleAes ? this.remuxer.remux(r, q, s, this._txtTrack, b, c, d) : this.decryptAndRemux(r, q, s, this._txtTrack, b, c, d)
                        }
                    }, {
                        key: "decryptAndRemux",
                        value: function(a, b, c, d, e, f, g) {
                            if (a.samples && a.isAAC) {
                                var h = this;
                                this.sampleAes.decryptAacSamples(a.samples, 0, function() {
                                    h.decryptAndRemuxAvc(a, b, c, d, e, f, g)
                                })
                            } else
                                this.decryptAndRemuxAvc(a, b, c, d, e, f, g)
                        }
                    }, {
                        key: "decryptAndRemuxAvc",
                        value: function(a, b, c, d, e, f, g) {
                            if (b.samples) {
                                var h = this;
                                this.sampleAes.decryptAvcSamples(b.samples, 0, 0, function() {
                                    h.remuxer.remux(a, b, c, d, e, f, g)
                                })
                            } else
                                this.remuxer.remux(a, b, c, d, e, f, g)
                        }
                    }, {
                        key: "destroy",
                        value: function() {
                            this._initPTS = this._initDTS = void 0,
                            this._duration = 0
                        }
                    }, {
                        key: "_parsePAT",
                        value: function(a, b) {
                            return (31 & a[b + 10]) << 8 | a[b + 11]
                        }
                    }, {
                        key: "_parsePMT",
                        value: function(a, b, c, d) {
                            var e, f, g, h, i = {
                                audio: -1,
                                avc: -1,
                                id3: -1,
                                isAAC: !0
                            };
                            for (e = (15 & a[b + 1]) << 8 | a[b + 2],
                            f = b + 3 + e - 4,
                            g = (15 & a[b + 10]) << 8 | a[b + 11],
                            b += 12 + g; b < f; ) {
                                switch (h = (31 & a[b + 1]) << 8 | a[b + 2],
                                a[b]) {
                                case 207:
                                    if (!d) {
                                        o.logger.log("unkown stream type:" + a[b]);
                                        break
                                    }
                                case 15:
                                    i.audio === -1 && (i.audio = h);
                                    break;
                                case 21:
                                    i.id3 === -1 && (i.id3 = h);
                                    break;
                                case 219:
                                    if (!d) {
                                        o.logger.log("unkown stream type:" + a[b]);
                                        break
                                    }
                                case 27:
                                    i.avc === -1 && (i.avc = h);
                                    break;
                                case 3:
                                case 4:
                                    c ? i.audio === -1 && (i.audio = h,
                                    i.isAAC = !1) : o.logger.log("MPEG audio found, not supported in this browser for now");
                                    break;
                                case 36:
                                    o.logger.warn("HEVC stream type found, not supported for now");
                                    break;
                                default:
                                    o.logger.log("unkown stream type:" + a[b])
                                }
                                b += ((15 & a[b + 3]) << 8 | a[b + 4]) + 5
                            }
                            return i
                        }
                    }, {
                        key: "_parsePES",
                        value: function(a) {
                            var b, c, d, e, f, g, h, i, j, k = 0, l = a.data;
                            if (!a || 0 === a.size)
                                return null;
                            for (; l[0].length < 19 && l.length > 1; ) {
                                var m = new Uint8Array(l[0].length + l[1].length);
                                m.set(l[0]),
                                m.set(l[1], l[0].length),
                                l[0] = m,
                                l.splice(1, 1)
                            }
                            if (b = l[0],
                            d = (b[0] << 16) + (b[1] << 8) + b[2],
                            1 === d) {
                                if (e = (b[4] << 8) + b[5],
                                e && e > a.size - 6)
                                    return null;
                                c = b[7],
                                192 & c && (h = 536870912 * (14 & b[9]) + 4194304 * (255 & b[10]) + 16384 * (254 & b[11]) + 128 * (255 & b[12]) + (254 & b[13]) / 2,
                                h > 4294967295 && (h -= 8589934592),
                                64 & c ? (i = 536870912 * (14 & b[14]) + 4194304 * (255 & b[15]) + 16384 * (254 & b[16]) + 128 * (255 & b[17]) + (254 & b[18]) / 2,
                                i > 4294967295 && (i -= 8589934592),
                                h - i > 54e5 && (o.logger.warn(Math.round((h - i) / 9e4) + "s delta between PTS and DTS, align them"),
                                h = i)) : i = h),
                                f = b[8],
                                j = f + 9,
                                a.size -= j,
                                g = new Uint8Array(a.size);
                                for (var n = 0, p = l.length; n < p; n++) {
                                    b = l[n];
                                    var q = b.byteLength;
                                    if (j) {
                                        if (j > q) {
                                            j -= q;
                                            continue
                                        }
                                        b = b.subarray(j),
                                        q -= j,
                                        j = 0
                                    }
                                    g.set(b, k),
                                    k += q
                                }
                                return e && (e -= f + 3),
                                {
                                    data: g,
                                    pts: h,
                                    dts: i,
                                    len: e
                                }
                            }
                            return null
                        }
                    }, {
                        key: "pushAccesUnit",
                        value: function(a, b) {
                            if (a.units.length && a.frame) {
                                var c = b.samples
                                  , d = c.length;
                                !this.config.forceKeyFrameOnDiscontinuity || a.key === !0 || b.sps && (d || this.contiguous) ? (a.id = d,
                                c.push(a)) : b.dropped++
                            }
                            a.debug.length && o.logger.log(a.pts + "/" + a.dts + ":" + a.debug)
                        }
                    }, {
                        key: "_parseAVCPES",
                        value: function(a, b) {
                            var c, d, e, f = this, g = this._avcTrack, h = this._parseAVCNALu(a.data), i = !1, j = this.avcSample;
                            a.data = null,
                            h.forEach(function(b) {
                                switch (b.type) {
                                case 1:
                                    d = !0,
                                    i && j && (j.debug += "NDR "),
                                    j.frame = !0;
                                    var h = b.data;
                                    if (h.length > 4) {
                                        var k = new l.default(h).readSliceType();
                                        2 !== k && 4 !== k && 7 !== k && 9 !== k || (j.key = !0)
                                    }
                                    break;
                                case 5:
                                    d = !0,
                                    j || (j = f.avcSample = f._createAVCSample(!0, a.pts, a.dts, "")),
                                    i && (j.debug += "IDR "),
                                    j.key = !0,
                                    j.frame = !0;
                                    break;
                                case 6:
                                    d = !0,
                                    i && j && (j.debug += "SEI "),
                                    c = new l.default(f.discardEPB(b.data)),
                                    c.readUByte();
                                    for (var m = 0, n = 0, o = !1, p = 0; !o && c.bytesAvailable > 1; ) {
                                        m = 0;
                                        do
                                            p = c.readUByte(),
                                            m += p;
                                        while (255 === p);n = 0;
                                        do
                                            p = c.readUByte(),
                                            n += p;
                                        while (255 === p);if (4 === m && 0 !== c.bytesAvailable) {
                                            o = !0;
                                            var q = c.readUByte();
                                            if (181 === q) {
                                                var r = c.readUShort();
                                                if (49 === r) {
                                                    var s = c.readUInt();
                                                    if (1195456820 === s) {
                                                        var t = c.readUByte();
                                                        if (3 === t) {
                                                            var u = c.readUByte()
                                                              , v = c.readUByte()
                                                              , w = 31 & u
                                                              , x = [u, v];
                                                            for (e = 0; e < w; e++)
                                                                x.push(c.readUByte()),
                                                                x.push(c.readUByte()),
                                                                x.push(c.readUByte());
                                                            f._insertSampleInOrder(f._txtTrack.samples, {
                                                                type: 3,
                                                                pts: a.pts,
                                                                bytes: x
                                                            })
                                                        }
                                                    }
                                                }
                                            }
                                        } else if (n < c.bytesAvailable)
                                            for (e = 0; e < n; e++)
                                                c.readUByte()
                                    }
                                    break;
                                case 7:
                                    if (d = !0,
                                    i && j && (j.debug += "SPS "),
                                    !g.sps) {
                                        c = new l.default(b.data);
                                        var y = c.readSPS();
                                        g.width = y.width,
                                        g.height = y.height,
                                        g.pixelRatio = y.pixelRatio,
                                        g.sps = [b.data],
                                        g.duration = f._duration;
                                        var z = b.data.subarray(1, 4)
                                          , A = "avc1.";
                                        for (e = 0; e < 3; e++) {
                                            var B = z[e].toString(16);
                                            B.length < 2 && (B = "0" + B),
                                            A += B
                                        }
                                        g.codec = A
                                    }
                                    break;
                                case 8:
                                    d = !0,
                                    i && j && (j.debug += "PPS "),
                                    g.pps || (g.pps = [b.data]);
                                    break;
                                case 9:
                                    d = !1,
                                    j && f.pushAccesUnit(j, g),
                                    j = f.avcSample = f._createAVCSample(!1, a.pts, a.dts, i ? "AUD " : "");
                                    break;
                                case 12:
                                    d = !1;
                                    break;
                                default:
                                    d = !1,
                                    j && (j.debug += "unknown NAL " + b.type + " ")
                                }
                                if (j && d) {
                                    var C = j.units;
                                    C.push(b)
                                }
                            }),
                            b && j && (this.pushAccesUnit(j, g),
                            this.avcSample = null)
                        }
                    }, {
                        key: "_createAVCSample",
                        value: function(a, b, c, d) {
                            return {
                                key: a,
                                pts: b,
                                dts: c,
                                units: [],
                                debug: d
                            }
                        }
                    }, {
                        key: "_insertSampleInOrder",
                        value: function(a, b) {
                            var c = a.length;
                            if (c > 0) {
                                if (b.pts >= a[c - 1].pts)
                                    a.push(b);
                                else
                                    for (var d = c - 1; d >= 0; d--)
                                        if (b.pts < a[d].pts) {
                                            a.splice(d, 0, b);
                                            break
                                        }
                            } else
                                a.push(b)
                        }
                    }, {
                        key: "_getLastNalUnit",
                        value: function() {
                            var a = this.avcSample
                              , b = void 0;
                            if (!a || 0 === a.units.length) {
                                var c = this._avcTrack
                                  , d = c.samples;
                                a = d[d.length - 1]
                            }
                            if (a) {
                                var e = a.units;
                                b = e[e.length - 1]
                            }
                            return b
                        }
                    }, {
                        key: "_parseAVCNALu",
                        value: function(a) {
                            var b, c, d, e, f, g = 0, h = a.byteLength, i = this._avcTrack, j = i.naluState || 0, k = j, l = [], m = -1;
                            for (j === -1 && (m = 0,
                            f = 31 & a[0],
                            j = 0,
                            g = 1); g < h; )
                                if (b = a[g++],
                                j)
                                    if (1 !== j)
                                        if (b)
                                            if (1 === b) {
                                                if (m >= 0)
                                                    d = {
                                                        data: a.subarray(m, g - j - 1),
                                                        type: f
                                                    },
                                                    l.push(d);
                                                else {
                                                    var n = this._getLastNalUnit();
                                                    if (n && (k && g <= 4 - k && n.state && (n.data = n.data.subarray(0, n.data.byteLength - k)),
                                                    c = g - j - 1,
                                                    c > 0)) {
                                                        var o = new Uint8Array(n.data.byteLength + c);
                                                        o.set(n.data, 0),
                                                        o.set(a.subarray(0, c), n.data.byteLength),
                                                        n.data = o
                                                    }
                                                }
                                                g < h ? (e = 31 & a[g],
                                                m = g,
                                                f = e,
                                                j = 0) : j = -1
                                            } else
                                                j = 0;
                                        else
                                            j = 3;
                                    else
                                        j = b ? 0 : 2;
                                else
                                    j = b ? 0 : 1;
                            if (m >= 0 && j >= 0 && (d = {
                                data: a.subarray(m, h),
                                type: f,
                                state: j
                            },
                            l.push(d)),
                            0 === l.length) {
                                var p = this._getLastNalUnit();
                                if (p) {
                                    var q = new Uint8Array(p.data.byteLength + a.byteLength);
                                    q.set(p.data, 0),
                                    q.set(a, p.data.byteLength),
                                    p.data = q
                                }
                            }
                            return i.naluState = j,
                            l
                        }
                    }, {
                        key: "discardEPB",
                        value: function(a) {
                            for (var b, c, d = a.byteLength, e = [], f = 1; f < d - 2; )
                                0 === a[f] && 0 === a[f + 1] && 3 === a[f + 2] ? (e.push(f + 2),
                                f += 2) : f++;
                            if (0 === e.length)
                                return a;
                            b = d - e.length,
                            c = new Uint8Array(b);
                            var g = 0;
                            for (f = 0; f < b; g++,
                            f++)
                                g === e[0] && (g++,
                                e.shift()),
                                c[f] = a[g];
                            return c
                        }
                    }, {
                        key: "_parseAACPES",
                        value: function(a) {
                            var b, c, d, e, f, g, i, k, l, m = this._audioTrack, n = a.data, q = a.pts, r = 0, s = this.aacOverFlow, t = this.aacLastPTS;
                            if (s) {
                                var u = new Uint8Array(s.byteLength + n.byteLength);
                                u.set(s, 0),
                                u.set(n, s.byteLength),
                                n = u
                            }
                            for (f = r,
                            k = n.length; f < k - 1 && (255 !== n[f] || 240 !== (240 & n[f + 1])); f++)
                                ;
                            if (f) {
                                var v, w;
                                if (f < k - 1 ? (v = "AAC PES did not start with ADTS header,offset:" + f,
                                w = !1) : (v = "no ADTS header found in AAC PES",
                                w = !0),
                                o.logger.warn("parsing error:" + v),
                                this.observer.trigger(j.default.ERROR, {
                                    type: p.ErrorTypes.MEDIA_ERROR,
                                    details: p.ErrorDetails.FRAG_PARSING_ERROR,
                                    fatal: w,
                                    reason: v
                                }),
                                w)
                                    return
                            }
                            if (!m.samplerate) {
                                var x = this.audioCodec;
                                b = h.default.getAudioConfig(this.observer, n, f, x),
                                m.config = b.config,
                                m.samplerate = b.samplerate,
                                m.channelCount = b.channelCount,
                                m.codec = b.codec,
                                m.manifestCodec = b.manifestCodec,
                                m.duration = this._duration,
                                o.logger.log("parsed codec:" + m.codec + ",rate:" + b.samplerate + ",nb channel:" + b.channelCount)
                            }
                            if (e = 0,
                            d = 9216e4 / m.samplerate,
                            s && t) {
                                var y = t + d;
                                Math.abs(y - q) > 1 && (o.logger.log("AAC: align PTS for overlapping frames by " + Math.round((y - q) / 90)),
                                q = y)
                            }
                            for (; f + 5 < k && (g = 1 & n[f + 1] ? 7 : 9,
                            c = (3 & n[f + 3]) << 11 | n[f + 4] << 3 | (224 & n[f + 5]) >>> 5,
                            c -= g,
                            c > 0 && f + g + c <= k); )
                                for (i = q + e * d,
                                l = {
                                    unit: n.subarray(f + g, f + g + c),
                                    pts: i,
                                    dts: i
                                },
                                m.samples.push(l),
                                m.len += c,
                                f += c + g,
                                e++; f < k - 1 && (255 !== n[f] || 240 !== (240 & n[f + 1])); f++)
                                    ;
                            s = f < k ? n.subarray(f, k) : null,
                            this.aacOverFlow = s,
                            this.aacLastPTS = i
                        }
                    }, {
                        key: "_parseMPEGPES",
                        value: function(a) {
                            for (var b, c = a.data, d = a.pts, e = c.length, f = 0, g = 0; g < e && (b = this._parseMpeg(c, g, e, f++, d)) > 0; )
                                g += b
                        }
                    }, {
                        key: "_onMpegFrame",
                        value: function(a, b, c, d, e, f) {
                            var g = 1152 / c * 1e3
                              , h = f + e * g
                              , i = this._audioTrack;
                            i.config = [],
                            i.channelCount = d,
                            i.samplerate = c,
                            i.duration = this._duration,
                            i.samples.push({
                                unit: a,
                                pts: h,
                                dts: h
                            }),
                            i.len += a.length
                        }
                    }, {
                        key: "_onMpegNoise",
                        value: function(a) {
                            o.logger.warn("mpeg audio has noise: " + a.length + " bytes")
                        }
                    }, {
                        key: "_parseMpeg",
                        value: function(a, b, c, d, e) {
                            var f = [32, 64, 96, 128, 160, 192, 224, 256, 288, 320, 352, 384, 416, 448, 32, 48, 56, 64, 80, 96, 112, 128, 160, 192, 224, 256, 320, 384, 32, 40, 48, 56, 64, 80, 96, 112, 128, 160, 192, 224, 256, 320, 32, 48, 56, 64, 80, 96, 112, 128, 144, 160, 176, 192, 224, 256, 8, 16, 24, 32, 40, 48, 56, 64, 80, 96, 112, 128, 144, 160]
                              , g = [44100, 48e3, 32e3, 22050, 24e3, 16e3, 11025, 12e3, 8e3];
                            if (b + 2 > c)
                                return -1;
                            if (255 === a[b] || 224 === (224 & a[b + 1])) {
                                if (b + 24 > c)
                                    return -1;
                                var h = a[b + 1] >> 3 & 3
                                  , i = a[b + 1] >> 1 & 3
                                  , j = a[b + 2] >> 4 & 15
                                  , k = a[b + 2] >> 2 & 3
                                  , l = !!(2 & a[b + 2]);
                                if (1 !== h && 0 !== j && 15 !== j && 3 !== k) {
                                    var m = 3 === h ? 3 - i : 3 === i ? 3 : 4
                                      , n = 1e3 * f[14 * m + j - 1]
                                      , o = 3 === h ? 0 : 2 === h ? 1 : 2
                                      , p = g[3 * o + k]
                                      , q = l ? 1 : 0
                                      , r = a[b + 3] >> 6 === 3 ? 1 : 2
                                      , s = 3 === i ? (3 === h ? 12 : 6) * n / p + q << 2 : (3 === h ? 144 : 72) * n / p + q | 0;
                                    return b + s > c ? -1 : (this._onMpegFrame && this._onMpegFrame(a.subarray(b, b + s), n, p, r, d, e),
                                    s)
                                }
                            }
                            for (var t = b + 2; t < c; ) {
                                if (255 === a[t - 1] && 224 === (224 & a[t]))
                                    return this._onMpegNoise && this._onMpegNoise(a.subarray(b, t - 1)),
                                    t - b - 1;
                                t++
                            }
                            return -1
                        }
                    }, {
                        key: "_parseID3PES",
                        value: function(a) {
                            this._id3Track.samples.push(a)
                        }
                    }], [{
                        key: "probe",
                        value: function(a) {
                            return a.length >= 564 && 71 === a[0] && 71 === a[188] && 71 === a[376]
                        }
                    }]),
                    a
                }();
                c.default = q
            }
            , {
                21: 21,
                25: 25,
                28: 28,
                30: 30,
                32: 32,
                50: 50
            }],
            30: [function(a, b, c) {
                "use strict";
                Object.defineProperty(c, "__esModule", {
                    value: !0
                });
                c.ErrorTypes = {
                    NETWORK_ERROR: "networkError",
                    MEDIA_ERROR: "mediaError",
                    MUX_ERROR: "muxError",
                    OTHER_ERROR: "otherError"
                },
                c.ErrorDetails = {
                    MANIFEST_LOAD_ERROR: "manifestLoadError",
                    MANIFEST_LOAD_TIMEOUT: "manifestLoadTimeOut",
                    MANIFEST_PARSING_ERROR: "manifestParsingError",
                    MANIFEST_INCOMPATIBLE_CODECS_ERROR: "manifestIncompatibleCodecsError",
                    LEVEL_LOAD_ERROR: "levelLoadError",
                    LEVEL_LOAD_TIMEOUT: "levelLoadTimeOut",
                    LEVEL_SWITCH_ERROR: "levelSwitchError",
                    AUDIO_TRACK_LOAD_ERROR: "audioTrackLoadError",
                    AUDIO_TRACK_LOAD_TIMEOUT: "audioTrackLoadTimeOut",
                    FRAG_LOAD_ERROR: "fragLoadError",
                    FRAG_LOOP_LOADING_ERROR: "fragLoopLoadingError",
                    FRAG_LOAD_TIMEOUT: "fragLoadTimeOut",
                    FRAG_DECRYPT_ERROR: "fragDecryptError",
                    FRAG_PARSING_ERROR: "fragParsingError",
                    REMUX_ALLOC_ERROR: "remuxAllocError",
                    KEY_LOAD_ERROR: "keyLoadError",
                    KEY_LOAD_TIMEOUT: "keyLoadTimeOut",
                    BUFFER_ADD_CODEC_ERROR: "bufferAddCodecError",
                    BUFFER_APPEND_ERROR: "bufferAppendError",
                    BUFFER_APPENDING_ERROR: "bufferAppendingError",
                    BUFFER_STALLED_ERROR: "bufferStalledError",
                    BUFFER_FULL_ERROR: "bufferFullError",
                    BUFFER_SEEK_OVER_HOLE: "bufferSeekOverHole",
                    BUFFER_NUDGE_ON_STALL: "bufferNudgeOnStall",
                    INTERNAL_EXCEPTION: "internalException",
                    WEBVTT_EXCEPTION: "webVTTException"
                }
            }
            , {}],
            31: [function(a, b, c) {
                "use strict";
                function d(a) {
                    return a && a.__esModule ? a : {
                        default: a
                    }
                }
                function e(a, b) {
                    if (!(a instanceof b))
                        throw new TypeError("Cannot call a class as a function")
                }
                Object.defineProperty(c, "__esModule", {
                    value: !0
                });
                var f = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(a) {
                    return typeof a
                }
                : function(a) {
                    return a && "function" == typeof Symbol && a.constructor === Symbol && a !== Symbol.prototype ? "symbol" : typeof a
                }
                  , g = function() {
                    function a(a, b) {
                        for (var c = 0; c < b.length; c++) {
                            var d = b[c];
                            d.enumerable = d.enumerable || !1,
                            d.configurable = !0,
                            "value"in d && (d.writable = !0),
                            Object.defineProperty(a, d.key, d)
                        }
                    }
                    return function(b, c, d) {
                        return c && a(b.prototype, c),
                        d && a(b, d),
                        b
                    }
                }()
                  , h = a(50)
                  , i = a(30)
                  , j = a(32)
                  , k = d(j)
                  , l = function() {
                    function a(b) {
                        e(this, a),
                        this.hls = b,
                        this.onEvent = this.onEvent.bind(this);
                        for (var c = arguments.length, d = Array(c > 1 ? c - 1 : 0), f = 1; f < c; f++)
                            d[f - 1] = arguments[f];
                        this.handledEvents = d,
                        this.useGenericHandler = !0,
                        this.registerListeners()
                    }
                    return g(a, [{
                        key: "destroy",
                        value: function() {
                            this.unregisterListeners()
                        }
                    }, {
                        key: "isEventHandler",
                        value: function() {
                            return "object" === f(this.handledEvents) && this.handledEvents.length && "function" == typeof this.onEvent
                        }
                    }, {
                        key: "registerListeners",
                        value: function() {
                            this.isEventHandler() && this.handledEvents.forEach(function(a) {
                                if ("hlsEventGeneric" === a)
                                    throw new Error("Forbidden event name: " + a);
                                this.hls.on(a, this.onEvent)
                            }
                            .bind(this))
                        }
                    }, {
                        key: "unregisterListeners",
                        value: function() {
                            this.isEventHandler() && this.handledEvents.forEach(function(a) {
                                this.hls.off(a, this.onEvent)
                            }
                            .bind(this))
                        }
                    }, {
                        key: "onEvent",
                        value: function(a, b) {
                            this.onEventGeneric(a, b)
                        }
                    }, {
                        key: "onEventGeneric",
                        value: function(a, b) {
                            var c = function(a, b) {
                                var c = "on" + a.replace("hls", "");
                                if ("function" != typeof this[c])
                                    throw new Error("Event " + a + " has no generic handler in this " + this.constructor.name + " class (tried " + c + ")");
                                return this[c].bind(this, b)
                            };
                            try {
                                c.call(this, a, b).call()
                            } catch (b) {
                                h.logger.error("internal error happened while processing " + a + ":" + b.message),
                                this.hls.trigger(k.default.ERROR, {
                                    type: i.ErrorTypes.OTHER_ERROR,
                                    details: i.ErrorDetails.INTERNAL_EXCEPTION,
                                    fatal: !1,
                                    event: a,
                                    err: b
                                })
                            }
                        }
                    }]),
                    a
                }();
                c.default = l
            }
            , {
                30: 30,
                32: 32,
                50: 50
            }],
            32: [function(a, b, c) {
                "use strict";
                b.exports = {
                    MEDIA_ATTACHING: "hlsMediaAttaching",
                    MEDIA_ATTACHED: "hlsMediaAttached",
                    MEDIA_DETACHING: "hlsMediaDetaching",
                    MEDIA_DETACHED: "hlsMediaDetached",
                    BUFFER_RESET: "hlsBufferReset",
                    BUFFER_CODECS: "hlsBufferCodecs",
                    BUFFER_CREATED: "hlsBufferCreated",
                    BUFFER_APPENDING: "hlsBufferAppending",
                    BUFFER_APPENDED: "hlsBufferAppended",
                    BUFFER_EOS: "hlsBufferEos",
                    BUFFER_FLUSHING: "hlsBufferFlushing",
                    BUFFER_FLUSHED: "hlsBufferFlushed",
                    MANIFEST_LOADING: "hlsManifestLoading",
                    MANIFEST_LOADED: "hlsManifestLoaded",
                    MANIFEST_PARSED: "hlsManifestParsed",
                    LEVEL_SWITCH: "hlsLevelSwitch",
                    LEVEL_SWITCHING: "hlsLevelSwitching",
                    LEVEL_SWITCHED: "hlsLevelSwitched",
                    LEVEL_LOADING: "hlsLevelLoading",
                    LEVEL_LOADED: "hlsLevelLoaded",
                    LEVEL_UPDATED: "hlsLevelUpdated",
                    LEVEL_PTS_UPDATED: "hlsLevelPtsUpdated",
                    AUDIO_TRACKS_UPDATED: "hlsAudioTracksUpdated",
                    AUDIO_TRACK_SWITCH: "hlsAudioTrackSwitch",
                    AUDIO_TRACK_SWITCHING: "hlsAudioTrackSwitching",
                    AUDIO_TRACK_SWITCHED: "hlsAudioTrackSwitched",
                    AUDIO_TRACK_LOADING: "hlsAudioTrackLoading",
                    AUDIO_TRACK_LOADED: "hlsAudioTrackLoaded",
                    SUBTITLE_TRACKS_UPDATED: "hlsSubtitleTracksUpdated",
                    SUBTITLE_TRACK_SWITCH: "hlsSubtitleTrackSwitch",
                    SUBTITLE_TRACK_LOADING: "hlsSubtitleTrackLoading",
                    SUBTITLE_TRACK_LOADED: "hlsSubtitleTrackLoaded",
                    SUBTITLE_FRAG_PROCESSED: "hlsSubtitleFragProcessed",
                    INIT_PTS_FOUND: "hlsInitPtsFound",
                    FRAG_LOADING: "hlsFragLoading",
                    FRAG_LOAD_PROGRESS: "hlsFragLoadProgress",
                    FRAG_LOAD_EMERGENCY_ABORTED: "hlsFragLoadEmergencyAborted",
                    FRAG_LOADED: "hlsFragLoaded",
                    FRAG_DECRYPTED: "hlsFragDecrypted",
                    FRAG_PARSING_INIT_SEGMENT: "hlsFragParsingInitSegment",
                    FRAG_PARSING_USERDATA: "hlsFragParsingUserdata",
                    FRAG_PARSING_METADATA: "hlsFragParsingMetadata",
                    FRAG_PARSING_DATA: "hlsFragParsingData",
                    FRAG_PARSED: "hlsFragParsed",
                    FRAG_BUFFERED: "hlsFragBuffered",
                    FRAG_CHANGED: "hlsFragChanged",
                    FPS_DROP: "hlsFpsDrop",
                    FPS_DROP_LEVEL_CAPPING: "hlsFpsDropLevelCapping",
                    ERROR: "hlsError",
                    DESTROYING: "hlsDestroying",
                    KEY_LOADING: "hlsKeyLoading",
                    KEY_LOADED: "hlsKeyLoaded",
                    STREAM_STATE_TRANSITION: "hlsStreamStateTransition"
                }
            }
            , {}],
            33: [function(a, b, c) {
                "use strict";
                function d(a, b) {
                    if (!(a instanceof b))
                        throw new TypeError("Cannot call a class as a function")
                }
                Object.defineProperty(c, "__esModule", {
                    value: !0
                });
                var e = function() {
                    function a(a, b) {
                        for (var c = 0; c < b.length; c++) {
                            var d = b[c];
                            d.enumerable = d.enumerable || !1,
                            d.configurable = !0,
                            "value"in d && (d.writable = !0),
                            Object.defineProperty(a, d.key, d)
                        }
                    }
                    return function(b, c, d) {
                        return c && a(b.prototype, c),
                        d && a(b, d),
                        b
                    }
                }()
                  , f = function() {
                    function a() {
                        d(this, a)
                    }
                    return e(a, null, [{
                        key: "getSilentFrame",
                        value: function(a, b) {
                            switch (a) {
                            case "mp4a.40.2":
                                if (1 === b)
                                    return new Uint8Array([0, 200, 0, 128, 35, 128]);
                                if (2 === b)
                                    return new Uint8Array([33, 0, 73, 144, 2, 25, 0, 35, 128]);
                                if (3 === b)
                                    return new Uint8Array([0, 200, 0, 128, 32, 132, 1, 38, 64, 8, 100, 0, 142]);
                                if (4 === b)
                                    return new Uint8Array([0, 200, 0, 128, 32, 132, 1, 38, 64, 8, 100, 0, 128, 44, 128, 8, 2, 56]);
                                if (5 === b)
                                    return new Uint8Array([0, 200, 0, 128, 32, 132, 1, 38, 64, 8, 100, 0, 130, 48, 4, 153, 0, 33, 144, 2, 56]);
                                if (6 === b)
                                    return new Uint8Array([0, 200, 0, 128, 32, 132, 1, 38, 64, 8, 100, 0, 130, 48, 4, 153, 0, 33, 144, 2, 0, 178, 0, 32, 8, 224]);
                                break;
                            default:
                                if (1 === b)
                                    return new Uint8Array([1, 64, 34, 128, 163, 78, 230, 128, 186, 8, 0, 0, 0, 28, 6, 241, 193, 10, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 94]);
                                if (2 === b)
                                    return new Uint8Array([1, 64, 34, 128, 163, 94, 230, 128, 186, 8, 0, 0, 0, 0, 149, 0, 6, 241, 161, 10, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 94]);
                                if (3 === b)
                                    return new Uint8Array([1, 64, 34, 128, 163, 94, 230, 128, 186, 8, 0, 0, 0, 0, 149, 0, 6, 241, 161, 10, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 94])
                            }
                            return null
                        }
                    }]),
                    a
                }();
                c.default = f
            }
            , {}],
            34: [function(a, b, c) {
                "use strict";
                var d = {
                    isBuffered: function(a, b) {
                        if (a)
                            for (var c = a.buffered, d = 0; d < c.length; d++)
                                if (b >= c.start(d) && b <= c.end(d))
                                    return !0;
                        return !1
                    },
                    bufferInfo: function(a, b, c) {
                        if (a) {
                            var d, e = a.buffered, f = [];
                            for (d = 0; d < e.length; d++)
                                f.push({
                                    start: e.start(d),
                                    end: e.end(d)
                                });
                            return this.bufferedInfo(f, b, c)
                        }
                        return {
                            len: 0,
                            start: b,
                            end: b,
                            nextStart: void 0
                        }
                    },
                    bufferedInfo: function(a, b, c) {
                        var d, e, f, g, h, i = [];
                        for (a.sort(function(a, b) {
                            var c = a.start - b.start;
                            return c ? c : b.end - a.end
                        }),
                        h = 0; h < a.length; h++) {
                            var j = i.length;
                            if (j) {
                                var k = i[j - 1].end;
                                a[h].start - k < c ? a[h].end > k && (i[j - 1].end = a[h].end) : i.push(a[h])
                            } else
                                i.push(a[h])
                        }
                        for (h = 0,
                        d = 0,
                        e = f = b; h < i.length; h++) {
                            var l = i[h].start
                              , m = i[h].end;
                            if (b + c >= l && b < m)
                                e = l,
                                f = m,
                                d = f - b;
                            else if (b + c < l) {
                                g = l;
                                break
                            }
                        }
                        return {
                            len: d,
                            start: e,
                            end: f,
                            nextStart: g
                        }
                    }
                };
                b.exports = d
            }
            , {}],
            35: [function(a, b, c) {
                "use strict";
                var d = a(50)
                  , e = {
                    mergeDetails: function(a, b) {
                        var c, f = Math.max(a.startSN, b.startSN) - b.startSN, g = Math.min(a.endSN, b.endSN) - b.startSN, h = b.startSN - a.startSN, i = a.fragments, j = b.fragments, k = 0;
                        if (g < f)
                            return void (b.PTSKnown = !1);
                        for (var l = f; l <= g; l++) {
                            var m = i[h + l]
                              , n = j[l];
                            n && m && (k = m.cc - n.cc,
                            isNaN(m.startPTS) || (n.start = n.startPTS = m.startPTS,
                            n.endPTS = m.endPTS,
                            n.duration = m.duration,
                            c = n))
                        }
                        if (k)
                            for (d.logger.log("discontinuity sliding from playlist, take drift into account"),
                            l = 0; l < j.length; l++)
                                j[l].cc += k;
                        if (c)
                            e.updateFragPTSDTS(b, c.sn, c.startPTS, c.endPTS, c.startDTS, c.endDTS);
                        else if (h >= 0 && h < i.length) {
                            var o = i[h].start;
                            for (l = 0; l < j.length; l++)
                                j[l].start += o
                        }
                        b.PTSKnown = a.PTSKnown
                    },
                    updateFragPTSDTS: function(a, b, c, d, f, g) {
                        var h, i, j, k;
                        if (!a || b < a.startSN || b > a.endSN)
                            return 0;
                        if (h = b - a.startSN,
                        i = a.fragments,
                        j = i[h],
                        !isNaN(j.startPTS)) {
                            var l = Math.abs(j.startPTS - c);
                            isNaN(j.deltaPTS) ? j.deltaPTS = l : j.deltaPTS = Math.max(l, j.deltaPTS),
                            c = Math.min(c, j.startPTS),
                            d = Math.max(d, j.endPTS),
                            f = Math.min(f, j.startDTS),
                            g = Math.max(g, j.endDTS)
                        }
                        var m = c - j.start;
                        for (j.start = j.startPTS = c,
                        j.endPTS = d,
                        j.startDTS = f,
                        j.endDTS = g,
                        j.duration = d - c,
                        k = h; k > 0; k--)
                            e.updatePTS(i, k, k - 1);
                        for (k = h; k < i.length - 1; k++)
                            e.updatePTS(i, k, k + 1);
                        return a.PTSKnown = !0,
                        m
                    },
                    updatePTS: function(a, b, c) {
                        var e = a[b]
                          , f = a[c]
                          , g = f.startPTS;
                        isNaN(g) ? c > b ? f.start = e.start + e.duration : f.start = e.start - f.duration : c > b ? (e.duration = g - e.start,
                        e.duration < 0 && d.logger.warn("negative duration computed for frag " + e.sn + ",level " + e.level + ", there should be some duration drift between playlist and fragment!")) : (f.duration = e.start - g,
                        f.duration < 0 && d.logger.warn("negative duration computed for frag " + f.sn + ",level " + f.level + ", there should be some duration drift between playlist and fragment!"))
                    }
                };
                b.exports = e
            }
            , {
                50: 50
            }],
            36: [function(a, b, c) {
                "use strict";
                function d(a) {
                    return a && a.__esModule ? a : {
                        default: a
                    }
                }
                function e(a, b) {
                    if (!(a instanceof b))
                        throw new TypeError("Cannot call a class as a function")
                }
                Object.defineProperty(c, "__esModule", {
                    value: !0
                });
                var f = function() {
                    function a(a, b) {
                        for (var c = 0; c < b.length; c++) {
                            var d = b[c];
                            d.enumerable = d.enumerable || !1,
                            d.configurable = !0,
                            "value"in d && (d.writable = !0),
                            Object.defineProperty(a, d.key, d)
                        }
                    }
                    return function(b, c, d) {
                        return c && a(b.prototype, c),
                        d && a(b, d),
                        b
                    }
                }()
                  , g = a(2)
                  , h = d(g)
                  , i = a(32)
                  , j = d(i)
                  , k = a(30)
                  , l = a(40)
                  , m = d(l)
                  , n = a(38)
                  , o = d(n)
                  , p = a(39)
                  , q = d(p)
                  , r = a(12)
                  , s = d(r)
                  , t = a(11)
                  , u = d(t)
                  , v = a(50)
                  , w = a(1)
                  , x = d(w)
                  , y = a(4)
                  , z = function() {
                    function a() {
                        var b = this
                          , c = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {};
                        e(this, a);
                        var d = a.DefaultConfig;
                        if ((c.liveSyncDurationCount || c.liveMaxLatencyDurationCount) && (c.liveSyncDuration || c.liveMaxLatencyDuration))
                            throw new Error("Illegal hls.js config: don't mix up liveSyncDurationCount/liveMaxLatencyDurationCount and liveSyncDuration/liveMaxLatencyDuration");
                        for (var f in d)
                            f in c || (c[f] = d[f]);
                        if (void 0 !== c.liveMaxLatencyDurationCount && c.liveMaxLatencyDurationCount <= c.liveSyncDurationCount)
                            throw new Error('Illegal hls.js config: "liveMaxLatencyDurationCount" must be gt "liveSyncDurationCount"');
                        if (void 0 !== c.liveMaxLatencyDuration && (c.liveMaxLatencyDuration <= c.liveSyncDuration || void 0 === c.liveSyncDuration))
                            throw new Error('Illegal hls.js config: "liveMaxLatencyDuration" must be gt "liveSyncDuration"');
                        (0,
                        v.enableLogs)(c.debug),
                        this.config = c,
                        this._autoLevelCapping = -1;
                        var g = this.observer = new x.default;
                        g.trigger = function(a) {
                            for (var b = arguments.length, c = Array(b > 1 ? b - 1 : 0), d = 1; d < b; d++)
                                c[d - 1] = arguments[d];
                            g.emit.apply(g, [a, a].concat(c))
                        }
                        ,
                        g.off = function(a) {
                            for (var b = arguments.length, c = Array(b > 1 ? b - 1 : 0), d = 1; d < b; d++)
                                c[d - 1] = arguments[d];
                            g.removeListener.apply(g, [a].concat(c))
                        }
                        ,
                        this.on = g.on.bind(g),
                        this.off = g.off.bind(g),
                        this.trigger = g.trigger.bind(g);
                        var h = this.abrController = new c.abrController(this)
                          , i = new c.bufferController(this)
                          , j = new c.capLevelController(this)
                          , k = new c.fpsController(this)
                          , l = new m.default(this)
                          , n = new o.default(this)
                          , p = new q.default(this)
                          , r = this.levelController = new u.default(this)
                          , t = this.streamController = new s.default(this)
                          , w = [r, t]
                          , y = c.audioStreamController;
                        y && w.push(new y(this)),
                        this.networkControllers = w;
                        var z = [l, n, p, h, i, j, k];
                        if (y = c.audioTrackController) {
                            var A = new y(this);
                            this.audioTrackController = A,
                            z.push(A)
                        }
                        if (y = c.subtitleTrackController) {
                            var B = new y(this);
                            this.subtitleTrackController = B,
                            z.push(B)
                        }
                        [c.subtitleStreamController, c.timelineController].forEach(function(a) {
                            a && z.push(new a(b))
                        }),
                        this.coreComponents = z
                    }
                    return f(a, null, [{
                        key: "isSupported",
                        value: function() {
                            return window.MediaSource = window.MediaSource || window.WebKitMediaSource,
                            window.MediaSource && "function" == typeof window.MediaSource.isTypeSupported && window.MediaSource.isTypeSupported('video/mp4; codecs="avc1.42E01E,mp4a.40.2"')
                        }
                    }, {
                        key: "version",
                        get: function() {
                            return "0.7.5"
                        }
                    }, {
                        key: "Events",
                        get: function() {
                            return j.default
                        }
                    }, {
                        key: "ErrorTypes",
                        get: function() {
                            return k.ErrorTypes
                        }
                    }, {
                        key: "ErrorDetails",
                        get: function() {
                            return k.ErrorDetails
                        }
                    }, {
                        key: "DefaultConfig",
                        get: function() {
                            return a.defaultConfig ? a.defaultConfig : y.hlsDefaultConfig
                        },
                        set: function(b) {
                            a.defaultConfig = b
                        }
                    }]),
                    f(a, [{
                        key: "destroy",
                        value: function() {
                            v.logger.log("destroy"),
                            this.trigger(j.default.DESTROYING),
                            this.detachMedia(),
                            this.coreComponents.concat(this.networkControllers).forEach(function(a) {
                                a.destroy()
                            }),
                            this.url = null,
                            this.observer.removeAllListeners(),
                            this._autoLevelCapping = -1
                        }
                    }, {
                        key: "attachMedia",
                        value: function(a) {
                            v.logger.log("attachMedia"),
                            this.media = a,
                            this.trigger(j.default.MEDIA_ATTACHING, {
                                media: a
                            })
                        }
                    }, {
                        key: "detachMedia",
                        value: function() {
                            v.logger.log("detachMedia"),
                            this.trigger(j.default.MEDIA_DETACHING),
                            this.media = null
                        }
                    }, {
                        key: "loadSource",
                        value: function(a) {
                            a = h.default.buildAbsoluteURL(window.location.href, a, {
                                alwaysNormalize: !0
                            }),
                            v.logger.log("loadSource:" + a),
                            this.url = a,
                            this.trigger(j.default.MANIFEST_LOADING, {
                                url: a
                            })
                        }
                    }, {
                        key: "startLoad",
                        value: function() {
                            var a = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : -1;
                            v.logger.log("startLoad(" + a + ")"),
                            this.networkControllers.forEach(function(b) {
                                b.startLoad(a)
                            })
                        }
                    }, {
                        key: "stopLoad",
                        value: function() {
                            v.logger.log("stopLoad"),
                            this.networkControllers.forEach(function(a) {
                                a.stopLoad()
                            })
                        }
                    }, {
                        key: "swapAudioCodec",
                        value: function() {
                            v.logger.log("swapAudioCodec"),
                            this.streamController.swapAudioCodec()
                        }
                    }, {
                        key: "recoverMediaError",
                        value: function() {
                            v.logger.log("recoverMediaError");
                            var a = this.media;
                            this.detachMedia(),
                            this.attachMedia(a)
                        }
                    }, {
                        key: "levels",
                        get: function() {
                            return this.levelController.levels
                        }
                    }, {
                        key: "currentLevel",
                        get: function() {
                            return this.streamController.currentLevel
                        },
                        set: function(a) {
                            v.logger.log("set currentLevel:" + a),
                            this.loadLevel = a,
                            this.streamController.immediateLevelSwitch()
                        }
                    }, {
                        key: "nextLevel",
                        get: function() {
                            return this.streamController.nextLevel
                        },
                        set: function(a) {
                            v.logger.log("set nextLevel:" + a),
                            this.levelController.manualLevel = a,
                            this.streamController.nextLevelSwitch()
                        }
                    }, {
                        key: "loadLevel",
                        get: function() {
                            return this.levelController.level
                        },
                        set: function(a) {
                            v.logger.log("set loadLevel:" + a),
                            this.levelController.manualLevel = a
                        }
                    }, {
                        key: "nextLoadLevel",
                        get: function() {
                            return this.levelController.nextLoadLevel
                        },
                        set: function(a) {
                            this.levelController.nextLoadLevel = a
                        }
                    }, {
                        key: "firstLevel",
                        get: function() {
                            return Math.max(this.levelController.firstLevel, this.minAutoLevel)
                        },
                        set: function(a) {
                            v.logger.log("set firstLevel:" + a),
                            this.levelController.firstLevel = a
                        }
                    }, {
                        key: "startLevel",
                        get: function() {
                            return this.levelController.startLevel
                        },
                        set: function(a) {
                            v.logger.log("set startLevel:" + a);
                            var b = this;
                            a !== -1 && (a = Math.max(a, b.minAutoLevel)),
                            b.levelController.startLevel = a
                        }
                    }, {
                        key: "autoLevelCapping",
                        get: function() {
                            return this._autoLevelCapping
                        },
                        set: function(a) {
                            v.logger.log("set autoLevelCapping:" + a),
                            this._autoLevelCapping = a
                        }
                    }, {
                        key: "autoLevelEnabled",
                        get: function() {
                            return this.levelController.manualLevel === -1
                        }
                    }, {
                        key: "manualLevel",
                        get: function() {
                            return this.levelController.manualLevel
                        }
                    }, {
                        key: "minAutoLevel",
                        get: function() {
                            for (var a = this, b = a.levels, c = a.config.minAutoBitrate, d = b ? b.length : 0, e = 0; e < d; e++) {
                                var f = b[e].realBitrate ? Math.max(b[e].realBitrate, b[e].bitrate) : b[e].bitrate;
                                if (f > c)
                                    return e
                            }
                            return 0
                        }
                    }, {
                        key: "maxAutoLevel",
                        get: function() {
                            var a = this
                              , b = a.levels
                              , c = a.autoLevelCapping
                              , d = void 0;
                            return d = c === -1 && b && b.length ? b.length - 1 : c
                        }
                    }, {
                        key: "nextAutoLevel",
                        get: function() {
                            var a = this;
                            return Math.min(Math.max(a.abrController.nextAutoLevel, a.minAutoLevel), a.maxAutoLevel)
                        },
                        set: function(a) {
                            var b = this;
                            b.abrController.nextAutoLevel = Math.max(b.minAutoLevel, a)
                        }
                    }, {
                        key: "audioTracks",
                        get: function() {
                            var a = this.audioTrackController;
                            return a ? a.audioTracks : []
                        }
                    }, {
                        key: "audioTrack",
                        get: function() {
                            var a = this.audioTrackController;
                            return a ? a.audioTrack : -1
                        },
                        set: function(a) {
                            var b = this.audioTrackController;
                            b && (b.audioTrack = a)
                        }
                    }, {
                        key: "liveSyncPosition",
                        get: function() {
                            return this.streamController.liveSyncPosition
                        }
                    }, {
                        key: "subtitleTracks",
                        get: function() {
                            var a = this.subtitleTrackController;
                            return a ? a.subtitleTracks : []
                        }
                    }, {
                        key: "subtitleTrack",
                        get: function() {
                            var a = this.subtitleTrackController;
                            return a ? a.subtitleTrack : -1
                        },
                        set: function(a) {
                            var b = this.subtitleTrackController;
                            b && (b.subtitleTrack = a)
                        }
                    }]),
                    a
                }();
                c.default = z
            }
            , {
                1: 1,
                11: 11,
                12: 12,
                2: 2,
                30: 30,
                32: 32,
                38: 38,
                39: 39,
                4: 4,
                40: 40,
                50: 50
            }],
            37: [function(a, b, c) {
                "use strict";
                b.exports = a(36).default
            }
            , {
                36: 36
            }],
            38: [function(a, b, c) {
                "use strict";
                function d(a) {
                    return a && a.__esModule ? a : {
                        default: a
                    }
                }
                function e(a, b) {
                    if (!(a instanceof b))
                        throw new TypeError("Cannot call a class as a function")
                }
                function f(a, b) {
                    if (!a)
                        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
                    return !b || "object" != typeof b && "function" != typeof b ? a : b
                }
                function g(a, b) {
                    if ("function" != typeof b && null !== b)
                        throw new TypeError("Super expression must either be null or a function, not " + typeof b);
                    a.prototype = Object.create(b && b.prototype, {
                        constructor: {
                            value: a,
                            enumerable: !1,
                            writable: !0,
                            configurable: !0
                        }
                    }),
                    b && (Object.setPrototypeOf ? Object.setPrototypeOf(a, b) : a.__proto__ = b)
                }
                Object.defineProperty(c, "__esModule", {
                    value: !0
                });
                var h = function() {
                    function a(a, b) {
                        for (var c = 0; c < b.length; c++) {
                            var d = b[c];
                            d.enumerable = d.enumerable || !1,
                            d.configurable = !0,
                            "value"in d && (d.writable = !0),
                            Object.defineProperty(a, d.key, d)
                        }
                    }
                    return function(b, c, d) {
                        return c && a(b.prototype, c),
                        d && a(b, d),
                        b
                    }
                }()
                  , i = a(32)
                  , j = d(i)
                  , k = a(31)
                  , l = d(k)
                  , m = a(30)
                  , n = a(50)
                  , o = function(a) {
                    function b(a) {
                        e(this, b);
                        var c = f(this, (b.__proto__ || Object.getPrototypeOf(b)).call(this, a, j.default.FRAG_LOADING));
                        return c.loaders = {},
                        c
                    }
                    return g(b, a),
                    h(b, [{
                        key: "destroy",
                        value: function() {
                            var a = this.loaders;
                            for (var b in a) {
                                var c = a[b];
                                c && c.destroy()
                            }
                            this.loaders = {},
                            l.default.prototype.destroy.call(this)
                        }
                    }, {
                        key: "onFragLoading",
                        value: function(a) {
                            var b = a.frag
                              , c = b.type
                              , d = this.loaders[c]
                              , e = this.hls.config;
                            b.loaded = 0,
                            d && (n.logger.warn("abort previous fragment loader for type:" + c),
                            d.abort()),
                            d = this.loaders[c] = b.loader = "undefined" != typeof e.fLoader ? new e.fLoader(e) : new e.loader(e);
                            var f = void 0
                              , g = void 0
                              , h = void 0;
                            f = {
                                url: b.url,
                                frag: b,
                                responseType: "arraybuffer",
                                progressData: !1
                            };
                            var i = b.byteRangeStartOffset
                              , j = b.byteRangeEndOffset;
                            isNaN(i) || isNaN(j) || (f.rangeStart = i,
                            f.rangeEnd = j),
                            g = {
                                timeout: e.fragLoadingTimeOut,
                                maxRetry: 0,
                                retryDelay: 0,
                                maxRetryDelay: e.fragLoadingMaxRetryTimeout
                            },
                            h = {
                                onSuccess: this.loadsuccess.bind(this),
                                onError: this.loaderror.bind(this),
                                onTimeout: this.loadtimeout.bind(this),
                                onProgress: this.loadprogress.bind(this)
                            },
                            d.load(f, g, h)
                        }
                    }, {
                        key: "loadsuccess",
                        value: function(a, b, c) {
                            var d = a.data
                              , e = c.frag;
                            e.loader = void 0,
                            this.loaders[e.type] = void 0,
                            this.hls.trigger(j.default.FRAG_LOADED, {
                                payload: d,
                                frag: e,
                                stats: b
                            })
                        }
                    }, {
                        key: "loaderror",
                        value: function(a, b) {
                            var c = b.loader;
                            c && c.abort(),
                            this.loaders[b.type] = void 0,
                            this.hls.trigger(j.default.ERROR, {
                                type: m.ErrorTypes.NETWORK_ERROR,
                                details: m.ErrorDetails.FRAG_LOAD_ERROR,
                                fatal: !1,
                                frag: b.frag,
                                response: a
                            })
                        }
                    }, {
                        key: "loadtimeout",
                        value: function(a, b) {
                            var c = b.loader;
                            c && c.abort(),
                            this.loaders[b.type] = void 0,
                            this.hls.trigger(j.default.ERROR, {
                                type: m.ErrorTypes.NETWORK_ERROR,
                                details: m.ErrorDetails.FRAG_LOAD_TIMEOUT,
                                fatal: !1,
                                frag: b.frag
                            })
                        }
                    }, {
                        key: "loadprogress",
                        value: function(a, b, c) {
                            var d = b.frag;
                            d.loaded = a.loaded,
                            this.hls.trigger(j.default.FRAG_LOAD_PROGRESS, {
                                frag: d,
                                stats: a
                            })
                        }
                    }]),
                    b
                }(l.default);
                c.default = o
            }
            , {
                30: 30,
                31: 31,
                32: 32,
                50: 50
            }],
            39: [function(a, b, c) {
                "use strict";
                function d(a) {
                    return a && a.__esModule ? a : {
                        default: a
                    }
                }
                function e(a, b) {
                    if (!(a instanceof b))
                        throw new TypeError("Cannot call a class as a function");
                }
                function f(a, b) {
                    if (!a)
                        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
                    return !b || "object" != typeof b && "function" != typeof b ? a : b
                }
                function g(a, b) {
                    if ("function" != typeof b && null !== b)
                        throw new TypeError("Super expression must either be null or a function, not " + typeof b);
                    a.prototype = Object.create(b && b.prototype, {
                        constructor: {
                            value: a,
                            enumerable: !1,
                            writable: !0,
                            configurable: !0
                        }
                    }),
                    b && (Object.setPrototypeOf ? Object.setPrototypeOf(a, b) : a.__proto__ = b)
                }
                Object.defineProperty(c, "__esModule", {
                    value: !0
                });
                var h = function() {
                    function a(a, b) {
                        for (var c = 0; c < b.length; c++) {
                            var d = b[c];
                            d.enumerable = d.enumerable || !1,
                            d.configurable = !0,
                            "value"in d && (d.writable = !0),
                            Object.defineProperty(a, d.key, d)
                        }
                    }
                    return function(b, c, d) {
                        return c && a(b.prototype, c),
                        d && a(b, d),
                        b
                    }
                }()
                  , i = a(32)
                  , j = d(i)
                  , k = a(31)
                  , l = d(k)
                  , m = a(30)
                  , n = a(50)
                  , o = function(a) {
                    function b(a) {
                        e(this, b);
                        var c = f(this, (b.__proto__ || Object.getPrototypeOf(b)).call(this, a, j.default.KEY_LOADING));
                        return c.loaders = {},
                        c.decryptkey = null,
                        c.decrypturl = null,
                        c
                    }
                    return g(b, a),
                    h(b, [{
                        key: "destroy",
                        value: function() {
                            for (var a in this.loaders) {
                                var b = this.loaders[a];
                                b && b.destroy()
                            }
                            this.loaders = {},
                            l.default.prototype.destroy.call(this)
                        }
                    }, {
                        key: "onKeyLoading",
                        value: function(a) {
                            var b = a.frag
                              , c = b.type
                              , d = this.loaders[c]
                              , e = b.decryptdata
                              , f = e.uri;
                            if (f !== this.decrypturl || null === this.decryptkey) {
                                var g = this.hls.config;
                                d && (n.logger.warn("abort previous key loader for type:" + c),
                                d.abort()),
                                b.loader = this.loaders[c] = new g.loader(g),
                                this.decrypturl = f,
                                this.decryptkey = null;
                                var h = void 0
                                  , i = void 0
                                  , k = void 0;
                                h = {
                                    url: f,
                                    frag: b,
                                    responseType: "arraybuffer"
                                },
                                i = {
                                    timeout: g.fragLoadingTimeOut,
                                    maxRetry: g.fragLoadingMaxRetry,
                                    retryDelay: g.fragLoadingRetryDelay,
                                    maxRetryDelay: g.fragLoadingMaxRetryTimeout
                                },
                                k = {
                                    onSuccess: this.loadsuccess.bind(this),
                                    onError: this.loaderror.bind(this),
                                    onTimeout: this.loadtimeout.bind(this)
                                },
                                b.loader.load(h, i, k)
                            } else
                                this.decryptkey && (e.key = this.decryptkey,
                                this.hls.trigger(j.default.KEY_LOADED, {
                                    frag: b
                                }))
                        }
                    }, {
                        key: "loadsuccess",
                        value: function(a, b, c) {
                            var d = c.frag;
                            this.decryptkey = d.decryptdata.key = new Uint8Array(a.data),
                            d.loader = void 0,
                            this.loaders[d.type] = void 0,
                            this.hls.trigger(j.default.KEY_LOADED, {
                                frag: d
                            })
                        }
                    }, {
                        key: "loaderror",
                        value: function(a, b) {
                            var c = b.frag
                              , d = c.loader;
                            d && d.abort(),
                            this.loaders[b.type] = void 0,
                            this.hls.trigger(j.default.ERROR, {
                                type: m.ErrorTypes.NETWORK_ERROR,
                                details: m.ErrorDetails.KEY_LOAD_ERROR,
                                fatal: !1,
                                frag: c,
                                response: a
                            })
                        }
                    }, {
                        key: "loadtimeout",
                        value: function(a, b) {
                            var c = b.frag
                              , d = c.loader;
                            d && d.abort(),
                            this.loaders[b.type] = void 0,
                            this.hls.trigger(j.default.ERROR, {
                                type: m.ErrorTypes.NETWORK_ERROR,
                                details: m.ErrorDetails.KEY_LOAD_TIMEOUT,
                                fatal: !1,
                                frag: c
                            })
                        }
                    }]),
                    b
                }(l.default);
                c.default = o
            }
            , {
                30: 30,
                31: 31,
                32: 32,
                50: 50
            }],
            40: [function(a, b, c) {
                "use strict";
                function d(a) {
                    return a && a.__esModule ? a : {
                        default: a
                    }
                }
                function e(a, b) {
                    if (!a)
                        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
                    return !b || "object" != typeof b && "function" != typeof b ? a : b
                }
                function f(a, b) {
                    if ("function" != typeof b && null !== b)
                        throw new TypeError("Super expression must either be null or a function, not " + typeof b);
                    a.prototype = Object.create(b && b.prototype, {
                        constructor: {
                            value: a,
                            enumerable: !1,
                            writable: !0,
                            configurable: !0
                        }
                    }),
                    b && (Object.setPrototypeOf ? Object.setPrototypeOf(a, b) : a.__proto__ = b)
                }
                function g(a, b) {
                    if (!(a instanceof b))
                        throw new TypeError("Cannot call a class as a function")
                }
                Object.defineProperty(c, "__esModule", {
                    value: !0
                });
                var h = function() {
                    function a(a, b) {
                        for (var c = 0; c < b.length; c++) {
                            var d = b[c];
                            d.enumerable = d.enumerable || !1,
                            d.configurable = !0,
                            "value"in d && (d.writable = !0),
                            Object.defineProperty(a, d.key, d)
                        }
                    }
                    return function(b, c, d) {
                        return c && a(b.prototype, c),
                        d && a(b, d),
                        b
                    }
                }()
                  , i = a(2)
                  , j = d(i)
                  , k = a(32)
                  , l = d(k)
                  , m = a(31)
                  , n = d(m)
                  , o = a(30)
                  , p = a(44)
                  , q = d(p)
                  , r = a(50)
                  , s = /#EXT-X-STREAM-INF:([^\n\r]*)[\r\n]+([^\r\n]+)/g
                  , t = /#EXT-X-MEDIA:(.*)/g
                  , u = /#EXTINF:(\d*(?:\.\d+)?)(?:,(.*))?|(?!#)(\S.+)|#EXT-X-BYTERANGE: *(.+)|#EXT-X-PROGRAM-DATE-TIME:(.+)|#.*/g
                  , v = /(?:(?:#(EXTM3U))|(?:#EXT-X-(PLAYLIST-TYPE):(.+))|(?:#EXT-X-(MEDIA-SEQUENCE): *(\d+))|(?:#EXT-X-(TARGETDURATION): *(\d+))|(?:#EXT-X-(KEY):(.+))|(?:#EXT-X-(START):(.+))|(?:#EXT-X-(ENDLIST))|(?:#EXT-X-(DISCONTINUITY-SEQ)UENCE:(\d+))|(?:#EXT-X-(DIS)CONTINUITY))|(?:#EXT-X-(VERSION):(\d+))|(?:#EXT-X-(MAP):(.+))|(?:(#)(.*):(.*))|(?:(#)(.*))(?:.*)\r?\n?/
                  , w = function() {
                    function a() {
                        g(this, a),
                        this.method = null,
                        this.key = null,
                        this.iv = null,
                        this._uri = null
                    }
                    return h(a, [{
                        key: "uri",
                        get: function() {
                            return !this._uri && this.reluri && (this._uri = j.default.buildAbsoluteURL(this.baseuri, this.reluri, {
                                alwaysNormalize: !0
                            })),
                            this._uri
                        }
                    }]),
                    a
                }()
                  , x = function() {
                    function a() {
                        g(this, a),
                        this._url = null,
                        this._byteRange = null,
                        this._decryptdata = null,
                        this.tagList = []
                    }
                    return h(a, [{
                        key: "createInitializationVector",
                        value: function(a) {
                            for (var b = new Uint8Array(16), c = 12; c < 16; c++)
                                b[c] = a >> 8 * (15 - c) & 255;
                            return b
                        }
                    }, {
                        key: "fragmentDecryptdataFromLevelkey",
                        value: function(a, b) {
                            var c = a;
                            return a && a.method && a.uri && !a.iv && (c = new w,
                            c.method = a.method,
                            c.baseuri = a.baseuri,
                            c.reluri = a.reluri,
                            c.iv = this.createInitializationVector(b)),
                            c
                        }
                    }, {
                        key: "cloneObj",
                        value: function(a) {
                            return JSON.parse(JSON.stringify(a))
                        }
                    }, {
                        key: "url",
                        get: function() {
                            return !this._url && this.relurl && (this._url = j.default.buildAbsoluteURL(this.baseurl, this.relurl, {
                                alwaysNormalize: !0
                            })),
                            this._url
                        },
                        set: function(a) {
                            this._url = a
                        }
                    }, {
                        key: "programDateTime",
                        get: function() {
                            return !this._programDateTime && this.rawProgramDateTime && (this._programDateTime = new Date(Date.parse(this.rawProgramDateTime))),
                            this._programDateTime
                        }
                    }, {
                        key: "byteRange",
                        get: function() {
                            if (!this._byteRange) {
                                var a = this._byteRange = [];
                                if (this.rawByteRange) {
                                    var b = this.rawByteRange.split("@", 2);
                                    if (1 === b.length) {
                                        var c = this.lastByteRangeEndOffset;
                                        a[0] = c ? c : 0
                                    } else
                                        a[0] = parseInt(b[1]);
                                    a[1] = parseInt(b[0]) + a[0]
                                }
                            }
                            return this._byteRange
                        }
                    }, {
                        key: "byteRangeStartOffset",
                        get: function() {
                            return this.byteRange[0]
                        }
                    }, {
                        key: "byteRangeEndOffset",
                        get: function() {
                            return this.byteRange[1]
                        }
                    }, {
                        key: "decryptdata",
                        get: function() {
                            return this._decryptdata || (this._decryptdata = this.fragmentDecryptdataFromLevelkey(this.levelkey, this.sn)),
                            this._decryptdata
                        }
                    }]),
                    a
                }()
                  , y = function(a) {
                    function b(a) {
                        g(this, b);
                        var c = e(this, (b.__proto__ || Object.getPrototypeOf(b)).call(this, a, l.default.MANIFEST_LOADING, l.default.LEVEL_LOADING, l.default.AUDIO_TRACK_LOADING, l.default.SUBTITLE_TRACK_LOADING));
                        return c.loaders = {},
                        c
                    }
                    return f(b, a),
                    h(b, [{
                        key: "destroy",
                        value: function() {
                            for (var a in this.loaders) {
                                var b = this.loaders[a];
                                b && b.destroy()
                            }
                            this.loaders = {},
                            n.default.prototype.destroy.call(this)
                        }
                    }, {
                        key: "onManifestLoading",
                        value: function(a) {
                            this.load(a.url, {
                                type: "manifest"
                            })
                        }
                    }, {
                        key: "onLevelLoading",
                        value: function(a) {
                            this.load(a.url, {
                                type: "level",
                                level: a.level,
                                id: a.id
                            })
                        }
                    }, {
                        key: "onAudioTrackLoading",
                        value: function(a) {
                            this.load(a.url, {
                                type: "audioTrack",
                                id: a.id
                            })
                        }
                    }, {
                        key: "onSubtitleTrackLoading",
                        value: function(a) {
                            this.load(a.url, {
                                type: "subtitleTrack",
                                id: a.id
                            })
                        }
                    }, {
                        key: "load",
                        value: function(a, b) {
                            var c = this.loaders[b.type];
                            if (c) {
                                var d = c.context;
                                if (d && d.url === a)
                                    return void r.logger.trace("playlist request ongoing");
                                r.logger.warn("abort previous loader for type:" + b.type),
                                c.abort()
                            }
                            var e = this.hls.config
                              , f = void 0
                              , g = void 0
                              , h = void 0
                              , i = void 0;
                            "manifest" === b.type ? (f = e.manifestLoadingMaxRetry,
                            g = e.manifestLoadingTimeOut,
                            h = e.manifestLoadingRetryDelay,
                            i = e.manifestLoadingMaxRetryTimeout) : (f = e.levelLoadingMaxRetry,
                            g = e.levelLoadingTimeOut,
                            h = e.levelLoadingRetryDelay,
                            i = e.levelLoadingMaxRetryTimeout,
                            r.logger.log("loading playlist for " + b.type + " " + (b.level || b.id))),
                            c = this.loaders[b.type] = b.loader = "undefined" != typeof e.pLoader ? new e.pLoader(e) : new e.loader(e),
                            b.url = a,
                            b.responseType = "";
                            var j = void 0
                              , k = void 0;
                            j = {
                                timeout: g,
                                maxRetry: f,
                                retryDelay: h,
                                maxRetryDelay: i
                            },
                            k = {
                                onSuccess: this.loadsuccess.bind(this),
                                onError: this.loaderror.bind(this),
                                onTimeout: this.loadtimeout.bind(this)
                            },
                            c.load(b, j, k)
                        }
                    }, {
                        key: "resolve",
                        value: function(a, b) {
                            return j.default.buildAbsoluteURL(b, a, {
                                alwaysNormalize: !0
                            })
                        }
                    }, {
                        key: "parseMasterPlaylist",
                        value: function(a, b) {
                            var c = []
                              , d = void 0;
                            for (s.lastIndex = 0; null != (d = s.exec(a)); ) {
                                var e = {}
                                  , f = e.attrs = new q.default(d[1]);
                                e.url = this.resolve(d[2], b);
                                var g = f.decimalResolution("RESOLUTION");
                                g && (e.width = g.width,
                                e.height = g.height),
                                e.bitrate = f.decimalInteger("AVERAGE-BANDWIDTH") || f.decimalInteger("BANDWIDTH"),
                                e.name = f.NAME;
                                var h = f.CODECS;
                                if (h) {
                                    h = h.split(/[ ,]+/);
                                    for (var i = 0; i < h.length; i++) {
                                        var j = h[i];
                                        j.indexOf("avc1") !== -1 ? e.videoCodec = this.avc1toavcoti(j) : e.audioCodec = j
                                    }
                                }
                                c.push(e)
                            }
                            return c
                        }
                    }, {
                        key: "parseMasterPlaylistMedia",
                        value: function(a, b, c) {
                            var d = void 0
                              , e = []
                              , f = 0;
                            for (t.lastIndex = 0; null != (d = t.exec(a)); ) {
                                var g = {}
                                  , h = new q.default(d[1]);
                                h.TYPE === c && (g.groupId = h["GROUP-ID"],
                                g.name = h.NAME,
                                g.type = c,
                                g.default = "YES" === h.DEFAULT,
                                g.autoselect = "YES" === h.AUTOSELECT,
                                g.forced = "YES" === h.FORCED,
                                h.URI && (g.url = this.resolve(h.URI, b)),
                                g.lang = h.LANGUAGE,
                                g.name || (g.name = g.lang),
                                g.id = f++,
                                e.push(g))
                            }
                            return e
                        }
                    }, {
                        key: "avc1toavcoti",
                        value: function(a) {
                            var b, c = a.split(".");
                            return c.length > 2 ? (b = c.shift() + ".",
                            b += parseInt(c.shift()).toString(16),
                            b += ("000" + parseInt(c.shift()).toString(16)).substr(-4)) : b = a,
                            b
                        }
                    }, {
                        key: "parseLevelPlaylist",
                        value: function(a, b, c, d) {
                            var e, f, g = 0, h = 0, i = {
                                type: null,
                                version: null,
                                url: b,
                                fragments: [],
                                live: !0,
                                startSN: 0
                            }, j = new w, k = 0, l = null, m = new x;
                            for (u.lastIndex = 0; null !== (e = u.exec(a)); ) {
                                var n = e[1];
                                if (n) {
                                    m.duration = parseFloat(n);
                                    var o = (" " + e[2]).slice(1);
                                    m.title = o ? o : null,
                                    m.tagList.push(o ? ["INF", n, o] : ["INF", n])
                                } else if (e[3]) {
                                    if (!isNaN(m.duration)) {
                                        var p = g++;
                                        m.type = d,
                                        m.start = h,
                                        m.levelkey = j,
                                        m.sn = p,
                                        m.level = c,
                                        m.cc = k,
                                        m.baseurl = b,
                                        m.relurl = (" " + e[3]).slice(1),
                                        i.fragments.push(m),
                                        l = m,
                                        h += m.duration,
                                        m = new x
                                    }
                                } else if (e[4]) {
                                    if (m.rawByteRange = (" " + e[4]).slice(1),
                                    l) {
                                        var s = l.byteRangeEndOffset;
                                        s && (m.lastByteRangeEndOffset = s)
                                    }
                                } else if (e[5])
                                    m.rawProgramDateTime = (" " + e[5]).slice(1),
                                    m.tagList.push(["PROGRAM-DATE-TIME", m.rawProgramDateTime]);
                                else {
                                    for (e = e[0].match(v),
                                    f = 1; f < e.length && void 0 === e[f]; f++)
                                        ;
                                    var t = (" " + e[f + 1]).slice(1)
                                      , y = (" " + e[f + 2]).slice(1);
                                    switch (e[f]) {
                                    case "#":
                                        m.tagList.push(y ? [t, y] : [t]);
                                        break;
                                    case "PLAYLIST-TYPE":
                                        i.type = t.toUpperCase();
                                        break;
                                    case "MEDIA-SEQUENCE":
                                        g = i.startSN = parseInt(t);
                                        break;
                                    case "TARGETDURATION":
                                        i.targetduration = parseFloat(t);
                                        break;
                                    case "VERSION":
                                        i.version = parseInt(t);
                                        break;
                                    case "EXTM3U":
                                        break;
                                    case "ENDLIST":
                                        i.live = !1;
                                        break;
                                    case "DIS":
                                        k++,
                                        m.tagList.push(["DIS"]);
                                        break;
                                    case "DISCONTINUITY-SEQ":
                                        k = parseInt(t);
                                        break;
                                    case "KEY":
                                        var z = t
                                          , A = new q.default(z)
                                          , B = A.enumeratedString("METHOD")
                                          , C = A.URI
                                          , D = A.hexadecimalInteger("IV");
                                        B && (j = new w,
                                        C && ["AES-128", "SAMPLE-AES"].indexOf(B) >= 0 && (j.method = B,
                                        j.baseuri = b,
                                        j.reluri = C,
                                        j.key = null,
                                        j.iv = D));
                                        break;
                                    case "START":
                                        var E = t
                                          , F = new q.default(E)
                                          , G = F.decimalFloatingPoint("TIME-OFFSET");
                                        isNaN(G) || (i.startTimeOffset = G);
                                        break;
                                    case "MAP":
                                        var H = new q.default(t);
                                        m.relurl = H.URI,
                                        m.rawByteRange = H.BYTERANGE,
                                        m.baseurl = b,
                                        m.level = c,
                                        m.type = d,
                                        m.sn = "initSegment",
                                        i.initSegment = m,
                                        m = new x;
                                        break;
                                    default:
                                        r.logger.warn("line parsed but not handled: " + e)
                                    }
                                }
                            }
                            return m = l,
                            m && !m.relurl && (i.fragments.pop(),
                            h -= m.duration),
                            i.totalduration = h,
                            i.averagetargetduration = h / i.fragments.length,
                            i.endSN = g - 1,
                            i
                        }
                    }, {
                        key: "loadsuccess",
                        value: function(a, b, c) {
                            var d = a.data
                              , e = a.url
                              , f = c.type
                              , g = c.id
                              , h = c.level
                              , i = this.hls;
                            if (this.loaders[f] = void 0,
                            void 0 !== e && 0 !== e.indexOf("data:") || (e = c.url),
                            b.tload = performance.now(),
                            0 === d.indexOf("#EXTM3U"))
                                if (d.indexOf("#EXTINF:") > 0) {
                                    var j = "audioTrack" !== f && "subtitleTrack" !== f
                                      , k = isNaN(h) ? isNaN(g) ? 0 : g : h
                                      , m = this.parseLevelPlaylist(d, e, k, "audioTrack" === f ? "audio" : "subtitleTrack" === f ? "subtitle" : "main");
                                    m.tload = b.tload,
                                    "manifest" === f && i.trigger(l.default.MANIFEST_LOADED, {
                                        levels: [{
                                            url: e,
                                            details: m
                                        }],
                                        audioTracks: [],
                                        url: e,
                                        stats: b
                                    }),
                                    b.tparsed = performance.now(),
                                    m.targetduration ? j ? i.trigger(l.default.LEVEL_LOADED, {
                                        details: m,
                                        level: h || 0,
                                        id: g || 0,
                                        stats: b
                                    }) : "audioTrack" === f ? i.trigger(l.default.AUDIO_TRACK_LOADED, {
                                        details: m,
                                        id: g,
                                        stats: b
                                    }) : "subtitleTrack" === f && i.trigger(l.default.SUBTITLE_TRACK_LOADED, {
                                        details: m,
                                        id: g,
                                        stats: b
                                    }) : i.trigger(l.default.ERROR, {
                                        type: o.ErrorTypes.NETWORK_ERROR,
                                        details: o.ErrorDetails.MANIFEST_PARSING_ERROR,
                                        fatal: !0,
                                        url: e,
                                        reason: "invalid targetduration"
                                    })
                                } else {
                                    var n = this.parseMasterPlaylist(d, e);
                                    if (n.length) {
                                        var p = this.parseMasterPlaylistMedia(d, e, "AUDIO")
                                          , q = this.parseMasterPlaylistMedia(d, e, "SUBTITLES");
                                        if (p.length) {
                                            var s = !1;
                                            p.forEach(function(a) {
                                                a.url || (s = !0)
                                            }),
                                            s === !1 && n[0].audioCodec && !n[0].attrs.AUDIO && (r.logger.log("audio codec signaled in quality level, but no embedded audio track signaled, create one"),
                                            p.unshift({
                                                type: "main",
                                                name: "main"
                                            }))
                                        }
                                        i.trigger(l.default.MANIFEST_LOADED, {
                                            levels: n,
                                            audioTracks: p,
                                            subtitles: q,
                                            url: e,
                                            stats: b
                                        })
                                    } else
                                        i.trigger(l.default.ERROR, {
                                            type: o.ErrorTypes.NETWORK_ERROR,
                                            details: o.ErrorDetails.MANIFEST_PARSING_ERROR,
                                            fatal: !0,
                                            url: e,
                                            reason: "no level found in manifest"
                                        })
                                }
                            else
                                i.trigger(l.default.ERROR, {
                                    type: o.ErrorTypes.NETWORK_ERROR,
                                    details: o.ErrorDetails.MANIFEST_PARSING_ERROR,
                                    fatal: !0,
                                    url: e,
                                    reason: "no EXTM3U delimiter"
                                })
                        }
                    }, {
                        key: "loaderror",
                        value: function(a, b) {
                            var c, d, e = b.loader;
                            switch (b.type) {
                            case "manifest":
                                c = o.ErrorDetails.MANIFEST_LOAD_ERROR,
                                d = !0;
                                break;
                            case "level":
                                c = o.ErrorDetails.LEVEL_LOAD_ERROR,
                                d = !1;
                                break;
                            case "audioTrack":
                                c = o.ErrorDetails.AUDIO_TRACK_LOAD_ERROR,
                                d = !1
                            }
                            e && (e.abort(),
                            this.loaders[b.type] = void 0),
                            this.hls.trigger(l.default.ERROR, {
                                type: o.ErrorTypes.NETWORK_ERROR,
                                details: c,
                                fatal: d,
                                url: e.url,
                                loader: e,
                                response: a,
                                context: b
                            })
                        }
                    }, {
                        key: "loadtimeout",
                        value: function(a, b) {
                            var c, d, e = b.loader;
                            switch (b.type) {
                            case "manifest":
                                c = o.ErrorDetails.MANIFEST_LOAD_TIMEOUT,
                                d = !0;
                                break;
                            case "level":
                                c = o.ErrorDetails.LEVEL_LOAD_TIMEOUT,
                                d = !1;
                                break;
                            case "audioTrack":
                                c = o.ErrorDetails.AUDIO_TRACK_LOAD_TIMEOUT,
                                d = !1
                            }
                            e && (e.abort(),
                            this.loaders[b.type] = void 0),
                            this.hls.trigger(l.default.ERROR, {
                                type: o.ErrorTypes.NETWORK_ERROR,
                                details: c,
                                fatal: d,
                                url: e.url,
                                loader: e,
                                context: b
                            })
                        }
                    }]),
                    b
                }(n.default);
                c.default = y
            }
            , {
                2: 2,
                30: 30,
                31: 31,
                32: 32,
                44: 44,
                50: 50
            }],
            41: [function(a, b, c) {
                "use strict";
                function d(a, b) {
                    if (!(a instanceof b))
                        throw new TypeError("Cannot call a class as a function")
                }
                Object.defineProperty(c, "__esModule", {
                    value: !0
                });
                var e = function() {
                    function a(a, b) {
                        for (var c = 0; c < b.length; c++) {
                            var d = b[c];
                            d.enumerable = d.enumerable || !1,
                            d.configurable = !0,
                            "value"in d && (d.writable = !0),
                            Object.defineProperty(a, d.key, d)
                        }
                    }
                    return function(b, c, d) {
                        return c && a(b.prototype, c),
                        d && a(b, d),
                        b
                    }
                }()
                  , f = Math.pow(2, 32) - 1
                  , g = function() {
                    function a() {
                        d(this, a)
                    }
                    return e(a, null, [{
                        key: "init",
                        value: function() {
                            a.types = {
                                avc1: [],
                                avcC: [],
                                btrt: [],
                                dinf: [],
                                dref: [],
                                esds: [],
                                ftyp: [],
                                hdlr: [],
                                mdat: [],
                                mdhd: [],
                                mdia: [],
                                mfhd: [],
                                minf: [],
                                moof: [],
                                moov: [],
                                mp4a: [],
                                ".mp3": [],
                                mvex: [],
                                mvhd: [],
                                pasp: [],
                                sdtp: [],
                                stbl: [],
                                stco: [],
                                stsc: [],
                                stsd: [],
                                stsz: [],
                                stts: [],
                                tfdt: [],
                                tfhd: [],
                                traf: [],
                                trak: [],
                                trun: [],
                                trex: [],
                                tkhd: [],
                                vmhd: [],
                                smhd: []
                            };
                            var b;
                            for (b in a.types)
                                a.types.hasOwnProperty(b) && (a.types[b] = [b.charCodeAt(0), b.charCodeAt(1), b.charCodeAt(2), b.charCodeAt(3)]);
                            var c = new Uint8Array([0, 0, 0, 0, 0, 0, 0, 0, 118, 105, 100, 101, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 86, 105, 100, 101, 111, 72, 97, 110, 100, 108, 101, 114, 0])
                              , d = new Uint8Array([0, 0, 0, 0, 0, 0, 0, 0, 115, 111, 117, 110, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 83, 111, 117, 110, 100, 72, 97, 110, 100, 108, 101, 114, 0]);
                            a.HDLR_TYPES = {
                                video: c,
                                audio: d
                            };
                            var e = new Uint8Array([0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 12, 117, 114, 108, 32, 0, 0, 0, 1])
                              , f = new Uint8Array([0, 0, 0, 0, 0, 0, 0, 0]);
                            a.STTS = a.STSC = a.STCO = f,
                            a.STSZ = new Uint8Array([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]),
                            a.VMHD = new Uint8Array([0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0]),
                            a.SMHD = new Uint8Array([0, 0, 0, 0, 0, 0, 0, 0]),
                            a.STSD = new Uint8Array([0, 0, 0, 0, 0, 0, 0, 1]);
                            var g = new Uint8Array([105, 115, 111, 109])
                              , h = new Uint8Array([97, 118, 99, 49])
                              , i = new Uint8Array([0, 0, 0, 1]);
                            a.FTYP = a.box(a.types.ftyp, g, i, g, h),
                            a.DINF = a.box(a.types.dinf, a.box(a.types.dref, e))
                        }
                    }, {
                        key: "box",
                        value: function(a) {
                            for (var b, c = Array.prototype.slice.call(arguments, 1), d = 8, e = c.length, f = e; e--; )
                                d += c[e].byteLength;
                            for (b = new Uint8Array(d),
                            b[0] = d >> 24 & 255,
                            b[1] = d >> 16 & 255,
                            b[2] = d >> 8 & 255,
                            b[3] = 255 & d,
                            b.set(a, 4),
                            e = 0,
                            d = 8; e < f; e++)
                                b.set(c[e], d),
                                d += c[e].byteLength;
                            return b
                        }
                    }, {
                        key: "hdlr",
                        value: function(b) {
                            return a.box(a.types.hdlr, a.HDLR_TYPES[b])
                        }
                    }, {
                        key: "mdat",
                        value: function(b) {
                            return a.box(a.types.mdat, b)
                        }
                    }, {
                        key: "mdhd",
                        value: function(b, c) {
                            c *= b;
                            var d = Math.floor(c / (f + 1))
                              , e = Math.floor(c % (f + 1));
                            return a.box(a.types.mdhd, new Uint8Array([1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 3, b >> 24 & 255, b >> 16 & 255, b >> 8 & 255, 255 & b, d >> 24, d >> 16 & 255, d >> 8 & 255, 255 & d, e >> 24, e >> 16 & 255, e >> 8 & 255, 255 & e, 85, 196, 0, 0]))
                        }
                    }, {
                        key: "mdia",
                        value: function(b) {
                            return a.box(a.types.mdia, a.mdhd(b.timescale, b.duration), a.hdlr(b.type), a.minf(b))
                        }
                    }, {
                        key: "mfhd",
                        value: function(b) {
                            return a.box(a.types.mfhd, new Uint8Array([0, 0, 0, 0, b >> 24, b >> 16 & 255, b >> 8 & 255, 255 & b]))
                        }
                    }, {
                        key: "minf",
                        value: function(b) {
                            return "audio" === b.type ? a.box(a.types.minf, a.box(a.types.smhd, a.SMHD), a.DINF, a.stbl(b)) : a.box(a.types.minf, a.box(a.types.vmhd, a.VMHD), a.DINF, a.stbl(b))
                        }
                    }, {
                        key: "moof",
                        value: function(b, c, d) {
                            return a.box(a.types.moof, a.mfhd(b), a.traf(d, c))
                        }
                    }, {
                        key: "moov",
                        value: function(b) {
                            for (var c = b.length, d = []; c--; )
                                d[c] = a.trak(b[c]);
                            return a.box.apply(null, [a.types.moov, a.mvhd(b[0].timescale, b[0].duration)].concat(d).concat(a.mvex(b)))
                        }
                    }, {
                        key: "mvex",
                        value: function(b) {
                            for (var c = b.length, d = []; c--; )
                                d[c] = a.trex(b[c]);
                            return a.box.apply(null, [a.types.mvex].concat(d))
                        }
                    }, {
                        key: "mvhd",
                        value: function(b, c) {
                            c *= b;
                            var d = Math.floor(c / (f + 1))
                              , e = Math.floor(c % (f + 1))
                              , g = new Uint8Array([1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 3, b >> 24 & 255, b >> 16 & 255, b >> 8 & 255, 255 & b, d >> 24, d >> 16 & 255, d >> 8 & 255, 255 & d, e >> 24, e >> 16 & 255, e >> 8 & 255, 255 & e, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 64, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 255, 255, 255]);
                            return a.box(a.types.mvhd, g)
                        }
                    }, {
                        key: "sdtp",
                        value: function(b) {
                            var c, d, e = b.samples || [], f = new Uint8Array(4 + e.length);
                            for (d = 0; d < e.length; d++)
                                c = e[d].flags,
                                f[d + 4] = c.dependsOn << 4 | c.isDependedOn << 2 | c.hasRedundancy;
                            return a.box(a.types.sdtp, f)
                        }
                    }, {
                        key: "stbl",
                        value: function(b) {
                            return a.box(a.types.stbl, a.stsd(b), a.box(a.types.stts, a.STTS), a.box(a.types.stsc, a.STSC), a.box(a.types.stsz, a.STSZ), a.box(a.types.stco, a.STCO))
                        }
                    }, {
                        key: "avc1",
                        value: function(b) {
                            var c, d, e, f = [], g = [];
                            for (c = 0; c < b.sps.length; c++)
                                d = b.sps[c],
                                e = d.byteLength,
                                f.push(e >>> 8 & 255),
                                f.push(255 & e),
                                f = f.concat(Array.prototype.slice.call(d));
                            for (c = 0; c < b.pps.length; c++)
                                d = b.pps[c],
                                e = d.byteLength,
                                g.push(e >>> 8 & 255),
                                g.push(255 & e),
                                g = g.concat(Array.prototype.slice.call(d));
                            var h = a.box(a.types.avcC, new Uint8Array([1, f[3], f[4], f[5], 255, 224 | b.sps.length].concat(f).concat([b.pps.length]).concat(g)))
                              , i = b.width
                              , j = b.height
                              , k = b.pixelRatio[0]
                              , l = b.pixelRatio[1];
                            return a.box(a.types.avc1, new Uint8Array([0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, i >> 8 & 255, 255 & i, j >> 8 & 255, 255 & j, 0, 72, 0, 0, 0, 72, 0, 0, 0, 0, 0, 0, 0, 1, 18, 100, 97, 105, 108, 121, 109, 111, 116, 105, 111, 110, 47, 104, 108, 115, 46, 106, 115, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 24, 17, 17]), h, a.box(a.types.btrt, new Uint8Array([0, 28, 156, 128, 0, 45, 198, 192, 0, 45, 198, 192])), a.box(a.types.pasp, new Uint8Array([k >> 24, k >> 16 & 255, k >> 8 & 255, 255 & k, l >> 24, l >> 16 & 255, l >> 8 & 255, 255 & l])))
                        }
                    }, {
                        key: "esds",
                        value: function(a) {
                            var b = a.config.length;
                            return new Uint8Array([0, 0, 0, 0, 3, 23 + b, 0, 1, 0, 4, 15 + b, 64, 21, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 5].concat([b]).concat(a.config).concat([6, 1, 2]))
                        }
                    }, {
                        key: "mp4a",
                        value: function(b) {
                            var c = b.samplerate;
                            return a.box(a.types.mp4a, new Uint8Array([0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, b.channelCount, 0, 16, 0, 0, 0, 0, c >> 8 & 255, 255 & c, 0, 0]), a.box(a.types.esds, a.esds(b)))
                        }
                    }, {
                        key: "mp3",
                        value: function(b) {
                            var c = b.samplerate;
                            return a.box(a.types[".mp3"], new Uint8Array([0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, b.channelCount, 0, 16, 0, 0, 0, 0, c >> 8 & 255, 255 & c, 0, 0]))
                        }
                    }, {
                        key: "stsd",
                        value: function(b) {
                            return "audio" === b.type ? b.isAAC || "mp3" !== b.codec ? a.box(a.types.stsd, a.STSD, a.mp4a(b)) : a.box(a.types.stsd, a.STSD, a.mp3(b)) : a.box(a.types.stsd, a.STSD, a.avc1(b))
                        }
                    }, {
                        key: "tkhd",
                        value: function(b) {
                            var c = b.id
                              , d = b.duration * b.timescale
                              , e = b.width
                              , g = b.height
                              , h = Math.floor(d / (f + 1))
                              , i = Math.floor(d % (f + 1));
                            return a.box(a.types.tkhd, new Uint8Array([1, 0, 0, 7, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 3, c >> 24 & 255, c >> 16 & 255, c >> 8 & 255, 255 & c, 0, 0, 0, 0, h >> 24, h >> 16 & 255, h >> 8 & 255, 255 & h, i >> 24, i >> 16 & 255, i >> 8 & 255, 255 & i, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 64, 0, 0, 0, e >> 8 & 255, 255 & e, 0, 0, g >> 8 & 255, 255 & g, 0, 0]))
                        }
                    }, {
                        key: "traf",
                        value: function(b, c) {
                            var d = a.sdtp(b)
                              , e = b.id
                              , g = Math.floor(c / (f + 1))
                              , h = Math.floor(c % (f + 1));
                            return a.box(a.types.traf, a.box(a.types.tfhd, new Uint8Array([0, 0, 0, 0, e >> 24, e >> 16 & 255, e >> 8 & 255, 255 & e])), a.box(a.types.tfdt, new Uint8Array([1, 0, 0, 0, g >> 24, g >> 16 & 255, g >> 8 & 255, 255 & g, h >> 24, h >> 16 & 255, h >> 8 & 255, 255 & h])), a.trun(b, d.length + 16 + 20 + 8 + 16 + 8 + 8), d)
                        }
                    }, {
                        key: "trak",
                        value: function(b) {
                            return b.duration = b.duration || 4294967295,
                            a.box(a.types.trak, a.tkhd(b), a.mdia(b))
                        }
                    }, {
                        key: "trex",
                        value: function(b) {
                            var c = b.id;
                            return a.box(a.types.trex, new Uint8Array([0, 0, 0, 0, c >> 24, c >> 16 & 255, c >> 8 & 255, 255 & c, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1]))
                        }
                    }, {
                        key: "trun",
                        value: function(b, c) {
                            var d, e, f, g, h, i, j = b.samples || [], k = j.length, l = 12 + 16 * k, m = new Uint8Array(l);
                            for (c += 8 + l,
                            m.set([0, 0, 15, 1, k >>> 24 & 255, k >>> 16 & 255, k >>> 8 & 255, 255 & k, c >>> 24 & 255, c >>> 16 & 255, c >>> 8 & 255, 255 & c], 0),
                            d = 0; d < k; d++)
                                e = j[d],
                                f = e.duration,
                                g = e.size,
                                h = e.flags,
                                i = e.cts,
                                m.set([f >>> 24 & 255, f >>> 16 & 255, f >>> 8 & 255, 255 & f, g >>> 24 & 255, g >>> 16 & 255, g >>> 8 & 255, 255 & g, h.isLeading << 2 | h.dependsOn, h.isDependedOn << 6 | h.hasRedundancy << 4 | h.paddingValue << 1 | h.isNonSync, 61440 & h.degradPrio, 15 & h.degradPrio, i >>> 24 & 255, i >>> 16 & 255, i >>> 8 & 255, 255 & i], 12 + 16 * d);
                            return a.box(a.types.trun, m)
                        }
                    }, {
                        key: "initSegment",
                        value: function(b) {
                            a.types || a.init();
                            var c, d = a.moov(b);
                            return c = new Uint8Array(a.FTYP.byteLength + d.byteLength),
                            c.set(a.FTYP),
                            c.set(d, a.FTYP.byteLength),
                            c
                        }
                    }]),
                    a
                }();
                c.default = g
            }
            , {}],
            42: [function(a, b, c) {
                "use strict";
                function d(a) {
                    return a && a.__esModule ? a : {
                        default: a
                    }
                }
                function e(a, b) {
                    if (!(a instanceof b))
                        throw new TypeError("Cannot call a class as a function")
                }
                Object.defineProperty(c, "__esModule", {
                    value: !0
                });
                var f = function() {
                    function a(a, b) {
                        for (var c = 0; c < b.length; c++) {
                            var d = b[c];
                            d.enumerable = d.enumerable || !1,
                            d.configurable = !0,
                            "value"in d && (d.writable = !0),
                            Object.defineProperty(a, d.key, d)
                        }
                    }
                    return function(b, c, d) {
                        return c && a(b.prototype, c),
                        d && a(b, d),
                        b
                    }
                }()
                  , g = a(33)
                  , h = d(g)
                  , i = a(32)
                  , j = d(i)
                  , k = a(50)
                  , l = a(41)
                  , m = d(l)
                  , n = a(30)
                  , o = function() {
                    function a(b, c, d, f) {
                        e(this, a),
                        this.observer = b,
                        this.config = c,
                        this.typeSupported = d;
                        var g = navigator.userAgent;
                        this.isSafari = f && f.indexOf("Apple") > -1 && g && !g.match("CriOS"),
                        this.ISGenerated = !1
                    }
                    return f(a, [{
                        key: "destroy",
                        value: function() {}
                    }, {
                        key: "resetTimeStamp",
                        value: function(a) {
                            this._initPTS = this._initDTS = a
                        }
                    }, {
                        key: "resetInitSegment",
                        value: function() {
                            this.ISGenerated = !1
                        }
                    }, {
                        key: "remux",
                        value: function(a, b, c, d, e, f, g) {
                            if (this.ISGenerated || this.generateIS(a, b, e),
                            this.ISGenerated)
                                if (a.samples.length) {
                                    var h = this.remuxAudio(a, e, f, g);
                                    if (b.samples.length) {
                                        var i = void 0;
                                        h && (i = h.endPTS - h.startPTS),
                                        this.remuxVideo(b, e, f, i)
                                    }
                                } else {
                                    var k = void 0;
                                    b.samples.length && (k = this.remuxVideo(b, e, f)),
                                    k && a.codec && this.remuxEmptyAudio(a, e, f, k)
                                }
                            c.samples.length && this.remuxID3(c, e),
                            d.samples.length && this.remuxText(d, e),
                            this.observer.trigger(j.default.FRAG_PARSED)
                        }
                    }, {
                        key: "generateIS",
                        value: function(a, b, c) {
                            var d, e, f = this.observer, g = a.samples, h = b.samples, i = this.typeSupported, l = "audio/mp4", o = {}, p = {
                                tracks: o
                            }, q = void 0 === this._initPTS;
                            if (q && (d = e = 1 / 0),
                            a.config && g.length && (a.timescale = a.samplerate,
                            k.logger.log("audio sampling rate : " + a.samplerate),
                            a.isAAC || (i.mpeg ? (l = "audio/mpeg",
                            a.codec = "") : i.mp3 && (a.codec = "mp3")),
                            o.audio = {
                                container: l,
                                codec: a.codec,
                                initSegment: !a.isAAC && i.mpeg ? new Uint8Array : m.default.initSegment([a]),
                                metadata: {
                                    channelCount: a.channelCount
                                }
                            },
                            q && (d = e = g[0].pts - a.inputTimeScale * c)),
                            b.sps && b.pps && h.length) {
                                var r = b.inputTimeScale;
                                b.timescale = r,
                                o.video = {
                                    container: "video/mp4",
                                    codec: b.codec,
                                    initSegment: m.default.initSegment([b]),
                                    metadata: {
                                        width: b.width,
                                        height: b.height
                                    }
                                },
                                q && (d = Math.min(d, h[0].pts - r * c),
                                e = Math.min(e, h[0].dts - r * c),
                                this.observer.trigger(j.default.INIT_PTS_FOUND, {
                                    initPTS: d
                                }))
                            }
                            Object.keys(o).length ? (f.trigger(j.default.FRAG_PARSING_INIT_SEGMENT, p),
                            this.ISGenerated = !0,
                            q && (this._initPTS = d,
                            this._initDTS = e)) : f.trigger(j.default.ERROR, {
                                type: n.ErrorTypes.MEDIA_ERROR,
                                details: n.ErrorDetails.FRAG_PARSING_ERROR,
                                fatal: !1,
                                reason: "no audio/video samples found"
                            })
                        }
                    }, {
                        key: "remuxVideo",
                        value: function(a, b, c, d) {
                            var e, f, g, h, i, l, o, p, q = 8, r = a.timescale, s = a.samples, t = [], u = s.length, v = this._PTSNormalize, w = this._initDTS;
                            s.sort(function(a, b) {
                                var c = a.dts - b.dts
                                  , d = a.pts - b.pts;
                                return c ? c : d ? d : a.id - b.id
                            });
                            var x = s.reduce(function(a, b) {
                                return Math.max(Math.min(a, b.pts - b.dts), -18e3)
                            }, 0);
                            if (x < 0) {
                                k.logger.warn("PTS < DTS detected in video samples, shifting DTS by " + Math.round(x / 90) + " ms to overcome this issue");
                                for (var y = 0; y < s.length; y++)
                                    s[y].dts += x
                            }
                            var z = void 0;
                            z = c ? this.nextAvcDts : b * r;
                            var A = s[0];
                            i = Math.max(v(A.dts - w, z), 0),
                            h = Math.max(v(A.pts - w, z), 0);
                            var B = Math.round((i - z) / 90);
                            c && B && (B > 1 ? k.logger.log("AVC:" + B + " ms hole between fragments detected,filling it") : B < -1 && k.logger.log("AVC:" + -B + " ms overlapping between fragments detected"),
                            i = z,
                            s[0].dts = i + w,
                            h = Math.max(h - B, z),
                            s[0].pts = h + w,
                            k.logger.log("Video/PTS/DTS adjusted: " + Math.round(h / 90) + "/" + Math.round(i / 90) + ",delta:" + B + " ms")),
                            l = i,
                            A = s[s.length - 1],
                            p = Math.max(v(A.dts - w, z), 0),
                            o = Math.max(v(A.pts - w, z), 0),
                            o = Math.max(o, p);
                            var C = this.isSafari;
                            C && (e = Math.round((p - i) / (s.length - 1)));
                            for (var D = 0, E = 0, F = 0; F < u; F++) {
                                for (var G = s[F], H = G.units, I = H.length, J = 0, K = 0; K < I; K++)
                                    J += H[K].data.length;
                                E += J,
                                D += I,
                                G.length = J,
                                C ? G.dts = i + F * e : G.dts = Math.max(v(G.dts - w, z), i),
                                G.pts = Math.max(v(G.pts - w, z), G.dts)
                            }
                            var L = E + 4 * D + 8;
                            try {
                                f = new Uint8Array(L)
                            } catch (a) {
                                return void this.observer.trigger(j.default.ERROR, {
                                    type: n.ErrorTypes.MUX_ERROR,
                                    details: n.ErrorDetails.REMUX_ALLOC_ERROR,
                                    fatal: !1,
                                    bytes: L,
                                    reason: "fail allocating video mdat " + L
                                })
                            }
                            var M = new DataView(f.buffer);
                            M.setUint32(0, L),
                            f.set(m.default.types.mdat, 4);
                            for (var N = 0; N < u; N++) {
                                for (var O = s[N], P = O.units, Q = 0, R = void 0, S = 0, T = P.length; S < T; S++) {
                                    var U = P[S]
                                      , V = U.data
                                      , W = U.data.byteLength;
                                    M.setUint32(q, W),
                                    q += 4,
                                    f.set(V, q),
                                    q += W,
                                    Q += 4 + W
                                }
                                if (C)
                                    R = Math.max(0, e * Math.round((O.pts - O.dts) / e));
                                else {
                                    if (N < u - 1)
                                        e = s[N + 1].dts - O.dts;
                                    else {
                                        var X = this.config
                                          , Y = O.dts - s[N > 0 ? N - 1 : N].dts;
                                        if (X.stretchShortVideoTrack) {
                                            var Z = X.maxBufferHole
                                              , $ = X.maxSeekHole
                                              , _ = Math.floor(Math.min(Z, $) * r)
                                              , aa = (d ? h + d * r : this.nextAudioPts) - O.pts;
                                            aa > _ ? (e = aa - Y,
                                            e < 0 && (e = Y),
                                            k.logger.log("It is approximately " + aa / 90 + " ms to the next segment; using duration " + e / 90 + " ms for the last video frame.")) : e = Y
                                        } else
                                            e = Y
                                    }
                                    R = Math.round(O.pts - O.dts)
                                }
                                t.push({
                                    size: Q,
                                    duration: e,
                                    cts: R,
                                    flags: {
                                        isLeading: 0,
                                        isDependedOn: 0,
                                        hasRedundancy: 0,
                                        degradPrio: 0,
                                        dependsOn: O.key ? 2 : 1,
                                        isNonSync: O.key ? 0 : 1
                                    }
                                })
                            }
                            this.nextAvcDts = p + e;
                            var ba = a.dropped;
                            if (a.len = 0,
                            a.nbNalu = 0,
                            a.dropped = 0,
                            t.length && navigator.userAgent.toLowerCase().indexOf("chrome") > -1) {
                                var ca = t[0].flags;
                                ca.dependsOn = 2,
                                ca.isNonSync = 0
                            }
                            a.samples = t,
                            g = m.default.moof(a.sequenceNumber++, i, a),
                            a.samples = [];
                            var da = {
                                data1: g,
                                data2: f,
                                startPTS: h / r,
                                endPTS: (o + e) / r,
                                startDTS: i / r,
                                endDTS: this.nextAvcDts / r,
                                type: "video",
                                nb: t.length,
                                dropped: ba
                            };
                            return this.observer.trigger(j.default.FRAG_PARSING_DATA, da),
                            da
                        }
                    }, {
                        key: "remuxAudio",
                        value: function(a, b, c, d) {
                            var e, f, g, i, l, o, p, q, r, s, t, u, v, w, x, y, z = a.inputTimeScale, A = a.timescale, B = z / A, C = a.isAAC ? 1024 : 1152, D = C * B, E = this._PTSNormalize, F = this._initDTS, G = !a.isAAC && this.typeSupported.mpeg, H = G ? 0 : 8, I = [], J = [];
                            if (a.samples.sort(function(a, b) {
                                return a.pts - b.pts
                            }),
                            J = a.samples,
                            y = this.nextAudioPts,
                            c |= J.length && y && (Math.abs(b - y / z) < .1 || Math.abs(J[0].pts - y - F) < 20 * D),
                            c || (y = b * z),
                            d && a.isAAC)
                                for (var K = 0, L = y; K < J.length; ) {
                                    var M = J[K]
                                      , N = E(M.pts - F, y)
                                      , O = N - L;
                                    if (O <= -D)
                                        k.logger.warn("Dropping 1 audio frame @ " + (L / z).toFixed(3) + "s due to " + Math.abs(1e3 * O / z) + " ms overlap."),
                                        J.splice(K, 1),
                                        a.len -= M.unit.length;
                                    else if (O >= D && L) {
                                        var P = Math.round(O / D);
                                        k.logger.warn("Injecting " + P + " audio frame @ " + (L / z).toFixed(3) + "s due to " + 1e3 * O / z + " ms gap.");
                                        for (var Q = 0; Q < P; Q++)
                                            x = L + F,
                                            x = Math.max(x, F),
                                            w = h.default.getSilentFrame(a.manifestCodec || a.codec, a.channelCount),
                                            w || (k.logger.log("Unable to get silent frame for given audio codec; duplicating last frame instead."),
                                            w = M.unit.subarray()),
                                            J.splice(K, 0, {
                                                unit: w,
                                                pts: x,
                                                dts: x
                                            }),
                                            a.len += w.length,
                                            L += D,
                                            K += 1;
                                        M.pts = M.dts = L + F,
                                        L += D,
                                        K += 1
                                    } else
                                        Math.abs(O) > .1 * D,
                                        L += D,
                                        0 === K ? M.pts = M.dts = F + y : M.pts = M.dts = J[K - 1].pts + D,
                                        K += 1
                                }
                            for (var R = 0, S = J.length; R < S; R++) {
                                if (f = J[R],
                                i = f.unit,
                                s = f.pts - F,
                                t = f.dts - F,
                                void 0 !== r)
                                    u = E(s, r),
                                    v = E(t, r),
                                    g.duration = Math.round((v - r) / B);
                                else {
                                    u = E(s, y),
                                    v = E(t, y);
                                    var T = Math.round(1e3 * (u - y) / z)
                                      , U = 0;
                                    if (c && a.isAAC && T) {
                                        if (T > 0)
                                            U = Math.round((u - y) / D),
                                            k.logger.log(T + " ms hole between AAC samples detected,filling it"),
                                            U > 0 && (w = h.default.getSilentFrame(a.manifestCodec || a.codec, a.channelCount),
                                            w || (w = i.subarray()),
                                            a.len += U * w.length);
                                        else if (T < -12) {
                                            k.logger.log(-T + " ms overlapping between AAC samples detected, drop frame"),
                                            a.len -= i.byteLength;
                                            continue
                                        }
                                        u = v = y
                                    }
                                    if (p = Math.max(0, u),
                                    q = Math.max(0, v),
                                    !(a.len > 0))
                                        return;
                                    var V = G ? a.len : a.len + 8;
                                    try {
                                        l = new Uint8Array(V)
                                    } catch (a) {
                                        return void this.observer.trigger(j.default.ERROR, {
                                            type: n.ErrorTypes.MUX_ERROR,
                                            details: n.ErrorDetails.REMUX_ALLOC_ERROR,
                                            fatal: !1,
                                            bytes: V,
                                            reason: "fail allocating audio mdat " + V
                                        })
                                    }
                                    G || (e = new DataView(l.buffer),
                                    e.setUint32(0, V),
                                    l.set(m.default.types.mdat, 4));
                                    for (var W = 0; W < U; W++)
                                        x = u - (U - W) * D,
                                        w = h.default.getSilentFrame(a.manifestCodec || a.codec, a.channelCount),
                                        w || (k.logger.log("Unable to get silent frame for given audio codec; duplicating this frame instead."),
                                        w = i.subarray()),
                                        l.set(w, H),
                                        H += w.byteLength,
                                        g = {
                                            size: w.byteLength,
                                            cts: 0,
                                            duration: 1024,
                                            flags: {
                                                isLeading: 0,
                                                isDependedOn: 0,
                                                hasRedundancy: 0,
                                                degradPrio: 0,
                                                dependsOn: 1
                                            }
                                        },
                                        I.push(g)
                                }
                                l.set(i, H);
                                var X = i.byteLength;
                                H += X,
                                g = {
                                    size: X,
                                    cts: 0,
                                    duration: 0,
                                    flags: {
                                        isLeading: 0,
                                        isDependedOn: 0,
                                        hasRedundancy: 0,
                                        degradPrio: 0,
                                        dependsOn: 1
                                    }
                                },
                                I.push(g),
                                r = v
                            }
                            var Y = 0
                              , Z = I.length;
                            if (Z >= 2 && (Y = I[Z - 2].duration,
                            g.duration = Y),
                            Z) {
                                this.nextAudioPts = u + B * Y,
                                a.len = 0,
                                a.samples = I,
                                o = G ? new Uint8Array : m.default.moof(a.sequenceNumber++, q / B, a),
                                a.samples = [];
                                var $ = {
                                    data1: o,
                                    data2: l,
                                    startPTS: p / z,
                                    endPTS: this.nextAudioPts / z,
                                    startDTS: q / z,
                                    endDTS: (v + B * Y) / z,
                                    type: "audio",
                                    nb: Z
                                };
                                return this.observer.trigger(j.default.FRAG_PARSING_DATA, $),
                                $
                            }
                            return null
                        }
                    }, {
                        key: "remuxEmptyAudio",
                        value: function(a, b, c, d) {
                            var e = a.inputTimeScale
                              , f = a.samplerate ? a.samplerate : e
                              , g = e / f
                              , i = this.nextAudioPts
                              , j = (void 0 !== i ? i : d.startDTS * e) + this._initDTS
                              , l = d.endDTS * e + this._initDTS
                              , m = 1024
                              , n = g * m
                              , o = Math.ceil((l - j) / n)
                              , p = h.default.getSilentFrame(a.manifestCodec || a.codec, a.channelCount);
                            if (k.logger.warn("remux empty Audio"),
                            !p)
                                return void k.logger.trace("Unable to remuxEmptyAudio since we were unable to get a silent frame for given audio codec!");
                            for (var q = [], r = 0; r < o; r++) {
                                var s = j + r * n;
                                q.push({
                                    unit: p,
                                    pts: s,
                                    dts: s
                                }),
                                a.len += p.length
                            }
                            a.samples = q,
                            this.remuxAudio(a, b, c)
                        }
                    }, {
                        key: "remuxID3",
                        value: function(a, b) {
                            var c, d = a.samples.length, e = a.inputTimeScale, f = this._initPTS, g = this._initDTS;
                            if (d) {
                                for (var h = 0; h < d; h++)
                                    c = a.samples[h],
                                    c.pts = (c.pts - f) / e,
                                    c.dts = (c.dts - g) / e;
                                this.observer.trigger(j.default.FRAG_PARSING_METADATA, {
                                    samples: a.samples
                                })
                            }
                            a.samples = [],
                            b = b
                        }
                    }, {
                        key: "remuxText",
                        value: function(a, b) {
                            a.samples.sort(function(a, b) {
                                return a.pts - b.pts
                            });
                            var c, d = a.samples.length, e = a.inputTimeScale, f = this._initPTS;
                            if (d) {
                                for (var g = 0; g < d; g++)
                                    c = a.samples[g],
                                    c.pts = (c.pts - f) / e;
                                this.observer.trigger(j.default.FRAG_PARSING_USERDATA, {
                                    samples: a.samples
                                })
                            }
                            a.samples = [],
                            b = b
                        }
                    }, {
                        key: "_PTSNormalize",
                        value: function(a, b) {
                            var c;
                            if (void 0 === b)
                                return a;
                            for (c = b < a ? -8589934592 : 8589934592; Math.abs(a - b) > 4294967296; )
                                a += c;
                            return a
                        }
                    }]),
                    a
                }();
                c.default = o
            }
            , {
                30: 30,
                32: 32,
                33: 33,
                41: 41,
                50: 50
            }],
            43: [function(a, b, c) {
                "use strict";
                function d(a) {
                    return a && a.__esModule ? a : {
                        default: a
                    }
                }
                function e(a, b) {
                    if (!(a instanceof b))
                        throw new TypeError("Cannot call a class as a function")
                }
                Object.defineProperty(c, "__esModule", {
                    value: !0
                });
                var f = function() {
                    function a(a, b) {
                        for (var c = 0; c < b.length; c++) {
                            var d = b[c];
                            d.enumerable = d.enumerable || !1,
                            d.configurable = !0,
                            "value"in d && (d.writable = !0),
                            Object.defineProperty(a, d.key, d)
                        }
                    }
                    return function(b, c, d) {
                        return c && a(b.prototype, c),
                        d && a(b, d),
                        b
                    }
                }()
                  , g = a(32)
                  , h = d(g)
                  , i = function() {
                    function a(b) {
                        e(this, a),
                        this.observer = b
                    }
                    return f(a, [{
                        key: "destroy",
                        value: function() {}
                    }, {
                        key: "resetTimeStamp",
                        value: function() {}
                    }, {
                        key: "resetInitSegment",
                        value: function() {}
                    }, {
                        key: "remux",
                        value: function(a, b, c, d, e, f, g, i) {
                            var j = this.observer
                              , k = "";
                            a && (k += "audio"),
                            b && (k += "video"),
                            j.trigger(h.default.FRAG_PARSING_DATA, {
                                data1: i,
                                startPTS: e,
                                startDTS: e,
                                type: k,
                                nb: 1,
                                dropped: 0
                            }),
                            j.trigger(h.default.FRAG_PARSED)
                        }
                    }]),
                    a
                }();
                c.default = i
            }
            , {
                32: 32
            }],
            44: [function(a, b, c) {
                "use strict";
                function d(a, b) {
                    if (!(a instanceof b))
                        throw new TypeError("Cannot call a class as a function")
                }
                Object.defineProperty(c, "__esModule", {
                    value: !0
                });
                var e = function() {
                    function a(a, b) {
                        for (var c = 0; c < b.length; c++) {
                            var d = b[c];
                            d.enumerable = d.enumerable || !1,
                            d.configurable = !0,
                            "value"in d && (d.writable = !0),
                            Object.defineProperty(a, d.key, d);
                        }
                    }
                    return function(b, c, d) {
                        return c && a(b.prototype, c),
                        d && a(b, d),
                        b
                    }
                }()
                  , f = /^(\d+)x(\d+)$/
                  , g = /\s*(.+?)\s*=((?:\".*?\")|.*?)(?:,|$)/g
                  , h = function() {
                    function a(b) {
                        d(this, a),
                        "string" == typeof b && (b = a.parseAttrList(b));
                        for (var c in b)
                            b.hasOwnProperty(c) && (this[c] = b[c])
                    }
                    return e(a, [{
                        key: "decimalInteger",
                        value: function(a) {
                            var b = parseInt(this[a], 10);
                            return b > Number.MAX_SAFE_INTEGER ? 1 / 0 : b
                        }
                    }, {
                        key: "hexadecimalInteger",
                        value: function(a) {
                            if (this[a]) {
                                var b = (this[a] || "0x").slice(2);
                                b = (1 & b.length ? "0" : "") + b;
                                for (var c = new Uint8Array(b.length / 2), d = 0; d < b.length / 2; d++)
                                    c[d] = parseInt(b.slice(2 * d, 2 * d + 2), 16);
                                return c
                            }
                            return null
                        }
                    }, {
                        key: "hexadecimalIntegerAsNumber",
                        value: function(a) {
                            var b = parseInt(this[a], 16);
                            return b > Number.MAX_SAFE_INTEGER ? 1 / 0 : b
                        }
                    }, {
                        key: "decimalFloatingPoint",
                        value: function(a) {
                            return parseFloat(this[a])
                        }
                    }, {
                        key: "enumeratedString",
                        value: function(a) {
                            return this[a]
                        }
                    }, {
                        key: "decimalResolution",
                        value: function(a) {
                            var b = f.exec(this[a]);
                            if (null !== b)
                                return {
                                    width: parseInt(b[1], 10),
                                    height: parseInt(b[2], 10)
                                }
                        }
                    }], [{
                        key: "parseAttrList",
                        value: function(a) {
                            var b, c = {};
                            for (g.lastIndex = 0; null !== (b = g.exec(a)); ) {
                                var d = b[2]
                                  , e = '"';
                                0 === d.indexOf(e) && d.lastIndexOf(e) === d.length - 1 && (d = d.slice(1, -1)),
                                c[b[1]] = d
                            }
                            return c
                        }
                    }]),
                    a
                }();
                c.default = h
            }
            , {}],
            45: [function(a, b, c) {
                "use strict";
                var d = {
                    search: function(a, b) {
                        for (var c = 0, d = a.length - 1, e = null, f = null; c <= d; ) {
                            e = (c + d) / 2 | 0,
                            f = a[e];
                            var g = b(f);
                            if (g > 0)
                                c = e + 1;
                            else {
                                if (!(g < 0))
                                    return f;
                                d = e - 1
                            }
                        }
                        return null
                    }
                };
                b.exports = d
            }
            , {}],
            46: [function(a, b, c) {
                "use strict";
                function d(a, b) {
                    if (!(a instanceof b))
                        throw new TypeError("Cannot call a class as a function")
                }
                Object.defineProperty(c, "__esModule", {
                    value: !0
                });
                var e = function() {
                    function a(a, b) {
                        for (var c = 0; c < b.length; c++) {
                            var d = b[c];
                            d.enumerable = d.enumerable || !1,
                            d.configurable = !0,
                            "value"in d && (d.writable = !0),
                            Object.defineProperty(a, d.key, d)
                        }
                    }
                    return function(b, c, d) {
                        return c && a(b.prototype, c),
                        d && a(b, d),
                        b
                    }
                }()
                  , f = {
                    42: 225,
                    92: 233,
                    94: 237,
                    95: 243,
                    96: 250,
                    123: 231,
                    124: 247,
                    125: 209,
                    126: 241,
                    127: 9608,
                    128: 174,
                    129: 176,
                    130: 189,
                    131: 191,
                    132: 8482,
                    133: 162,
                    134: 163,
                    135: 9834,
                    136: 224,
                    137: 32,
                    138: 232,
                    139: 226,
                    140: 234,
                    141: 238,
                    142: 244,
                    143: 251,
                    144: 193,
                    145: 201,
                    146: 211,
                    147: 218,
                    148: 220,
                    149: 252,
                    150: 8216,
                    151: 161,
                    152: 42,
                    153: 8217,
                    154: 9473,
                    155: 169,
                    156: 8480,
                    157: 8226,
                    158: 8220,
                    159: 8221,
                    160: 192,
                    161: 194,
                    162: 199,
                    163: 200,
                    164: 202,
                    165: 203,
                    166: 235,
                    167: 206,
                    168: 207,
                    169: 239,
                    170: 212,
                    171: 217,
                    172: 249,
                    173: 219,
                    174: 171,
                    175: 187,
                    176: 195,
                    177: 227,
                    178: 205,
                    179: 204,
                    180: 236,
                    181: 210,
                    182: 242,
                    183: 213,
                    184: 245,
                    185: 123,
                    186: 125,
                    187: 92,
                    188: 94,
                    189: 95,
                    190: 124,
                    191: 8764,
                    192: 196,
                    193: 228,
                    194: 214,
                    195: 246,
                    196: 223,
                    197: 165,
                    198: 164,
                    199: 9475,
                    200: 197,
                    201: 229,
                    202: 216,
                    203: 248,
                    204: 9487,
                    205: 9491,
                    206: 9495,
                    207: 9499
                }
                  , g = function(a) {
                    var b = a;
                    return f.hasOwnProperty(a) && (b = f[a]),
                    String.fromCharCode(b)
                }
                  , h = 15
                  , i = 100
                  , j = {
                    17: 1,
                    18: 3,
                    21: 5,
                    22: 7,
                    23: 9,
                    16: 11,
                    19: 12,
                    20: 14
                }
                  , k = {
                    17: 2,
                    18: 4,
                    21: 6,
                    22: 8,
                    23: 10,
                    19: 13,
                    20: 15
                }
                  , l = {
                    25: 1,
                    26: 3,
                    29: 5,
                    30: 7,
                    31: 9,
                    24: 11,
                    27: 12,
                    28: 14
                }
                  , m = {
                    25: 2,
                    26: 4,
                    29: 6,
                    30: 8,
                    31: 10,
                    27: 13,
                    28: 15
                }
                  , n = ["white", "green", "blue", "cyan", "red", "yellow", "magenta", "black", "transparent"]
                  , o = {
                    verboseFilter: {
                        DATA: 3,
                        DEBUG: 3,
                        INFO: 2,
                        WARNING: 2,
                        TEXT: 1,
                        ERROR: 0
                    },
                    time: null,
                    verboseLevel: 0,
                    setTime: function(a) {
                        this.time = a
                    },
                    log: function(a, b) {
                        var c = this.verboseFilter[a];
                        this.verboseLevel >= c && console.log(this.time + " [" + a + "] " + b)
                    }
                }
                  , p = function(a) {
                    for (var b = [], c = 0; c < a.length; c++)
                        b.push(a[c].toString(16));
                    return b
                }
                  , q = function() {
                    function a(b, c, e, f, g) {
                        d(this, a),
                        this.foreground = b || "white",
                        this.underline = c || !1,
                        this.italics = e || !1,
                        this.background = f || "black",
                        this.flash = g || !1
                    }
                    return e(a, [{
                        key: "reset",
                        value: function() {
                            this.foreground = "white",
                            this.underline = !1,
                            this.italics = !1,
                            this.background = "black",
                            this.flash = !1
                        }
                    }, {
                        key: "setStyles",
                        value: function(a) {
                            for (var b = ["foreground", "underline", "italics", "background", "flash"], c = 0; c < b.length; c++) {
                                var d = b[c];
                                a.hasOwnProperty(d) && (this[d] = a[d])
                            }
                        }
                    }, {
                        key: "isDefault",
                        value: function() {
                            return "white" === this.foreground && !this.underline && !this.italics && "black" === this.background && !this.flash
                        }
                    }, {
                        key: "equals",
                        value: function(a) {
                            return this.foreground === a.foreground && this.underline === a.underline && this.italics === a.italics && this.background === a.background && this.flash === a.flash
                        }
                    }, {
                        key: "copy",
                        value: function(a) {
                            this.foreground = a.foreground,
                            this.underline = a.underline,
                            this.italics = a.italics,
                            this.background = a.background,
                            this.flash = a.flash
                        }
                    }, {
                        key: "toString",
                        value: function() {
                            return "color=" + this.foreground + ", underline=" + this.underline + ", italics=" + this.italics + ", background=" + this.background + ", flash=" + this.flash
                        }
                    }]),
                    a
                }()
                  , r = function() {
                    function a(b, c, e, f, g, h) {
                        d(this, a),
                        this.uchar = b || " ",
                        this.penState = new q(c,e,f,g,h)
                    }
                    return e(a, [{
                        key: "reset",
                        value: function() {
                            this.uchar = " ",
                            this.penState.reset()
                        }
                    }, {
                        key: "setChar",
                        value: function(a, b) {
                            this.uchar = a,
                            this.penState.copy(b)
                        }
                    }, {
                        key: "setPenState",
                        value: function(a) {
                            this.penState.copy(a)
                        }
                    }, {
                        key: "equals",
                        value: function(a) {
                            return this.uchar === a.uchar && this.penState.equals(a.penState)
                        }
                    }, {
                        key: "copy",
                        value: function(a) {
                            this.uchar = a.uchar,
                            this.penState.copy(a.penState)
                        }
                    }, {
                        key: "isEmpty",
                        value: function() {
                            return " " === this.uchar && this.penState.isDefault()
                        }
                    }]),
                    a
                }()
                  , s = function() {
                    function a() {
                        d(this, a),
                        this.chars = [];
                        for (var b = 0; b < i; b++)
                            this.chars.push(new r);
                        this.pos = 0,
                        this.currPenState = new q
                    }
                    return e(a, [{
                        key: "equals",
                        value: function(a) {
                            for (var b = !0, c = 0; c < i; c++)
                                if (!this.chars[c].equals(a.chars[c])) {
                                    b = !1;
                                    break
                                }
                            return b
                        }
                    }, {
                        key: "copy",
                        value: function(a) {
                            for (var b = 0; b < i; b++)
                                this.chars[b].copy(a.chars[b])
                        }
                    }, {
                        key: "isEmpty",
                        value: function() {
                            for (var a = !0, b = 0; b < i; b++)
                                if (!this.chars[b].isEmpty()) {
                                    a = !1;
                                    break
                                }
                            return a
                        }
                    }, {
                        key: "setCursor",
                        value: function(a) {
                            this.pos !== a && (this.pos = a),
                            this.pos < 0 ? (o.log("ERROR", "Negative cursor position " + this.pos),
                            this.pos = 0) : this.pos > i && (o.log("ERROR", "Too large cursor position " + this.pos),
                            this.pos = i)
                        }
                    }, {
                        key: "moveCursor",
                        value: function(a) {
                            var b = this.pos + a;
                            if (a > 1)
                                for (var c = this.pos + 1; c < b + 1; c++)
                                    this.chars[c].setPenState(this.currPenState);
                            this.setCursor(b)
                        }
                    }, {
                        key: "backSpace",
                        value: function() {
                            this.moveCursor(-1),
                            this.chars[this.pos].setChar(" ", this.currPenState)
                        }
                    }, {
                        key: "insertChar",
                        value: function(a) {
                            a >= 144 && this.backSpace();
                            var b = g(a);
                            return this.pos >= i ? void o.log("ERROR", "Cannot insert " + a.toString(16) + " (" + b + ") at position " + this.pos + ". Skipping it!") : (this.chars[this.pos].setChar(b, this.currPenState),
                            void this.moveCursor(1))
                        }
                    }, {
                        key: "clearFromPos",
                        value: function(a) {
                            var b;
                            for (b = a; b < i; b++)
                                this.chars[b].reset()
                        }
                    }, {
                        key: "clear",
                        value: function() {
                            this.clearFromPos(0),
                            this.pos = 0,
                            this.currPenState.reset()
                        }
                    }, {
                        key: "clearToEndOfRow",
                        value: function() {
                            this.clearFromPos(this.pos)
                        }
                    }, {
                        key: "getTextString",
                        value: function() {
                            for (var a = [], b = !0, c = 0; c < i; c++) {
                                var d = this.chars[c].uchar;
                                " " !== d && (b = !1),
                                a.push(d)
                            }
                            return b ? "" : a.join("")
                        }
                    }, {
                        key: "setPenStyles",
                        value: function(a) {
                            this.currPenState.setStyles(a);
                            var b = this.chars[this.pos];
                            b.setPenState(this.currPenState)
                        }
                    }]),
                    a
                }()
                  , t = function() {
                    function a() {
                        d(this, a),
                        this.rows = [];
                        for (var b = 0; b < h; b++)
                            this.rows.push(new s);
                        this.currRow = h - 1,
                        this.nrRollUpRows = null,
                        this.reset()
                    }
                    return e(a, [{
                        key: "reset",
                        value: function() {
                            for (var a = 0; a < h; a++)
                                this.rows[a].clear();
                            this.currRow = h - 1
                        }
                    }, {
                        key: "equals",
                        value: function(a) {
                            for (var b = !0, c = 0; c < h; c++)
                                if (!this.rows[c].equals(a.rows[c])) {
                                    b = !1;
                                    break
                                }
                            return b
                        }
                    }, {
                        key: "copy",
                        value: function(a) {
                            for (var b = 0; b < h; b++)
                                this.rows[b].copy(a.rows[b])
                        }
                    }, {
                        key: "isEmpty",
                        value: function() {
                            for (var a = !0, b = 0; b < h; b++)
                                if (!this.rows[b].isEmpty()) {
                                    a = !1;
                                    break
                                }
                            return a
                        }
                    }, {
                        key: "backSpace",
                        value: function() {
                            var a = this.rows[this.currRow];
                            a.backSpace()
                        }
                    }, {
                        key: "clearToEndOfRow",
                        value: function() {
                            var a = this.rows[this.currRow];
                            a.clearToEndOfRow()
                        }
                    }, {
                        key: "insertChar",
                        value: function(a) {
                            var b = this.rows[this.currRow];
                            b.insertChar(a)
                        }
                    }, {
                        key: "setPen",
                        value: function(a) {
                            var b = this.rows[this.currRow];
                            b.setPenStyles(a)
                        }
                    }, {
                        key: "moveCursor",
                        value: function(a) {
                            var b = this.rows[this.currRow];
                            b.moveCursor(a)
                        }
                    }, {
                        key: "setCursor",
                        value: function(a) {
                            o.log("INFO", "setCursor: " + a);
                            var b = this.rows[this.currRow];
                            b.setCursor(a)
                        }
                    }, {
                        key: "setPAC",
                        value: function(a) {
                            o.log("INFO", "pacData = " + JSON.stringify(a));
                            var b = a.row - 1;
                            if (this.nrRollUpRows && b < this.nrRollUpRows - 1 && (b = this.nrRollUpRows - 1),
                            this.nrRollUpRows && this.currRow !== b) {
                                for (var c = 0; c < h; c++)
                                    this.rows[c].clear();
                                var d = this.currRow + 1 - this.nrRollUpRows
                                  , e = this.lastOutputScreen;
                                if (e) {
                                    var f = e.rows[d].cueStartTime;
                                    if (f && f < o.time)
                                        for (var g = 0; g < this.nrRollUpRows; g++)
                                            this.rows[b - this.nrRollUpRows + g + 1].copy(e.rows[d + g])
                                }
                            }
                            this.currRow = b;
                            var i = this.rows[this.currRow];
                            if (null !== a.indent) {
                                var j = a.indent
                                  , k = Math.max(j - 1, 0);
                                i.setCursor(a.indent),
                                a.color = i.chars[k].penState.foreground
                            }
                            var l = {
                                foreground: a.color,
                                underline: a.underline,
                                italics: a.italics,
                                background: "black",
                                flash: !1
                            };
                            this.setPen(l)
                        }
                    }, {
                        key: "setBkgData",
                        value: function(a) {
                            o.log("INFO", "bkgData = " + JSON.stringify(a)),
                            this.backSpace(),
                            this.setPen(a),
                            this.insertChar(32)
                        }
                    }, {
                        key: "setRollUpRows",
                        value: function(a) {
                            this.nrRollUpRows = a
                        }
                    }, {
                        key: "rollUp",
                        value: function() {
                            if (null === this.nrRollUpRows)
                                return void o.log("DEBUG", "roll_up but nrRollUpRows not set yet");
                            o.log("TEXT", this.getDisplayText());
                            var a = this.currRow + 1 - this.nrRollUpRows
                              , b = this.rows.splice(a, 1)[0];
                            b.clear(),
                            this.rows.splice(this.currRow, 0, b),
                            o.log("INFO", "Rolling up")
                        }
                    }, {
                        key: "getDisplayText",
                        value: function(a) {
                            a = a || !1;
                            for (var b = [], c = "", d = -1, e = 0; e < h; e++) {
                                var f = this.rows[e].getTextString();
                                f && (d = e + 1,
                                a ? b.push("Row " + d + ": '" + f + "'") : b.push(f.trim()))
                            }
                            return b.length > 0 && (c = a ? "[" + b.join(" | ") + "]" : b.join("\n")),
                            c
                        }
                    }, {
                        key: "getTextAndFormat",
                        value: function() {
                            return this.rows
                        }
                    }]),
                    a
                }()
                  , u = function() {
                    function a(b, c) {
                        d(this, a),
                        this.chNr = b,
                        this.outputFilter = c,
                        this.mode = null,
                        this.verbose = 0,
                        this.displayedMemory = new t,
                        this.nonDisplayedMemory = new t,
                        this.lastOutputScreen = new t,
                        this.currRollUpRow = this.displayedMemory.rows[h - 1],
                        this.writeScreen = this.displayedMemory,
                        this.mode = null,
                        this.cueStartTime = null
                    }
                    return e(a, [{
                        key: "reset",
                        value: function() {
                            this.mode = null,
                            this.displayedMemory.reset(),
                            this.nonDisplayedMemory.reset(),
                            this.lastOutputScreen.reset(),
                            this.currRollUpRow = this.displayedMemory.rows[h - 1],
                            this.writeScreen = this.displayedMemory,
                            this.mode = null,
                            this.cueStartTime = null,
                            this.lastCueEndTime = null
                        }
                    }, {
                        key: "getHandler",
                        value: function() {
                            return this.outputFilter
                        }
                    }, {
                        key: "setHandler",
                        value: function(a) {
                            this.outputFilter = a
                        }
                    }, {
                        key: "setPAC",
                        value: function(a) {
                            this.writeScreen.setPAC(a)
                        }
                    }, {
                        key: "setBkgData",
                        value: function(a) {
                            this.writeScreen.setBkgData(a)
                        }
                    }, {
                        key: "setMode",
                        value: function(a) {
                            a !== this.mode && (this.mode = a,
                            o.log("INFO", "MODE=" + a),
                            "MODE_POP-ON" === this.mode ? this.writeScreen = this.nonDisplayedMemory : (this.writeScreen = this.displayedMemory,
                            this.writeScreen.reset()),
                            "MODE_ROLL-UP" !== this.mode && (this.displayedMemory.nrRollUpRows = null,
                            this.nonDisplayedMemory.nrRollUpRows = null),
                            this.mode = a)
                        }
                    }, {
                        key: "insertChars",
                        value: function(a) {
                            for (var b = 0; b < a.length; b++)
                                this.writeScreen.insertChar(a[b]);
                            var c = this.writeScreen === this.displayedMemory ? "DISP" : "NON_DISP";
                            o.log("INFO", c + ": " + this.writeScreen.getDisplayText(!0)),
                            "MODE_PAINT-ON" !== this.mode && "MODE_ROLL-UP" !== this.mode || (o.log("TEXT", "DISPLAYED: " + this.displayedMemory.getDisplayText(!0)),
                            this.outputDataUpdate())
                        }
                    }, {
                        key: "ccRCL",
                        value: function() {
                            o.log("INFO", "RCL - Resume Caption Loading"),
                            this.setMode("MODE_POP-ON")
                        }
                    }, {
                        key: "ccBS",
                        value: function() {
                            o.log("INFO", "BS - BackSpace"),
                            "MODE_TEXT" !== this.mode && (this.writeScreen.backSpace(),
                            this.writeScreen === this.displayedMemory && this.outputDataUpdate())
                        }
                    }, {
                        key: "ccAOF",
                        value: function() {}
                    }, {
                        key: "ccAON",
                        value: function() {}
                    }, {
                        key: "ccDER",
                        value: function() {
                            o.log("INFO", "DER- Delete to End of Row"),
                            this.writeScreen.clearToEndOfRow(),
                            this.outputDataUpdate()
                        }
                    }, {
                        key: "ccRU",
                        value: function(a) {
                            o.log("INFO", "RU(" + a + ") - Roll Up"),
                            this.writeScreen = this.displayedMemory,
                            this.setMode("MODE_ROLL-UP"),
                            this.writeScreen.setRollUpRows(a)
                        }
                    }, {
                        key: "ccFON",
                        value: function() {
                            o.log("INFO", "FON - Flash On"),
                            this.writeScreen.setPen({
                                flash: !0
                            })
                        }
                    }, {
                        key: "ccRDC",
                        value: function() {
                            o.log("INFO", "RDC - Resume Direct Captioning"),
                            this.setMode("MODE_PAINT-ON")
                        }
                    }, {
                        key: "ccTR",
                        value: function() {
                            o.log("INFO", "TR"),
                            this.setMode("MODE_TEXT")
                        }
                    }, {
                        key: "ccRTD",
                        value: function() {
                            o.log("INFO", "RTD"),
                            this.setMode("MODE_TEXT")
                        }
                    }, {
                        key: "ccEDM",
                        value: function() {
                            o.log("INFO", "EDM - Erase Displayed Memory"),
                            this.displayedMemory.reset(),
                            this.outputDataUpdate()
                        }
                    }, {
                        key: "ccCR",
                        value: function() {
                            o.log("CR - Carriage Return"),
                            this.writeScreen.rollUp(),
                            this.outputDataUpdate()
                        }
                    }, {
                        key: "ccENM",
                        value: function() {
                            o.log("INFO", "ENM - Erase Non-displayed Memory"),
                            this.nonDisplayedMemory.reset()
                        }
                    }, {
                        key: "ccEOC",
                        value: function() {
                            if (o.log("INFO", "EOC - End Of Caption"),
                            "MODE_POP-ON" === this.mode) {
                                var a = this.displayedMemory;
                                this.displayedMemory = this.nonDisplayedMemory,
                                this.nonDisplayedMemory = a,
                                this.writeScreen = this.nonDisplayedMemory,
                                o.log("TEXT", "DISP: " + this.displayedMemory.getDisplayText())
                            }
                            this.outputDataUpdate()
                        }
                    }, {
                        key: "ccTO",
                        value: function(a) {
                            o.log("INFO", "TO(" + a + ") - Tab Offset"),
                            this.writeScreen.moveCursor(a)
                        }
                    }, {
                        key: "ccMIDROW",
                        value: function(a) {
                            var b = {
                                flash: !1
                            };
                            if (b.underline = a % 2 === 1,
                            b.italics = a >= 46,
                            b.italics)
                                b.foreground = "white";
                            else {
                                var c = Math.floor(a / 2) - 16
                                  , d = ["white", "green", "blue", "cyan", "red", "yellow", "magenta"];
                                b.foreground = d[c]
                            }
                            o.log("INFO", "MIDROW: " + JSON.stringify(b)),
                            this.writeScreen.setPen(b)
                        }
                    }, {
                        key: "outputDataUpdate",
                        value: function() {
                            var a = o.time;
                            null !== a && this.outputFilter && (this.outputFilter.updateData && this.outputFilter.updateData(a, this.displayedMemory),
                            null !== this.cueStartTime || this.displayedMemory.isEmpty() ? this.displayedMemory.equals(this.lastOutputScreen) || (this.outputFilter.newCue && this.outputFilter.newCue(this.cueStartTime, a, this.lastOutputScreen),
                            this.cueStartTime = this.displayedMemory.isEmpty() ? null : a) : this.cueStartTime = a,
                            this.lastOutputScreen.copy(this.displayedMemory))
                        }
                    }, {
                        key: "cueSplitAtTime",
                        value: function(a) {
                            this.outputFilter && (this.displayedMemory.isEmpty() || (this.outputFilter.newCue && this.outputFilter.newCue(this.cueStartTime, a, this.displayedMemory),
                            this.cueStartTime = a))
                        }
                    }]),
                    a
                }()
                  , v = function() {
                    function a(b, c, e) {
                        d(this, a),
                        this.field = b || 1,
                        this.outputs = [c, e],
                        this.channels = [new u(1,c), new u(2,e)],
                        this.currChNr = -1,
                        this.lastCmdA = null,
                        this.lastCmdB = null,
                        this.bufferedData = [],
                        this.startTime = null,
                        this.lastTime = null,
                        this.dataCounters = {
                            padding: 0,
                            char: 0,
                            cmd: 0,
                            other: 0
                        }
                    }
                    return e(a, [{
                        key: "getHandler",
                        value: function(a) {
                            return this.channels[a].getHandler()
                        }
                    }, {
                        key: "setHandler",
                        value: function(a, b) {
                            this.channels[a].setHandler(b)
                        }
                    }, {
                        key: "addData",
                        value: function(a, b) {
                            var c, d, e, f = !1;
                            this.lastTime = a,
                            o.setTime(a);
                            for (var g = 0; g < b.length; g += 2)
                                if (d = 127 & b[g],
                                e = 127 & b[g + 1],
                                0 !== d || 0 !== e) {
                                    if (o.log("DATA", "[" + p([b[g], b[g + 1]]) + "] -> (" + p([d, e]) + ")"),
                                    c = this.parseCmd(d, e),
                                    c || (c = this.parseMidrow(d, e)),
                                    c || (c = this.parsePAC(d, e)),
                                    c || (c = this.parseBackgroundAttributes(d, e)),
                                    !c && (f = this.parseChars(d, e)))
                                        if (this.currChNr && this.currChNr >= 0) {
                                            var h = this.channels[this.currChNr - 1];
                                            h.insertChars(f)
                                        } else
                                            o.log("WARNING", "No channel found yet. TEXT-MODE?");
                                    c ? this.dataCounters.cmd += 2 : f ? this.dataCounters.char += 2 : (this.dataCounters.other += 2,
                                    o.log("WARNING", "Couldn't parse cleaned data " + p([d, e]) + " orig: " + p([b[g], b[g + 1]])))
                                } else
                                    this.dataCounters.padding += 2
                        }
                    }, {
                        key: "parseCmd",
                        value: function(a, b) {
                            var c = null
                              , d = (20 === a || 28 === a) && 32 <= b && b <= 47
                              , e = (23 === a || 31 === a) && 33 <= b && b <= 35;
                            if (!d && !e)
                                return !1;
                            if (a === this.lastCmdA && b === this.lastCmdB)
                                return this.lastCmdA = null,
                                this.lastCmdB = null,
                                o.log("DEBUG", "Repeated command (" + p([a, b]) + ") is dropped"),
                                !0;
                            c = 20 === a || 23 === a ? 1 : 2;
                            var f = this.channels[c - 1];
                            return 20 === a || 28 === a ? 32 === b ? f.ccRCL() : 33 === b ? f.ccBS() : 34 === b ? f.ccAOF() : 35 === b ? f.ccAON() : 36 === b ? f.ccDER() : 37 === b ? f.ccRU(2) : 38 === b ? f.ccRU(3) : 39 === b ? f.ccRU(4) : 40 === b ? f.ccFON() : 41 === b ? f.ccRDC() : 42 === b ? f.ccTR() : 43 === b ? f.ccRTD() : 44 === b ? f.ccEDM() : 45 === b ? f.ccCR() : 46 === b ? f.ccENM() : 47 === b && f.ccEOC() : f.ccTO(b - 32),
                            this.lastCmdA = a,
                            this.lastCmdB = b,
                            this.currChNr = c,
                            !0
                        }
                    }, {
                        key: "parseMidrow",
                        value: function(a, b) {
                            var c = null;
                            if ((17 === a || 25 === a) && 32 <= b && b <= 47) {
                                if (c = 17 === a ? 1 : 2,
                                c !== this.currChNr)
                                    return o.log("ERROR", "Mismatch channel in midrow parsing"),
                                    !1;
                                var d = this.channels[c - 1];
                                return d.ccMIDROW(b),
                                o.log("DEBUG", "MIDROW (" + p([a, b]) + ")"),
                                !0
                            }
                            return !1
                        }
                    }, {
                        key: "parsePAC",
                        value: function(a, b) {
                            var c = null
                              , d = null
                              , e = (17 <= a && a <= 23 || 25 <= a && a <= 31) && 64 <= b && b <= 127
                              , f = (16 === a || 24 === a) && 64 <= b && b <= 95;
                            if (!e && !f)
                                return !1;
                            if (a === this.lastCmdA && b === this.lastCmdB)
                                return this.lastCmdA = null,
                                this.lastCmdB = null,
                                !0;
                            c = a <= 23 ? 1 : 2,
                            d = 64 <= b && b <= 95 ? 1 === c ? j[a] : l[a] : 1 === c ? k[a] : m[a];
                            var g = this.interpretPAC(d, b)
                              , h = this.channels[c - 1];
                            return h.setPAC(g),
                            this.lastCmdA = a,
                            this.lastCmdB = b,
                            this.currChNr = c,
                            !0
                        }
                    }, {
                        key: "interpretPAC",
                        value: function(a, b) {
                            var c = b
                              , d = {
                                color: null,
                                italics: !1,
                                indent: null,
                                underline: !1,
                                row: a
                            };
                            return c = b > 95 ? b - 96 : b - 64,
                            d.underline = 1 === (1 & c),
                            c <= 13 ? d.color = ["white", "green", "blue", "cyan", "red", "yellow", "magenta", "white"][Math.floor(c / 2)] : c <= 15 ? (d.italics = !0,
                            d.color = "white") : d.indent = 4 * Math.floor((c - 16) / 2),
                            d
                        }
                    }, {
                        key: "parseChars",
                        value: function(a, b) {
                            var c = null
                              , d = null
                              , e = null;
                            if (a >= 25 ? (c = 2,
                            e = a - 8) : (c = 1,
                            e = a),
                            17 <= e && e <= 19) {
                                var f = b;
                                f = 17 === e ? b + 80 : 18 === e ? b + 112 : b + 144,
                                o.log("INFO", "Special char '" + g(f) + "' in channel " + c),
                                d = [f]
                            } else
                                32 <= a && a <= 127 && (d = 0 === b ? [a] : [a, b]);
                            if (d) {
                                var h = p(d);
                                o.log("DEBUG", "Char codes =  " + h.join(",")),
                                this.lastCmdA = null,
                                this.lastCmdB = null
                            }
                            return d
                        }
                    }, {
                        key: "parseBackgroundAttributes",
                        value: function(a, b) {
                            var c, d, e, f, g = (16 === a || 24 === a) && 32 <= b && b <= 47, h = (23 === a || 31 === a) && 45 <= b && b <= 47;
                            return !(!g && !h) && (c = {},
                            16 === a || 24 === a ? (d = Math.floor((b - 32) / 2),
                            c.background = n[d],
                            b % 2 === 1 && (c.background = c.background + "_semi")) : 45 === b ? c.background = "transparent" : (c.foreground = "black",
                            47 === b && (c.underline = !0)),
                            e = a < 24 ? 1 : 2,
                            f = this.channels[e - 1],
                            f.setBkgData(c),
                            this.lastCmdA = null,
                            this.lastCmdB = null,
                            !0)
                        }
                    }, {
                        key: "reset",
                        value: function() {
                            for (var a = 0; a < this.channels.length; a++)
                                this.channels[a] && this.channels[a].reset();
                            this.lastCmdA = null,
                            this.lastCmdB = null
                        }
                    }, {
                        key: "cueSplitAtTime",
                        value: function(a) {
                            for (var b = 0; b < this.channels.length; b++)
                                this.channels[b] && this.channels[b].cueSplitAtTime(a)
                        }
                    }]),
                    a
                }();
                c.default = v
            }
            , {}],
            47: [function(a, b, c) {
                "use strict";
                var d = a(53)
                  , e = {
                    newCue: function(a, b, c, e) {
                        for (var f, g, h, i, j, k = window.VTTCue || window.TextTrackCue, l = 0; l < e.rows.length; l++)
                            if (f = e.rows[l],
                            h = !0,
                            i = 0,
                            j = "",
                            !f.isEmpty()) {
                                for (var m = 0; m < f.chars.length; m++)
                                    f.chars[m].uchar.match(/\s/) && h ? i++ : (j += f.chars[m].uchar,
                                    h = !1);
                                f.cueStartTime = b,
                                b === c && (c += 1e-4),
                                g = new k(b,c,(0,
                                d.fixLineBreaks)(j.trim())),
                                i >= 16 ? i-- : i++,
                                navigator.userAgent.match(/Firefox\//) ? g.line = l + 1 : g.line = l > 7 ? l - 2 : l + 1,
                                g.align = "left",
                                g.position = Math.max(0, Math.min(100, 100 * (i / 32) + (navigator.userAgent.match(/Firefox\//) ? 50 : 0))),
                                a.addCue(g)
                            }
                    }
                };
                b.exports = e
            }
            , {
                53: 53
            }],
            48: [function(a, b, c) {
                "use strict";
                function d(a) {
                    return a && a.__esModule ? a : {
                        default: a
                    }
                }
                function e(a, b) {
                    if (!(a instanceof b))
                        throw new TypeError("Cannot call a class as a function")
                }
                Object.defineProperty(c, "__esModule", {
                    value: !0
                });
                var f = function() {
                    function a(a, b) {
                        for (var c = 0; c < b.length; c++) {
                            var d = b[c];
                            d.enumerable = d.enumerable || !1,
                            d.configurable = !0,
                            "value"in d && (d.writable = !0),
                            Object.defineProperty(a, d.key, d)
                        }
                    }
                    return function(b, c, d) {
                        return c && a(b.prototype, c),
                        d && a(b, d),
                        b
                    }
                }()
                  , g = a(49)
                  , h = d(g)
                  , i = function() {
                    function a(b, c, d, f) {
                        e(this, a),
                        this.hls = b,
                        this.defaultEstimate_ = f,
                        this.minWeight_ = .001,
                        this.minDelayMs_ = 50,
                        this.slow_ = new h.default(c),
                        this.fast_ = new h.default(d)
                    }
                    return f(a, [{
                        key: "sample",
                        value: function(a, b) {
                            a = Math.max(a, this.minDelayMs_);
                            var c = 8e3 * b / a
                              , d = a / 1e3;
                            this.fast_.sample(d, c),
                            this.slow_.sample(d, c)
                        }
                    }, {
                        key: "canEstimate",
                        value: function() {
                            var a = this.fast_;
                            return a && a.getTotalWeight() >= this.minWeight_
                        }
                    }, {
                        key: "getEstimate",
                        value: function() {
                            return this.canEstimate() ? Math.min(this.fast_.getEstimate(), this.slow_.getEstimate()) : this.defaultEstimate_
                        }
                    }, {
                        key: "destroy",
                        value: function() {}
                    }]),
                    a
                }();
                c.default = i
            }
            , {
                49: 49
            }],
            49: [function(a, b, c) {
                "use strict";
                function d(a, b) {
                    if (!(a instanceof b))
                        throw new TypeError("Cannot call a class as a function")
                }
                Object.defineProperty(c, "__esModule", {
                    value: !0
                });
                var e = function() {
                    function a(a, b) {
                        for (var c = 0; c < b.length; c++) {
                            var d = b[c];
                            d.enumerable = d.enumerable || !1,
                            d.configurable = !0,
                            "value"in d && (d.writable = !0),
                            Object.defineProperty(a, d.key, d)
                        }
                    }
                    return function(b, c, d) {
                        return c && a(b.prototype, c),
                        d && a(b, d),
                        b
                    }
                }()
                  , f = function() {
                    function a(b) {
                        d(this, a),
                        this.alpha_ = b ? Math.exp(Math.log(.5) / b) : 0,
                        this.estimate_ = 0,
                        this.totalWeight_ = 0
                    }
                    return e(a, [{
                        key: "sample",
                        value: function(a, b) {
                            var c = Math.pow(this.alpha_, a);
                            this.estimate_ = b * (1 - c) + c * this.estimate_,
                            this.totalWeight_ += a
                        }
                    }, {
                        key: "getTotalWeight",
                        value: function() {
                            return this.totalWeight_
                        }
                    }, {
                        key: "getEstimate",
                        value: function() {
                            if (this.alpha_) {
                                var a = 1 - Math.pow(this.alpha_, this.totalWeight_);
                                return this.estimate_ / a
                            }
                            return this.estimate_
                        }
                    }]),
                    a
                }();
                c.default = f
            }
            , {}],
            50: [function(a, b, c) {
                "use strict";
                function d() {}
                function e(a, b) {
                    return b = "[" + a + "] > " + b
                }
                function f(a) {
                    var b = self.console[a];
                    return b ? function() {
                        for (var c = arguments.length, d = Array(c), f = 0; f < c; f++)
                            d[f] = arguments[f];
                        d[0] && (d[0] = e(a, d[0])),
                        b.apply(self.console, d)
                    }
                    : d
                }
                function g(a) {
                    for (var b = arguments.length, c = Array(b > 1 ? b - 1 : 0), d = 1; d < b; d++)
                        c[d - 1] = arguments[d];
                    c.forEach(function(b) {
                        j[b] = a[b] ? a[b].bind(a) : f(b)
                    })
                }
                Object.defineProperty(c, "__esModule", {
                    value: !0
                });
                var h = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(a) {
                    return typeof a
                }
                : function(a) {
                    return a && "function" == typeof Symbol && a.constructor === Symbol && a !== Symbol.prototype ? "symbol" : typeof a
                }
                  , i = {
                    trace: d,
                    debug: d,
                    log: d,
                    warn: d,
                    info: d,
                    error: d
                }
                  , j = i;
                c.enableLogs = function(a) {
                    if (a === !0 || "object" === ("undefined" == typeof a ? "undefined" : h(a))) {
                        g(a, "debug", "log", "info", "warn", "error");
                        try {
                            j.log()
                        } catch (a) {
                            j = i
                        }
                    } else
                        j = i
                }
                ,
                c.logger = j
            }
            , {}],
            51: [function(a, b, c) {
                "use strict";
                var d = {
                    toString: function(a) {
                        for (var b = "", c = a.length, d = 0; d < c; d++)
                            b += "[" + a.start(d).toFixed(3) + "," + a.end(d).toFixed(3) + "]";
                        return b
                    }
                };
                b.exports = d
            }
            , {}],
            52: [function(a, b, c) {
                "use strict";
                Object.defineProperty(c, "__esModule", {
                    value: !0
                }),
                c.default = function() {
                    function a(a) {
                        if ("string" != typeof a)
                            return !1;
                        var b = f[a.toLowerCase()];
                        return !!b && a.toLowerCase()
                    }
                    function b(a) {
                        if ("string" != typeof a)
                            return !1;
                        var b = g[a.toLowerCase()];
                        return !!b && a.toLowerCase()
                    }
                    function c(a) {
                        for (var b = 1; b < arguments.length; b++) {
                            var c = arguments[b];
                            for (var d in c)
                                a[d] = c[d]
                        }
                        return a
                    }
                    function d(d, f, g) {
                        var h = this
                          , i = function() {
                            if ("undefined" != typeof navigator)
                                return /MSIE\s8\.0/.test(navigator.userAgent)
                        }()
                          , j = {};
                        i ? h = document.createElement("custom") : j.enumerable = !0,
                        h.hasBeenReset = !1;
                        var k = ""
                          , l = !1
                          , m = d
                          , n = f
                          , o = g
                          , p = null
                          , q = ""
                          , r = !0
                          , s = "auto"
                          , t = "start"
                          , u = 50
                          , v = "middle"
                          , w = 50
                          , x = "middle";
                        if (Object.defineProperty(h, "id", c({}, j, {
                            get: function() {
                                return k
                            },
                            set: function(a) {
                                k = "" + a
                            }
                        })),
                        Object.defineProperty(h, "pauseOnExit", c({}, j, {
                            get: function() {
                                return l
                            },
                            set: function(a) {
                                l = !!a
                            }
                        })),
                        Object.defineProperty(h, "startTime", c({}, j, {
                            get: function() {
                                return m
                            },
                            set: function(a) {
                                if ("number" != typeof a)
                                    throw new TypeError("Start time must be set to a number.");
                                m = a,
                                this.hasBeenReset = !0
                            }
                        })),
                        Object.defineProperty(h, "endTime", c({}, j, {
                            get: function() {
                                return n
                            },
                            set: function(a) {
                                if ("number" != typeof a)
                                    throw new TypeError("End time must be set to a number.");
                                n = a,
                                this.hasBeenReset = !0
                            }
                        })),
                        Object.defineProperty(h, "text", c({}, j, {
                            get: function() {
                                return o
                            },
                            set: function(a) {
                                o = "" + a,
                                this.hasBeenReset = !0
                            }
                        })),
                        Object.defineProperty(h, "region", c({}, j, {
                            get: function() {
                                return p
                            },
                            set: function(a) {
                                p = a,
                                this.hasBeenReset = !0
                            }
                        })),
                        Object.defineProperty(h, "vertical", c({}, j, {
                            get: function() {
                                return q
                            },
                            set: function(b) {
                                var c = a(b);
                                if (c === !1)
                                    throw new SyntaxError("An invalid or illegal string was specified.");
                                q = c,
                                this.hasBeenReset = !0
                            }
                        })),
                        Object.defineProperty(h, "snapToLines", c({}, j, {
                            get: function() {
                                return r
                            },
                            set: function(a) {
                                r = !!a,
                                this.hasBeenReset = !0
                            }
                        })),
                        Object.defineProperty(h, "line", c({}, j, {
                            get: function() {
                                return s
                            },
                            set: function(a) {
                                if ("number" != typeof a && a !== e)
                                    throw new SyntaxError("An invalid number or illegal string was specified.");
                                s = a,
                                this.hasBeenReset = !0
                            }
                        })),
                        Object.defineProperty(h, "lineAlign", c({}, j, {
                            get: function() {
                                return t
                            },
                            set: function(a) {
                                var c = b(a);
                                if (!c)
                                    throw new SyntaxError("An invalid or illegal string was specified.");
                                t = c,
                                this.hasBeenReset = !0
                            }
                        })),
                        Object.defineProperty(h, "position", c({}, j, {
                            get: function() {
                                return u
                            },
                            set: function(a) {
                                if (a < 0 || a > 100)
                                    throw new Error("Position must be between 0 and 100.");
                                u = a,
                                this.hasBeenReset = !0
                            }
                        })),
                        Object.defineProperty(h, "positionAlign", c({}, j, {
                            get: function() {
                                return v
                            },
                            set: function(a) {
                                var c = b(a);
                                if (!c)
                                    throw new SyntaxError("An invalid or illegal string was specified.");
                                v = c,
                                this.hasBeenReset = !0
                            }
                        })),
                        Object.defineProperty(h, "size", c({}, j, {
                            get: function() {
                                return w
                            },
                            set: function(a) {
                                if (a < 0 || a > 100)
                                    throw new Error("Size must be between 0 and 100.");
                                w = a,
                                this.hasBeenReset = !0
                            }
                        })),
                        Object.defineProperty(h, "align", c({}, j, {
                            get: function() {
                                return x
                            },
                            set: function(a) {
                                var c = b(a);
                                if (!c)
                                    throw new SyntaxError("An invalid or illegal string was specified.");
                                x = c,
                                this.hasBeenReset = !0
                            }
                        })),
                        h.displayState = void 0,
                        i)
                            return h
                    }
                    if ("undefined" != typeof window && window.VTTCue)
                        return window.VTTCue;
                    var e = "auto"
                      , f = {
                        "": !0,
                        lr: !0,
                        rl: !0
                    }
                      , g = {
                        start: !0,
                        middle: !0,
                        end: !0,
                        left: !0,
                        right: !0
                    };
                    return d.prototype.getCueAsHTML = function() {
                        var a = window.WebVTT;
                        return a.convertCueToDOMTree(window, this.text)
                    }
                    ,
                    d
                }()
            }
            , {}],
            53: [function(a, b, c) {
                "use strict";
                function d(a) {
                    return a && a.__esModule ? a : {
                        default: a
                    }
                }
                function e() {
                    this.window = window,
                    this.state = "INITIAL",
                    this.buffer = "",
                    this.decoder = new m,
                    this.regionList = []
                }
                function f(a) {
                    function b(a, b, c, d) {
                        return 3600 * (0 | a) + 60 * (0 | b) + (0 | c) + (0 | d) / 1e3
                    }
                    var c = a.match(/^(\d+):(\d{2})(:\d{2})?\.(\d{3})/);
                    return c ? c[3] ? b(c[1], c[2], c[3].replace(":", ""), c[4]) : c[1] > 59 ? b(c[1], c[2], 0, c[4]) : b(0, c[1], c[2], c[4]) : null
                }
                function g() {
                    this.values = Object.create(null)
                }
                function h(a, b, c, d) {
                    var e = d ? a.split(d) : [a];
                    for (var f in e)
                        if ("string" == typeof e[f]) {
                            var g = e[f].split(c);
                            if (2 === g.length) {
                                var h = g[0]
                                  , i = g[1];
                                b(h, i)
                            }
                        }
                }
                function i(a, b, c) {
                    function d() {
                        var b = f(a);
                        if (null === b)
                            throw new Error("Malformed timestamp: " + j);
                        return a = a.replace(/^[^\sa-zA-Z-]+/, ""),
                        b
                    }
                    function e(a, b) {
                        var d = new g;
                        h(a, function(a, b) {
                            switch (a) {
                            case "region":
                                for (var e = c.length - 1; e >= 0; e--)
                                    if (c[e].id === b) {
                                        d.set(a, c[e].region);
                                        break
                                    }
                                break;
                            case "vertical":
                                d.alt(a, b, ["rl", "lr"]);
                                break;
                            case "line":
                                var f = b.split(",")
                                  , g = f[0];
                                d.integer(a, g),
                                d.percent(a, g) && d.set("snapToLines", !1),
                                d.alt(a, g, ["auto"]),
                                2 === f.length && d.alt("lineAlign", f[1], ["start", o, "end"]);
                                break;
                            case "position":
                                f = b.split(","),
                                d.percent(a, f[0]),
                                2 === f.length && d.alt("positionAlign", f[1], ["start", o, "end", "line-left", "line-right", "auto"]);
                                break;
                            case "size":
                                d.percent(a, b);
                                break;
                            case "align":
                                d.alt(a, b, ["start", o, "end", "left", "right"])
                            }
                        }, /:/, /\s/),
                        b.region = d.get("region", null),
                        b.vertical = d.get("vertical", "");
                        var e = d.get("line", "auto");
                        "auto" === e && n.line === -1 && (e = -1),
                        b.line = e,
                        b.lineAlign = d.get("lineAlign", "start"),
                        b.snapToLines = d.get("snapToLines", !0),
                        b.size = d.get("size", 100),
                        b.align = d.get("align", o);
                        var f = d.get("position", "auto");
                        "auto" === f && 50 === n.position && (f = "start" === b.align || "left" === b.align ? 0 : "end" === b.align || "right" === b.align ? 100 : 50),
                        b.position = f
                    }
                    function i() {
                        a = a.replace(/^\s+/, "")
                    }
                    var j = a;
                    if (i(),
                    b.startTime = d(),
                    i(),
                    "-->" !== a.substr(0, 3))
                        throw new Error("Malformed time stamp (time stamps must be separated by '-->'): " + j);
                    a = a.substr(3),
                    i(),
                    b.endTime = d(),
                    i(),
                    e(a, b)
                }
                function j(a) {
                    return a.replace(/<br(?: \/)?>/gi, "\n")
                }
                Object.defineProperty(c, "__esModule", {
                    value: !0
                }),
                c.fixLineBreaks = void 0;
                var k = a(52)
                  , l = d(k)
                  , m = function() {
                    return {
                        decode: function(a) {
                            if (!a)
                                return "";
                            if ("string" != typeof a)
                                throw new Error("Error - expected string data.");
                            return decodeURIComponent(encodeURIComponent(a))
                        }
                    }
                };
                g.prototype = {
                    set: function(a, b) {
                        this.get(a) || "" === b || (this.values[a] = b)
                    },
                    get: function(a, b, c) {
                        return c ? this.has(a) ? this.values[a] : b[c] : this.has(a) ? this.values[a] : b
                    },
                    has: function(a) {
                        return a in this.values
                    },
                    alt: function(a, b, c) {
                        for (var d = 0; d < c.length; ++d)
                            if (b === c[d]) {
                                this.set(a, b);
                                break
                            }
                    },
                    integer: function(a, b) {
                        /^-?\d+$/.test(b) && this.set(a, parseInt(b, 10))
                    },
                    percent: function(a, b) {
                        var c;
                        return !!((c = b.match(/^([\d]{1,3})(\.[\d]*)?%$/)) && (b = parseFloat(b),
                        b >= 0 && b <= 100)) && (this.set(a, b),
                        !0)
                    }
                };
                var n = new l.default(0,0,0)
                  , o = "middle" === n.align ? "middle" : "center";
                e.prototype = {
                    parse: function(a) {
                        function b() {
                            var a = d.buffer
                              , b = 0;
                            for (a = j(a); b < a.length && "\r" !== a[b] && "\n" !== a[b]; )
                                ++b;
                            var c = a.substr(0, b);
                            return "\r" === a[b] && ++b,
                            "\n" === a[b] && ++b,
                            d.buffer = a.substr(b),
                            c
                        }
                        function c(a) {
                            h(a, function(a, b) {
                                switch (a) {
                                case "Region":
                                    console.log("parse region", b)
                                }
                            }, /:/)
                        }
                        var d = this;
                        a && (d.buffer += d.decoder.decode(a, {
                            stream: !0
                        }));
                        try {
                            var e;
                            if ("INITIAL" === d.state) {
                                if (!/\r\n|\n/.test(d.buffer))
                                    return this;
                                e = b();
                                var f = e.match(/^WEBVTT([ \t].*)?$/);
                                if (!f || !f[0])
                                    throw new Error("Malformed WebVTT signature.");
                                d.state = "HEADER"
                            }
                            for (var g = !1; d.buffer; ) {
                                if (!/\r\n|\n/.test(d.buffer))
                                    return this;
                                switch (g ? g = !1 : e = b(),
                                d.state) {
                                case "HEADER":
                                    /:/.test(e) ? c(e) : e || (d.state = "ID");
                                    continue;
                                case "NOTE":
                                    e || (d.state = "ID");
                                    continue;
                                case "ID":
                                    if (/^NOTE($|[ \t])/.test(e)) {
                                        d.state = "NOTE";
                                        break
                                    }
                                    if (!e)
                                        continue;
                                    if (d.cue = new l.default(0,0,""),
                                    d.state = "CUE",
                                    e.indexOf("-->") === -1) {
                                        d.cue.id = e;
                                        continue
                                    }
                                case "CUE":
                                    try {
                                        i(e, d.cue, d.regionList)
                                    } catch (a) {
                                        d.cue = null,
                                        d.state = "BADCUE";
                                        continue
                                    }
                                    d.state = "CUETEXT";
                                    continue;
                                case "CUETEXT":
                                    var k = e.indexOf("-->") !== -1;
                                    if (!e || k && (g = !0)) {
                                        d.oncue && d.oncue(d.cue),
                                        d.cue = null,
                                        d.state = "ID";
                                        continue
                                    }
                                    d.cue.text && (d.cue.text += "\n"),
                                    d.cue.text += e;
                                    continue;
                                case "BADCUE":
                                    e || (d.state = "ID");
                                    continue
                                }
                            }
                        } catch (a) {
                            "CUETEXT" === d.state && d.cue && d.oncue && d.oncue(d.cue),
                            d.cue = null,
                            d.state = "INITIAL" === d.state ? "BADWEBVTT" : "BADCUE"
                        }
                        return this
                    },
                    flush: function() {
                        var a = this;
                        try {
                            if (a.buffer += a.decoder.decode(),
                            (a.cue || "HEADER" === a.state) && (a.buffer += "\n\n",
                            a.parse()),
                            "INITIAL" === a.state)
                                throw new Error("Malformed WebVTT signature.")
                        } catch (a) {
                            throw a
                        }
                        return a.onflush && a.onflush(),
                        this
                    }
                },
                c.fixLineBreaks = j,
                c.default = e
            }
            , {
                52: 52
            }],
            54: [function(a, b, c) {
                "use strict";
                function d(a) {
                    return a && a.__esModule ? a : {
                        default: a
                    }
                }
                var e = a(53)
                  , f = d(e)
                  , g = function(a) {
                    var b = parseInt(a.substr(-3))
                      , c = parseInt(a.substr(-6, 2))
                      , d = parseInt(a.substr(-9, 2))
                      , e = a.length > 9 ? parseInt(a.substr(0, a.indexOf(":"))) : 0;
                    return isNaN(b) || isNaN(c) || isNaN(d) || isNaN(e) ? -1 : (b += 1e3 * c,
                    b += 6e4 * d,
                    b += 36e5 * e)
                }
                  , h = function(a, b, c) {
                    var d = a[b]
                      , e = a[d.prevCC];
                    if (!e || !e.new && d.new)
                        return a.ccOffset = a.presentationOffset = d.start,
                        void (d.new = !1);
                    for (; e && e.new; )
                        a.ccOffset += d.start - e.start,
                        d.new = !1,
                        d = e,
                        e = a[d.prevCC];
                    a.presentationOffset = c
                }
                  , i = {
                    parse: function(a, b, c, d, e, i) {
                        var j = /\r\n|\n\r|\n|\r/g
                          , k = String.fromCharCode.apply(null, new Uint8Array(a)).trim().replace(j, "\n").split("\n")
                          , l = "00:00.000"
                          , m = 0
                          , n = 0
                          , o = 0
                          , p = []
                          , q = void 0
                          , r = !0
                          , s = new f.default;
                        s.oncue = function(a) {
                            var b = c[d]
                              , e = c.ccOffset;
                            b && b.new && (n ? e = c.ccOffset = b.start : h(c, d, o)),
                            o && !n && (e = o + c.ccOffset - c.presentationOffset),
                            a.startTime += e - n,
                            a.endTime += e - n,
                            a.text = decodeURIComponent(escape(a.text)),
                            a.endTime > 0 && p.push(a)
                        }
                        ,
                        s.onparsingerror = function(a) {
                            q = a
                        }
                        ,
                        s.onflush = function() {
                            return q && i ? void i(q) : void e(p)
                        }
                        ,
                        k.forEach(function(a) {
                            if (r) {
                                if (a.startsWith("X-TIMESTAMP-MAP=")) {
                                    r = !1,
                                    a.substr(16).split(",").forEach(function(a) {
                                        a.startsWith("LOCAL:") ? l = a.substr(6) : a.startsWith("MPEGTS:") && (m = parseInt(a.substr(7)))
                                    });
                                    try {
                                        b = b < 0 ? b + 8589934592 : b,
                                        m -= b,
                                        n = g(l) / 1e3,
                                        o = m / 9e4,
                                        n === -1 && (q = new Error("Malformed X-TIMESTAMP-MAP: " + a))
                                    } catch (b) {
                                        q = new Error("Malformed X-TIMESTAMP-MAP: " + a)
                                    }
                                    return
                                }
                                "" === a && (r = !1)
                            }
                            s.parse(a + "\n")
                        }),
                        s.flush()
                    }
                };
                b.exports = i
            }
            , {
                53: 53
            }],
            55: [function(a, b, c) {
                "use strict";
                function d(a, b) {
                    if (!(a instanceof b))
                        throw new TypeError("Cannot call a class as a function")
                }
                Object.defineProperty(c, "__esModule", {
                    value: !0
                });
                var e = function() {
                    function a(a, b) {
                        for (var c = 0; c < b.length; c++) {
                            var d = b[c];
                            d.enumerable = d.enumerable || !1,
                            d.configurable = !0,
                            "value"in d && (d.writable = !0),
                            Object.defineProperty(a, d.key, d)
                        }
                    }
                    return function(b, c, d) {
                        return c && a(b.prototype, c),
                        d && a(b, d),
                        b
                    }
                }()
                  , f = a(50)
                  , g = function() {
                    function a(b) {
                        d(this, a),
                        b && b.xhrSetup && (this.xhrSetup = b.xhrSetup)
                    }
                    return e(a, [{
                        key: "destroy",
                        value: function() {
                            this.abort(),
                            this.loader = null
                        }
                    }, {
                        key: "abort",
                        value: function() {
                            var a = this.loader;
                            a && 4 !== a.readyState && (this.stats.aborted = !0,
                            a.abort()),
                            window.clearTimeout(this.requestTimeout),
                            this.requestTimeout = null,
                            window.clearTimeout(this.retryTimeout),
                            this.retryTimeout = null
                        }
                    }, {
                        key: "load",
                        value: function(a, b, c) {
                            this.context = a,
                            this.config = b,
                            this.callbacks = c,
                            this.stats = {
                                trequest: performance.now(),
                                retry: 0
                            },
                            this.retryDelay = b.retryDelay,
                            this.loadInternal()
                        }
                    }, {
                        key: "loadInternal",
                        value: function() {
                            var a, b = this.context;
                            a = "undefined" != typeof XDomainRequest ? this.loader = new XDomainRequest : this.loader = new XMLHttpRequest;
                            var c = this.stats;
                            c.tfirst = 0,
                            c.loaded = 0;
                            var d = this.xhrSetup;
                            if (d)
                                try {
                                    d(a, b.url)
                                } catch (c) {
                                    a.open("GET", b.url, !0),
                                    d(a, b.url)
                                }
                            a.readyState || a.open("GET", b.url, !0),
                            b.rangeEnd && a.setRequestHeader("Range", "bytes=" + b.rangeStart + "-" + (b.rangeEnd - 1)),
                            a.onreadystatechange = this.readystatechange.bind(this),
                            a.onprogress = this.loadprogress.bind(this),
                            a.responseType = b.responseType,
                            this.requestTimeout = window.setTimeout(this.loadtimeout.bind(this), this.config.timeout),
                            a.send()
                        }
                    }, {
                        key: "readystatechange",
                        value: function(a) {
                            var b = a.currentTarget
                              , c = b.readyState
                              , d = this.stats
                              , e = this.context
                              , g = this.config;
                            if (!d.aborted && c >= 2)
                                if (window.clearTimeout(this.requestTimeout),
                                0 === d.tfirst && (d.tfirst = Math.max(performance.now(), d.trequest)),
                                4 === c) {
                                    var h = b.status;
                                    if (h >= 200 && h < 300) {
                                        d.tload = Math.max(d.tfirst, performance.now());
                                        var i = void 0
                                          , j = void 0;
                                        "arraybuffer" === e.responseType ? (i = b.response,
                                        j = i.byteLength) : (i = b.responseText,
                                        j = i.length),
                                        d.loaded = d.total = j;
                                        var k = {
                                            url: b.responseURL,
                                            data: i
                                        };
                                        this.callbacks.onSuccess(k, d, e)
                                    } else
                                        d.retry >= g.maxRetry || h >= 400 && h < 499 ? (f.logger.error(h + " while loading " + e.url),
                                        this.callbacks.onError({
                                            code: h,
                                            text: b.statusText
                                        }, e)) : (f.logger.warn(h + " while loading " + e.url + ", retrying in " + this.retryDelay + "..."),
                                        this.destroy(),
                                        this.retryTimeout = window.setTimeout(this.loadInternal.bind(this), this.retryDelay),
                                        this.retryDelay = Math.min(2 * this.retryDelay, g.maxRetryDelay),
                                        d.retry++)
                                } else
                                    this.requestTimeout = window.setTimeout(this.loadtimeout.bind(this), g.timeout)
                        }
                    }, {
                        key: "loadtimeout",
                        value: function() {
                            f.logger.warn("timeout while loading " + this.context.url),
                            this.callbacks.onTimeout(this.stats, this.context)
                        }
                    }, {
                        key: "loadprogress",
                        value: function(a) {
                            var b = this.stats;
                            b.loaded = a.loaded,
                            a.lengthComputable && (b.total = a.total);
                            var c = this.callbacks.onProgress;
                            c && c(b, this.context, null)
                        }
                    }]),
                    a
                }();
                c.default = g
            }
            , {
                50: 50
            }]
        }, {}, [37])(37)
    }),
    define("player/isMobile", [], function() {
        "use strict";
        function a() {
            return a.isIOS() || a.isAndroid()
        }
        function b(b) {
            return !!a.ua.match(b)
        }
        var c = /Android/g
          , d = /(iPad|iPhone|iPod)/g;
        return a.isIOS = function() {
            return b(d)
        }
        ,
        a.isAndroid = function() {
            return b(c)
        }
        ,
        a.ua = window.navigator && window.navigator.userAgent || "",
        a
    }),
    define("player/clientChecks", ["./isMobile"], function(a) {
        "use strict";
        var b = document
          , c = b.createElement("video")
          , d = b.createElement("track")
          , e = {};
        return e.fullScreenMode = function() {
            return c.requestFullScreen ? !!b.fullscreenEnabled && "standard" : c.mozRequestFullScreen ? !!b.mozFullScreenEnabled && "moz" : c.webkitRequestFullScreen ? !!b.webkitFullscreenEnabled && "webkit" : c.webkitEnterFullscreen ? "webkitVideo" : !!c.msRequestFullscreen && (!!b.msFullscreenEnabled && "ms")
        }
        ,
        e.canPlaybackRate = function() {
            return !(!c.playbackRate || c.playbackRate !== c.defaultPlaybackRate)
        }
        ,
        e.canPopOut = function() {
            return "function" == typeof c.webkitSupportsPresentationMode
        }
        ,
        e.canVolume = function() {
            return !a()
        }
        ,
        e.canHtml5Subtitle = function() {
            return !!(c && d && "function" == typeof c.addTextTrack && "kind"in d && "crossOrigin"in c)
        }
        ,
        e
    }),
    define("player/getSupportedMode", ["jquery", "hlsjs", "./clientChecks", "../vendor/swfobject"], function(a, b, c, d) {
        "use strict";
        function e(a) {
            return g.canPlayType(a).replace(/^no$/, "")
        }
        function f() {
            return ["hls", "hlsjs", "flash", "h264"]
        }
        var g = document.createElement("video");
        return function(a) {
            var c = navigator.userAgent.toLowerCase()
              , h = c.indexOf("windows nt") > -1 && c.indexOf("; arm;") > -1
              , i = a.modes || f()
              , j = (String(c).match(/\schrome\/([\d]+)/) || [])[1]
              , k = {
                flash: function() {
                    return !(h || c.indexOf("android") !== -1 || !d.hasFlashPlayerVersion(a.flashVersion))
                },
                h264: function() {
                    return !(!g.canPlayType || !e('video/mp4; codecs="avc1.42E01E"'))
                },
                hls: function() {
                    return !(!g.canPlayType || c.indexOf("android") !== -1 || c.indexOf("googletv") !== -1 || !e("application/vnd.apple.mpegURL") && !e("application/x-mpegURL"))
                },
                hlsjs: function() {
                    return !(k.hls() || !g.canPlayType || c.indexOf("windows phone") !== -1 || j && !(j >= 34) || !b.isSupported())
                }
            };
            if (a.mode && k[a.mode] !== -1)
                return !!k[a.mode]() && a.mode;
            try {
                for (var l = -1, m = i.length; ++l < m; )
                    if (k[i[l]]())
                        return i[l]
            } catch (a) {}
            return !1
        }
    }),
    define("player/checkRequiredParams", [], function() {
        "use strict";
        var a = ["el", "talks"];
        return function(b, c) {
            for (var d = !0, e = a.length; e--; )
                b[a[e]] || (c({
                    type: "init",
                    message: "Required option property is missing: " + a[e],
                    severity: "fatal"
                }),
                d = !1);
            return d
        }
    }),
    define("player/getTalk", [], function() {
        "use strict";
        return function(a, b, c) {
            var d, e = a.options.talks, f = e.length;
            for (c || (c = 0); f--; )
                if (d = e[f],
                d.id == b)
                    return e[f + c]
        }
    }),
    define("player/addHandlersFlash", ["jquery", "./masterAdInterface", "./throttle", "./getTalk"], function(a, b, c, d) {
        "use strict";
        function e(a, c) {
            var d, e;
            if (a.options.mai && a.options.maiFlash) {
                try {
                    d = a.options.maiAdUnitId,
                    e = c.resources.hls.maiTargeting || {}
                } catch (a) {
                    return
                }
                b.loadAd(d, e, {
                    allowUrlOverrides: !!a.options.maiUrlOverrides,
                    masterType: "gpt",
                    prerollType: "unparsed",
                    postrollType: "unparsed"
                }).then(function(b) {
                    a.topic("ad").publish({
                        type: "master",
                        target: b.companionTargetingValue
                    }),
                    a.sendAds({
                        preroll: b.prerollUrl,
                        postroll: b.postrollUrl
                    })
                })
            }
        }
        var f = c(100, function(a, b) {
            a("currentTime").publishUnique(b)
        })
          , g = c(100, function(a, b) {
            a("postrollRemaining").publishUnique(b)
        });
        return function(b) {
            function c(c, n) {
                switch (c) {
                case "player.error":
                    b.throwError(a.extend({}, n, {
                        type: "flash"
                    }));
                    break;
                case "player.pause":
                    l = !1,
                    h("pause").publish();
                    break;
                case "player.seeked":
                    b._isFirstPlaying || h("seeked").publish();
                    break;
                case "player.seeking":
                    b._isFirstPlaying || (h("seeking").publish(),
                    l && (m = !0));
                    break;
                case "player.play":
                    b._isFirstPlaying = !1,
                    h("ready.seekable").publishUnique(!0),
                    i && (h("bufferPlayable").publish(),
                    i = !1),
                    l = !0,
                    !b._isRequestedPlay && m || h("play").publish(),
                    m = !1,
                    b._isRequestedPlay = !1;
                    break;
                case "player.complete":
                    l = !1,
                    h("complete").publish(b.currentTalk);
                    break;
                case "player.talk.complete":
                    l = !1,
                    h("talkComplete").publish(b.currentTalk);
                    break;
                case "player.ready":
                    h("ready.flashInterface").publish();
                    break;
                case "player.loaded":
                    h("ready.flashTalk").publish();
                    var o = d(b, n.talkId);
                    e(b, o),
                    b.currentTalk = o,
                    h("talk").publishUnique(o),
                    h("talk.language").publishUnique(o),
                    k && b.el.playVideo(),
                    k = !0;
                    break;
                case "player.metadata":
                    h("duration.total").publishUnique(n.duration);
                    break;
                case "player.timeupdate":
                    f(h, n.time);
                    break;
                case "player.volumechange":
                    var p = Math.round(1e3 * +n.volume) / 1e3;
                    (p > 0 || !j) && h("volume").publishUnique(p);
                    break;
                case "player.ad.preroll.block":
                    h("adBlock").publish(),
                    h("prerollBlock").publish();
                    break;
                case "player.ad.preroll.start":
                    h("prerollStart").publish();
                    break;
                case "player.ad.preroll.end":
                    h("prerollComplete").publish();
                    break;
                case "player.ad.postroll.start":
                    h("postrollStart").publish();
                    break;
                case "player.ad.postroll.end":
                    h("postrollComplete").publish();
                    break;
                case "player.ad.postroll.duration":
                    h("postrollDuration").publish(n.duration);
                    break;
                case "player.ad.postroll.remaining":
                    g(h, n.time);
                    break;
                case "player.buffer.empty":
                    i || (i = !0,
                    h("bufferUnplayable").publish());
                    break;
                case "player.subtitle.display":
                    h("subtitleCue.unnormalized").publish(n.text);
                    break;
                case "player.mouse.down":
                    b.postrolling ? h("postrollClick").publish() : b.toggle();
                    break;
                case "player.metrics":
                    h("metricsData").publish(n);
                    break;
                case "player.metrics.toggle":
                    h("metricsToggle").publish()
                }
            }
            var h = b.topic
              , i = !1
              , j = b.config.get("muted");
            h("muted").subscribe(function(a) {
                j = a
            }),
            h("ready.flashInterface").once(function() {
                var a = b.currentTalk || b.options.talks[0];
                b.currentTalk = a,
                b._setSource(a.id, a.resources.hls.stream, a.introDuration, a.adDuration, a.postAdDuration)
            }),
            h("ready.flashTalk").once(function() {
                h("ready.handlers").publish(),
                b.capQualityToStage(b.options.capQualityToStage)
            });
            var k, l, m;
            window.onPlayerEvent = function(a, d) {
                try {
                    c(a, d)
                } catch (a) {
                    if (!a)
                        return;
                    b.throwError({
                        message: a.message,
                        stack: a.stack
                    })
                }
            }
            ;
            var n = b.options.history
              , o = [];
            if (n && n.length)
                for (var p = -1, q = n.length; ++p < q; )
                    window.onPlayerEvent.apply(o.slice.apply(n[p]))
        }
    }),
    define("player/getLanguage", [], function() {
        "use strict";
        return function(a, b) {
            if (!a.languages || !b)
                return !1;
            for (var c = a.languages.length; c--; )
                if (a.languages[c].languageCode === b)
                    return a.languages[c];
            return !1
        }
    }),
    define("player/isLastTalk", [], function() {
        "use strict";
        return function(a) {
            var b = a.options.talks.length;
            return b <= 1 || a.currentTalk.id === a.options.talks[b - 1].id
        }
    }),
    define("player/addHandlersVideo", ["jquery", "./getLanguage", "./throttle", "./isLastTalk", "./postroll-client/index"], function(a, b, c, d, e) {
        "use strict";
        function f(a) {
            var b = a.topic
              , c = e.forPlayer(a);
            b("complete.mediaEnded").subscribe(function() {
                c.hasAd() ? c.startAd() : b("complete").publish(a.currentTalk)
            }),
            b("postrollComplete").subscribe(function() {
                c.hasAd() && b("complete").publish(a.currentTalk)
            })
        }
        function g(a) {
            var b = a.topic
              , c = {};
            b("play").subscribe(function() {
                c = {}
            }),
            b("talkComplete.unnormalized").subscribe(function() {
                var d = a.currentTalk || {};
                c.id && d.id == c.id || b("talkComplete").publish(d),
                c = d
            })
        }
        function h(a) {
            a.topic("bufferUnplayable.unnormalized").subscribe(function(b) {
                a.topic(b ? "bufferUnplayable" : "bufferPlayable").publish()
            })
        }
        function i(a) {
            function b() {
                return a.options.customSubtitles && !i("subtitleCue.unavailable").read() ? "hidden" : "showing"
            }
            function d() {
                var a = b();
                h && h.mode !== a && (h.mode = a)
            }
            function e() {
                h && i("subtitleCue.unnormalized").publish("hidden" === h.mode && (h.activeCues && h.activeCues[0] ? String(h.activeCues[0].text) : ""))
            }
            function f(a) {
                a && (a.addEventListener("cuechange", e),
                a.mode = b())
            }
            function g(a) {
                a && (a.mode = "disabled",
                a.removeEventListener("cuechange", e))
            }
            var h, i = a.topic;
            i("subtitleCue.unavailable").subscribe(d),
            i("subtitle.track").subscribe(function(a) {
                a && a !== h && (g(h),
                h = a,
                f(h))
            }),
            i("subtitle").subscribe(function(a) {
                !a && h && (g(h),
                h = void 0)
            }),
            i("nativeControls").subscribe(function(a) {
                i("subtitleCue.unavailable").publish(a)
            }),
            i("subtitleCue.unnormalized").subscribe(c(5e3, d))
        }
        return function(d) {
            function e() {
                n("bufferUnplayable.unnormalized").publishUnique(!1)
            }
            function j() {
                var a = d.currentTalk && d.currentTalk.id;
                n("bufferUnplayable.unnormalized").read() || n("play.unnormalized").read() !== a || q && n("play").publish()
            }
            function k() {
                q && n("video.duration").publishUnique(o.duration)
            }
            function l() {
                n("video.seekable").publishUnique(o.readyState >= 2)
            }
            function m() {
                var a = n("subtitle.pending").read();
                null !== a && d.subtitle(a)
            }
            var n = d.topic
              , o = d.el
              , p = a(o);
            g(d),
            f(d),
            h(d);
            var q = !1;
            n("ready.sourceSet").subscribe(function(a) {
                q = a
            }),
            a.each(["seeked", "seeking"], function(a, b) {
                p.on(b, function() {
                    q && n(b).publish()
                })
            }),
            p.on("pause", function() {
                q && n("pause").publish()
            }),
            p.on("canplay", e),
            p.on("canplaythrough", e),
            p.on("timeupdate", c(100, function() {
                q && n("currentTime").publishUnique(o.currentTime)
            })),
            p.on("durationchange", k),
            p.on("ended", function() {
                q && (n("talkComplete.unnormalized").publish(),
                n("complete.mediaEnded").publish())
            }),
            p.on("error", function(a) {
                var b = o && o.error && o.error.code;
                d.throwError({
                    message: "Error playing video",
                    currentTime: o.currentTime,
                    src: o.src,
                    code: b || void 0
                }),
                q && 3 === b && "hlsjs" === d.mode && d._hlsjsRecoverMedia && d._hlsjsRecoverMedia()
            }),
            p.on("volumechange", function() {
                q && (n("volume").publishUnique(Math.round(1e3 * +o.volume) / 1e3),
                n("muted").publishUnique(o.muted))
            }),
            p.on("webkitpresentationmodechanged", function(a, b) {
                n("popOut").publishUnique("picture-in-picture" === a.target.webkitPresentationMode)
            }),
            p.on("loadstart", function() {
                q && n("bufferUnplayable.unnormalized").publishUnique(!0)
            }),
            p.on("waiting", function() {
                q && n("bufferUnplayable.unnormalized").publishUnique(!0)
            }),
            p.on("suspend", function() {
                q && n("bufferUnplayable.unnormalized").publishUnique(!1)
            }),
            p.on("canplay", l),
            p.on("canplaythrough", l),
            p.on("loadeddata", l),
            p.on("loadedmetadata", l),
            p.on("loadstart", l),
            n("video.seekable").subscribe(function(a) {
                a && k()
            }),
            p.on("loadeddata", m),
            n("talk.language").subscribe(m),
            p.on("play", function() {
                n("play.unnormalized").publish(d.currentTalk && d.currentTalk.id)
            }),
            n("play.unnormalized").subscribe(j),
            n("bufferPlayable").subscribe(j),
            n("talk.id").subscribe(function() {
                n("talk").publishUnique(d.currentTalk)
            }),
            n("ready").subscribe(function() {
                d.currentTalk && n("talk.id").publishUnique(d.currentTalk.id)
            }),
            i(d),
            o.textTracks && o.textTracks.addEventListener && o.textTracks.addEventListener("change", c(100, function(a, c, e) {
                for (var f, g, h = o.textTracks.length, i = !1, j = !1; h--; )
                    g = !1,
                    f = o.textTracks[h],
                    (f && "hidden" === f.mode || "showing" === f.mode) && (g = b(d.currentTalk, (f.language || "").toLowerCase())),
                    g && (i = g,
                    j = f);
                j && n("subtitle.track").publish(j),
                n("subtitle").publishUnique(i)
            }, !0))
        }
    }),
    define("player/addHandlersHls", ["jquery", "./clickOverlay"], function(a, b) {
        "use strict";
        function c(b) {
            var d = b.el
              , f = b.topic
              , g = a(d);
            g.on("canplay", function() {
                f("talk.language").publish(b.currentTalk)
            });
            var h;
            f("talk").subscribe(function(a) {
                h !== a.id && (e(b),
                h = a.id)
            }),
            f("currentTime").subscribe(c.checkAdEvents)
        }
        function d(a) {
            var b = new Image;
            b.src = a
        }
        function e(e) {
            function f(a) {
                k.push(c.createAdEvent(a))
            }
            var g = e.topic;
            c.adEvents = [];
            var h;
            try {
                h = e.currentTalk.resources.hls.metadata
            } catch (a) {
                return void e.throwError({
                    type: "init",
                    message: "Missing HLS metadata for current talk.",
                    severity: "fatal"
                })
            }
            var i = {}
              , j = e.maiAd;
            j && j.hlsParams && (i = j.hlsParams);
            var k = [];
            a.getJSON(h, i).then(function(a) {
                var h = a.timing;
                h.content && (e.currentTalk.introDuration = h.content.start),
                f({
                    startsAt: 8,
                    endsAt: 12,
                    onFirstStart: function() {
                        j && j.prerollImpressions.forEach(d)
                    },
                    onEveryStart: function() {
                        g("prerollStart").publish(),
                        j && b.forPlayer(e).show(j.prerollClickDestination)
                    },
                    onEveryEnd: function() {
                        g("prerollComplete").publish(),
                        j && b.forPlayer(e).hide()
                    }
                }),
                h.ad && (g("duration.stitchedPostrollOffset").publish(h.ad.end - h.ad.start),
                f({
                    startsAt: Math.floor(h.ad.start),
                    endsAt: Math.floor(h.ad.end),
                    onFirstStart: function() {
                        j && j.postrollQ0Impressions.forEach(d)
                    },
                    onEveryStart: function() {
                        g("talkComplete.unnormalized").publish(),
                        g("postrollStart").publish(),
                        j && b.forPlayer(e).show(j.postrollClickDestination, j.postrollClickImpressions)
                    },
                    onEveryEnd: function() {
                        g("postrollComplete").publish(),
                        j && b.forPlayer(e).hide()
                    }
                }),
                f({
                    startsAt: Math.floor(h.ad.start + (h.ad.end - h.ad.start) / 4),
                    endsAt: Math.floor(h.ad.end),
                    onFirstStart: function() {
                        j && j.postrollQ1Impressions.forEach(d)
                    }
                }),
                f({
                    startsAt: Math.floor(h.ad.start + (h.ad.end - h.ad.start) / 2),
                    endsAt: Math.floor(h.ad.end),
                    onFirstStart: function() {
                        j && j.postrollQ2Impressions.forEach(d)
                    }
                }),
                f({
                    startsAt: Math.floor(h.ad.start + 3 * (h.ad.end - h.ad.start) / 4),
                    endsAt: Math.floor(h.ad.end),
                    onFirstStart: function() {
                        j && j.postrollQ3Impressions.forEach(d)
                    }
                }),
                f({
                    startsAt: Math.floor(h.ad.end) - 1,
                    endsAt: Math.floor(h.ad.end),
                    onFirstStart: function() {
                        j && j.postrollQ4Impressions.forEach(d)
                    }
                })),
                c.adEvents = k
            }).fail(function(a, b, c) {
                e.throwError({
                    message: "Error retrieving HLS metadata",
                    status: b,
                    uri: h,
                    query: i
                })
            })
        }
        function f(a) {
            a.isCurrent || (a.onEveryStart(),
            a.hasEverStarted || (a.onFirstStart(),
            a.hasEverStarted = !0),
            a.isCurrent = !0)
        }
        function g(a) {
            a.isCurrent && (a.onEveryEnd(),
            a.hasEverEnded || (a.onFirstEnd(),
            a.hasEverEnded = !0),
            a.isCurrent = !1)
        }
        return c.adEvents = [],
        c.createAdEvent = function(b) {
            return a.extend({
                startsAt: 0,
                endsAt: -1,
                onFirstStart: a.noop,
                onFirstEnd: a.noop,
                onEveryStart: a.noop,
                onEveryEnd: a.noop
            }, b, {
                isCurrent: !1,
                hasEverStarted: !1,
                hasEverEnded: !1
            })
        }
        ,
        c.checkAdEvents = function(a) {
            for (var b, d = c.adEvents, e = d.length, h = 0; h < e; h++)
                b = d[h],
                a >= b.startsAt && (a < b.endsAt || b.endsAt === -1) ? f(b) : b.isCurrent && g(b)
        }
        ,
        c
    }),
    define("player/addHandlersHlsjs", [], function() {
        "use strict";
        function a(b) {
            var c = b.topic;
            !function() {
                function a() {
                    var a = b.el.currentTime;
                    d && (a < d - f || a > d + f) && b.seek(d),
                    e = null
                }
                var d, e, f = .08;
                c("bufferPlayable").subscribe(function() {
                    c("hlsjs.seekable").publishUnique(!0);
                    var g = c("hlsjs.seeking").read();
                    g && (c("hlsjs.seeking").publishUnique(void 0),
                    b.seek(g),
                    d = g,
                    e = e || window.setTimeout(a, f / 2 * 100))
                })
            }(),
            c("currentTime").subscribe(function(d) {
                var e = ""
                  , f = ""
                  , g = ""
                  , h = ""
                  , i = "";
                if (b.hlsjs) {
                    try {
                        e = Math.floor(b.hlsjs.abrController && b.hlsjs.abrController.bwEstimator ? b.hlsjs.abrController.bwEstimator.getEstimate() : b.hlsjs.config.abrEwmaDefaultEstimate);
                        var j = a.splitBuffered(b.el.buffered, d, Math.max(0, b.hlsjs.config.maxBufferHole, b.hlsjs.config.maxFragLookUpTolerance));
                        g = j[0],
                        f = j[1];
                        var k = a.splitBuffered(b.el.buffered, d, 0);
                        i = k[0],
                        h = k[1]
                    } catch (a) {}
                    c("metricsData").publish({
                        bandwidth: e,
                        bufferLength: f,
                        backBufferLength: g,
                        intolerantBufferLength: h,
                        intolerantBackBufferLength: i,
                        currentLevel: b.hlsjs.currentLevel,
                        nextLevel: b.hlsjs.nextLevel,
                        loadLevel: b.hlsjs.loadLevel,
                        nextLoadLevel: b.hlsjs.nextLoadLevel
                    })
                }
            })
        }
        return a.splitBuffered = function(a, b, c) {
            if (!a || !a.length)
                return [0, 0];
            var d, e, f, g, h, i = a.length;
            for (h = -1; ++h < i && (d = a.start(h),
            e = a.end(h),
            !(Math.max(b, g || 0) + c < d)); )
                (!f || g + c < d) && (f = d,
                g = e),
                b - c < e && (g = e);
            return [Math.max(b - f, 0), Math.max(g - b, 0)]
        }
        ,
        a
    }),
    define("player/addHandlers", ["./throttle", "./addHandlersFlash", "./addHandlersVideo", "./addHandlersHls", "./addHandlersHlsjs", "./getLanguage", "./isLastTalk"], function(a, b, c, d, e, f, g) {
        "use strict";
        function h(a) {
            function b() {
                d && g("subtitleCue").publishUnique("")
            }
            function c() {
                e && f && g("subtitleCue").publishUnique(d && String(d).replace("\n", "<br />") || !1)
            }
            var d, e = a.options.customSubtitles, f = !0, g = a.topic;
            g("seeking").subscribe(b),
            g("talk").subscribe(b),
            g("talkComplete").subscribe(b),
            g("subtitleCue.unavailable").subscribe(function(a) {
                a ? (f = !1,
                b()) : (f = !0,
                c())
            }),
            g("subtitleCue.unnormalized").subscribe(function(a) {
                d = a,
                c()
            }),
            g("subtitle").subscribe(function(a) {
                a || b()
            })
        }
        return function(a) {
            function i(b) {
                function c() {
                    var c = f - g;
                    !f || c < i || (b("duration").publishUnique(c),
                    e && (b("progress").publishUnique(e / c),
                    b("contentTime").publishUnique(Math.round(1e3 * (e - (a.currentTalk && a.currentTalk.introDuration || 0))))),
                    h && g && (b("postrollDuration").publishUnique(g),
                    b("postrollRemaining").publishUnique(f - e)))
                }
                function d() {
                    b("video.seekable").read() && b("duration").read() >= i && b("ready.seekable").publishUnique(!0)
                }
                var e, f, g = 0, h = !1, i = .2;
                b("currentTime").subscribe(function(a) {
                    e = a,
                    c()
                }),
                b("video.seekable").subscribe(d),
                b("video.duration").subscribe(function(a) {
                    !a || a < i || (f = a,
                    c(),
                    d())
                }),
                b("duration.total").subscribe(function(a) {
                    f = a,
                    c()
                }),
                b("duration.stitchedPostrollOffset").subscribe(function(a) {
                    g = a > 0 ? +a : 0,
                    c()
                }),
                b("postrollStart").subscribe(function() {
                    h = !0,
                    c()
                }),
                b("postrollComplete").subscribe(function() {
                    h = !1,
                    c()
                }),
                b("talk").subscribe(function() {
                    e = 0,
                    b("duration.stitchedPostrollOffset").publishUnique(0),
                    b("progress").publishUnique(0),
                    b("contentTime").publishUnique(0)
                }),
                b("progress").publishUnique(0),
                b("contentTime").publishUnique(0)
            }
            var j = a.mode
              , k = a.topic;
            switch (j) {
            case "flash":
                b(a);
                break;
            case "h264":
                c(a);
                break;
            case "hls":
                c(a),
                d(a);
                break;
            case "hlsjs":
                c(a),
                d(a),
                e(a);
                break;
            default:
                return void a.throwError({
                    type: "init",
                    message: "No handlers found for unrecognized player mode: " + j,
                    severity: "fatal"
                })
            }
            "flash" !== j && k("ready.handlers").publish(),
            a.options.talks && a.options.talks[0] && k("duration.total").publishUnique(a.options.talks[0].duration),
            k("duration").subscribe(function(b) {
                a.currentTalk ? a.currentTalk.duration = b : a.options.talks && a.options.talks[0] && (a.options.talks[0].duration = b)
            }),
            k("complete").subscribe(function() {
                g(a) ? k("ended").publish(a.currentTalk) : a.playNext()
            }),
            k("popOut").subscribe(function(b) {
                a.config.set("popOut", b)
            }),
            k("play").once(function() {
                a.config.get("popOut") && a.popOut(!0)
            }),
            i(k),
            k("postrollStart").subscribe(function() {
                a.postrolling = !0
            }),
            k("postrollComplete").subscribe(function() {
                a.postrolling = !1
            }),
            k("talk").subscribe(function() {
                a.postrolling && k("postrollComplete").publish(),
                a.postrolling = !1
            }),
            k("talk.language").subscribe(function(b) {
                if (a.subtitle) {
                    var c = a.config.get("languageCode")
                      , d = f(b, c);
                    d || "string" != typeof a.options.defaultSubtitles || (d = f(b, a.options.defaultSubtitles)),
                    d || !b.isSubtitleRequired && b.nativeLanguage === a.options.nativeLanguage && a.options.defaultSubtitles !== !0 || (d = f(b, a.options.nativeLanguage)),
                    d ? a.subtitle(d.languageCode, !1) : a.subtitle(!1, !1)
                }
            }),
            k("ready.sourceSet").subscribe(function() {
                k("ready.sourceSetting").publishUnique(!1)
            }),
            h(a)
        }
    }),
    define("player/flashifySource", [], function() {
        "use strict";
        function a(a, b) {
            return b + (b.indexOf("?" + a) === -1 && b.indexOf("&" + a) === -1 ? (b.indexOf("?") === -1 ? "?" : "&") + a : "")
        }
        function b(b) {
            return b = a("preroll=Blank", b),
            b = a("qr", b),
            b = a("network=tv", b)
        }
        return b
    }),
    define("player/actionsFlash", ["jquery", "./flashifySource", "./getTalk", "./getLanguage"], function(a, b, c, d) {
        "use strict";
        var e = {};
        return a.each({
            pause: "pauseVideo",
            seek: "seek",
            sendAds: "sendAds",
            capQualityToStage: "capQualityToStage"
        }, function(a, b) {
            e[a] = function() {
                var a = this.el[b];
                a && a.apply(this.el, [].slice.call(arguments))
            }
        }),
        e.play = function() {
            this._isRequestedPlay = !0,
            this.lastPlayedTalkId == (this.currentTalk && this.currentTalk.id) ? this.el.resumeVideo() : (this._isFirstPlaying = !0,
            this.el.playVideo())
        }
        ,
        e.playTalk = function(a) {
            var b = c(this, a);
            b && this.currentTalk != b ? (this._isFirstPlaying = !0,
            this.currentTalk = b,
            this._setSource(b.id, b.resources.hls.stream, b.introDuration, b.adDuration, b.postAdDuration)) : this.play()
        }
        ,
        e.mute = function(a) {
            this.el.volume(a ? 0 : this.config.get("volume"))
        }
        ,
        e.subtitle = function(a, b) {
            var c = d(this.currentTalk, a);
            c ? this.el.setLanguage(c.languageCode, c.isRtl) : this.el.setLanguage(null, null),
            b !== !1 && this.config.set("languageCode", !!c && c.languageCode),
            this.topic("subtitle").publishUnique(c)
        }
        ,
        e.volume = function(a) {
            this.el.volume(a)
        }
        ,
        e._playbackRate = function() {}
        ,
        e._setSource = function(a, c, d, e, f) {
            this._unsetSource(),
            this.topic("ready.sourceSetting").publishUnique(!0),
            this.el.load(a, b(c), d, e, f),
            this.topic("ready.sourceSet").publishUnique(!0)
        }
        ,
        e._setSourceFromCurrentTalk = function() {
            var a = this
              , b = a.currentTalk;
            a._setSource(b.id, b.resources.hls.stream, b.introDuration, b.adDuration, b.postAdDuration)
        }
        ,
        e._unsetSource = function() {
            this.topic("ready.sourceSet").publishUnique(!1)
        }
        ,
        e._setSource.early = !0,
        e._setSourceFromCurrentTalk.early = !0,
        e._unsetSource.early = !0,
        e
    }),
    define("player/emptyVideo", [], function() {
        "use strict";
        return "data:video/mp4;base64,AAAAIGZ0eXBpc29tAAACAGlzb21pc28yYXZjMW1wNDEAAAAIZnJlZQAAAs1tZGF0AAACrgYF//+q3EXpvebZSLeWLNgg2SPu73gyNjQgLSBjb3JlIDE0OCByMjYwMSBhMGNkN2QzIC0gSC4yNjQvTVBFRy00IEFWQyBjb2RlYyAtIENvcHlsZWZ0IDIwMDMtMjAxNSAtIGh0dHA6Ly93d3cudmlkZW9sYW4ub3JnL3gyNjQuaHRtbCAtIG9wdGlvbnM6IGNhYmFjPTEgcmVmPTMgZGVibG9jaz0xOjA6MCBhbmFseXNlPTB4MzoweDExMyBtZT1oZXggc3VibWU9NyBwc3k9MSBwc3lfcmQ9MS4wMDowLjAwIG1peGVkX3JlZj0xIG1lX3JhbmdlPTE2IGNocm9tYV9tZT0xIHRyZWxsaXM9MSA4eDhkY3Q9MSBjcW09MCBkZWFkem9uZT0yMSwxMSBmYXN0X3Bza2lwPTEgY2hyb21hX3FwX29mZnNldD0tMiB0aHJlYWRzPTEgbG9va2FoZWFkX3RocmVhZHM9MSBzbGljZWRfdGhyZWFkcz0wIG5yPTAgZGVjaW1hdGU9MSBpbnRlcmxhY2VkPTAgYmx1cmF5X2NvbXBhdD0wIGNvbnN0cmFpbmVkX2ludHJhPTAgYmZyYW1lcz0zIGJfcHlyYW1pZD0yIGJfYWRhcHQ9MSBiX2JpYXM9MCBkaXJlY3Q9MSB3ZWlnaHRiPTEgb3Blbl9nb3A9MCB3ZWlnaHRwPTIga2V5aW50PTI1MCBrZXlpbnRfbWluPTEwIHNjZW5lY3V0PTQwIGludHJhX3JlZnJlc2g9MCByY19sb29rYWhlYWQ9NDAgcmM9Y3JmIG1idHJlZT0xIGNyZj0yMy4wIHFjb21wPTAuNjAgcXBtaW49MCBxcG1heD02OSBxcHN0ZXA9NCBpcF9yYXRpbz0xLjQwIGFxPTE6MS4wMACAAAAAD2WIhAA3//728P4FNjuZQQAAAu5tb292AAAAbG12aGQAAAAAAAAAAAAAAAAAAAPoAAAAZAABAAABAAAAAAAAAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAEAAAAAAAAAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAAACGHRyYWsAAABcdGtoZAAAAAMAAAAAAAAAAAAAAAEAAAAAAAAAZAAAAAAAAAAAAAAAAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAEAAAAAAAAAAAAAAAAAAEAAAAAAAgAAAAIAAAAAACRlZHRzAAAAHGVsc3QAAAAAAAAAAQAAAGQAAAAAAAEAAAAAAZBtZGlhAAAAIG1kaGQAAAAAAAAAAAAAAAAAACgAAAAEAFXEAAAAAAAtaGRscgAAAAAAAAAAdmlkZQAAAAAAAAAAAAAAAFZpZGVvSGFuZGxlcgAAAAE7bWluZgAAABR2bWhkAAAAAQAAAAAAAAAAAAAAJGRpbmYAAAAcZHJlZgAAAAAAAAABAAAADHVybCAAAAABAAAA+3N0YmwAAACXc3RzZAAAAAAAAAABAAAAh2F2YzEAAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAgACAEgAAABIAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAY//8AAAAxYXZjQwFkAAr/4QAYZ2QACqzZX4iIhAAAAwAEAAADAFA8SJZYAQAGaOvjyyLAAAAAGHN0dHMAAAAAAAAAAQAAAAEAAAQAAAAAHHN0c2MAAAAAAAAAAQAAAAEAAAABAAAAAQAAABRzdHN6AAAAAAAAAsUAAAABAAAAFHN0Y28AAAAAAAAAAQAAADAAAABidWR0YQAAAFptZXRhAAAAAAAAACFoZGxyAAAAAAAAAABtZGlyYXBwbAAAAAAAAAAAAAAAAC1pbHN0AAAAJal0b28AAAAdZGF0YQAAAAEAAAAATGF2ZjU2LjQwLjEwMQ=="
    }),
    define("player/actionsH264", ["jquery", "./emptyVideo", "./getTalk"], function(a, b, c) {
        "use strict";
        var d = {};
        return d.play = function() {
            this.topic("talk").publishUnique(this.currentTalk),
            this.el.play()
        }
        ,
        d.pause = function() {
            this.el.pause()
        }
        ,
        d.playTalk = function(a) {
            var b = c(this, a);
            !b || this.currentTalk && this.currentTalk.id == b.id ? this.play() : (this.currentTalk = b,
            this.topic("talk.id").publishUnique(b.id),
            this._setSource(b.resources.h264[0].file),
            this.el.play())
        }
        ,
        d.mute = function(a) {
            this.el.muted = a
        }
        ,
        d.seek = function(a) {
            this.el.currentTime = a
        }
        ,
        d.volume = function(a) {
            this.el.volume = a
        }
        ,
        d._playbackRate = function(a) {
            this.el.playbackRate = a
        }
        ,
        d._setSource = function(a) {
            this._unsetSource(),
            this.topic("ready.sourceSetting").publishUnique(!0),
            this.el.src = a,
            this.topic("ready.sourceSet").publishUnique(!0)
        }
        ,
        d._setSourceFromCurrentTalk = function() {
            var a = this.currentTalk;
            this._setSource(a.resources.h264[0].file)
        }
        ,
        d._unsetSource = function(a) {
            this.topic("ready.sourceSet").publishUnique(!1),
            this.el.src = b
        }
        ,
        d._setSource.early = !0,
        d._setSourceFromCurrentTalk.early = !0,
        d._unsetSource.early = !0,
        d
    }),
    define("player/actionsHls", ["jquery", "./emptyVideo", "./getTalk", "./getLanguage", "./hlsInitTalk"], function(a, b, c, d, e) {
        "use strict";
        var f = {};
        return f.play = function() {
            this.topic("talk.id").publishUnique(this.currentTalk.id),
            this.el.play()
        }
        ,
        f.pause = function() {
            this.el.pause()
        }
        ,
        f.playTalk = function(a) {
            var b = c(this, a)
              , d = this.topic
              , f = this.el;
            if (!b || this.currentTalk && this.currentTalk.id == b.id)
                this.play();
            else {
                var g = this;
                this.currentTalk = b,
                e(this, f).done(function() {
                    g.play()
                }).always(function() {
                    d("talk.id").publishUnique(b.id)
                })
            }
        }
        ,
        f.mute = function(a) {
            this.el.muted = a
        }
        ,
        f.seek = function(a) {
            this.el.currentTime = a
        }
        ,
        f.subtitle = function(a, b) {
            var c = this.el
              , e = c.textTracks.length
              , f = d(this.currentTalk, a);
            if (e <= 0)
                return void this.topic("subtitle.pending").publishUnique(a);
            a = (f && f.languageCode || "").toLowerCase();
            for (var g, h = !1; e--; )
                g = c.textTracks[e],
                g && (g.language || "").toLowerCase() === a ? (this.topic("subtitle.track").publish(g),
                h = !0) : g.mode = "disabled";
            h || (f = !1),
            b !== !1 && this.config.set("languageCode", !!f && a),
            this.topic("subtitle.pending").publishUnique(null),
            this.topic("subtitle").publishUnique(f)
        }
        ,
        f.volume = function(a) {
            this.el.volume = a
        }
        ,
        f._playbackRate = function(a) {
            this.el.playbackRate = a
        }
        ,
        f._setSource = function(a) {
            this._unsetSource(),
            this.topic("ready.sourceSetting").publishUnique(!0),
            this.el.src = a,
            this.topic("ready.sourceSet").publishUnique(!0)
        }
        ,
        f._setSourceFromCurrentTalk = function() {
            this._unsetSource(),
            this.topic("ready.sourceSetting").publishUnique(!0),
            e(this, this.el)
        }
        ,
        f._unsetSource = function(a) {
            this.topic("ready.sourceSet").publishUnique(!1),
            this.el.src = b
        }
        ,
        f._setSource.early = !0,
        f._setSourceFromCurrentTalk.early = !0,
        f._unsetSource.early = !0,
        f
    }),
    define("player/hlsjsCustomCapLevelController", ["jquery", "hlsjs", "./isMobile"], function(a, b, c) {
        "use strict";
        function d(c) {
            var d = this;
            a.extend(d, {
                hls: c,
                restrictedLevels: [],
                _onFpsDropLevelCapping: function(a, b) {
                    d.onFpsDropLevelCapping(b)
                },
                _onManifestParsed: function(a, b) {
                    d.onManifestParsed(b)
                },
                _onMediaAttaching: function(a, b) {
                    d.onMediaAttaching(b)
                }
            }),
            c.on(b.Events.FPS_DROP_LEVEL_CAPPING, d._onFpsDropLevelCapping),
            c.on(b.Events.MANIFEST_PARSED, d._onManifestParsed),
            c.on(b.Events.MEDIA_ATTACHING, d._onMediaAttaching)
        }
        return a.extend(d.prototype, {
            destroy: function() {
                var a = this.hls;
                a && (a.off(b.Events.FPS_DROP_LEVEL_CAPPING, this._onFpsDropLevelCapping),
                a.off(b.Events.MANIFEST_PARSED, this._onManifestParsed),
                a.off(b.Events.MEDIA_ATTACHING, this._onMediaAttaching)),
                this.media = null,
                this.restrictedLevels = [],
                this.autoLevelCapping = -1,
                this.timer && (this.timer = clearInterval(this.timer))
            },
            detectPlayerSize: function() {
                if (this.media) {
                    var a = this.levels ? this.levels.length : 0;
                    if (a) {
                        var b = this.hls;
                        b.config.capQualityToStage && (b.autoLevelCapping = this.getMaxLevel(a - 1)),
                        b.autoLevelCapping > this.autoLevelCapping && b.streamController.nextLevelSwitch(),
                        this.autoLevelCapping = b.autoLevelCapping
                    }
                }
            },
            onFpsDropLevelCapping: function(a) {
                this.isLevelRestricted(a.droppedLevel) || this.restrictedLevels.push(a.droppedLevel)
            },
            onManifestParsed: function(b) {
                if (!c()) {
                    var d = this.hls;
                    this.levels = b.levels,
                    d.firstLevel = this.getMaxLevel(b.firstLevel),
                    this.timer && clearInterval(this.timer),
                    this.timer = setInterval(a.proxy(this.detectPlayerSize, this), 2e3),
                    this.detectPlayerSize()
                }
            },
            onMediaAttaching: function(a) {
                this.media = a.media instanceof HTMLVideoElement ? a.media : null
            },
            getMediaHeight: function() {
                var a = 0
                  , b = this.media;
                return b && (a = b.height || b.clientHeight || b.offsetHeight),
                a
            },
            getMaxLevel: function(a) {
                var b, c, d, e, f, g = 0, h = 0;
                for (b = Math.max(480, this.getMediaHeight()),
                h = 0; h <= a && (c = this.levels[h],
                d = c.height,
                e = this.levels[h + 1],
                !(d > b)) && !this.isLevelRestricted(h) && !(f && f.height === d && b - d < 100 && (!e || e.height > b)); h++)
                    g = h,
                    f = c;
                return g
            },
            isLevelRestricted: function(a) {
                return this.restrictedLevels.indexOf(a) !== -1
            }
        }),
        d
    }),
    define("player/trackBuilder", ["jquery"], function(a) {
        "use strict";
        var b = {};
        return b.getTrackQueryForStream = function(a) {
            var b = String(a).split("?")[1];
            return b ? "?" + b.replace(/uniqueId=[^&]*/i, "").replace(/preroll=[^&]*/i, "").replace(/postroll=[^&]*/i, "").replace(/&+/, "&").replace(/^&/, "").replace(/&$/, "") : ""
        }
        ,
        b.buildTracks = function(c) {
            var d = a();
            if (!c || !c.languages || !c.languages.length)
                return d;
            var e = "";
            try {
                e = b.getTrackQueryForStream(c.resources.hls.stream)
            } catch (a) {}
            for (var f = c.languages.length; f--; ) {
                var g = c.languages[f];
                d = d.add(a("<track>").attr("kind", "subtitles").attr("label", g.languageName).attr("src", "https://hls.ted.com/talks/" + c.id + "/subtitles/" + g.languageCode + "/full.vtt" + e).attr("srclang", g.languageCode))
            }
            return d
        }
        ,
        b
    }),
    define("player/actionsHlsjs", ["jquery", "hlsjs", "./emptyVideo", "./hlsjsCustomCapLevelController", "./trackBuilder", "./actionsHls"], function(a, b, c, d, e, f) {
        "use strict";
        function g(a, b) {
            var c = a._hlsjsErrorData && +a._hlsjsErrorData.mediaRecoveryStarted;
            return c > +j && +new Date - c < (b || 1e3)
        }
        function h(a, b) {
            var c = a._hlsjsErrorData && +a._hlsjsErrorData.networkRecoveryStarted;
            return c > +j && +new Date - c < (b || 1e3)
        }
        var i = {}
          , j = new Date;
        return a.extend(i, f),
        i._hlsjsRecoverMedia = function() {
            var b = this
              , c = b._hlsjsErrorData || {}
              , d = b && b.topic("currentTime").read() || "N/A"
              , e = {
                type: "hlsjs",
                severity: "info",
                streamUrl: c.streamUrl,
                currentTime: d
            };
            if (g(b, 3e3))
                return b.throwError(a.extend({
                    message: "Media recovery rejected: too soon"
                }, e)),
                !1;
            if (c.mediaRecoveryTime !== d && (c.mediaRecoveryTime = d,
            c.mediaRecoveryCount = 0),
            b.el && b.el.error && b.el.error.code === b.el.error.MEDIA_ERR_DECODE) {
                var f = (b.hlsjs.currentLevel || 2) - 1;
                b.hlsjs.autoLevelCapping = Math.max(f, b.hlsjs.autoLevelCapping),
                b.hlsjs.currentLevel = f,
                b.hlsjs.nextLevel = f
            }
            return c.mediaRecoveryCount > 0 && b.hlsjs.swapAudioCodec(),
            b.hlsjs.recoverMediaError(),
            c.mediaRecoveryCount++,
            c.mediaRecoveryStarted = new Date,
            e.recovery_attempts = c.mediaRecoveryCount,
            b.throwError(a.extend({
                message: "Media recovery started"
            }, e)),
            b.el && b.el.play(),
            !0
        }
        ,
        i._hlsjsRecoverNetwork = function() {
            var b = this
              , c = b._hlsjsErrorData || {}
              , d = b && b.topic("currentTime").read() || "N/A"
              , e = {
                type: "hlsjs",
                severity: "info",
                streamUrl: c.streamUrl,
                currentTime: d
            };
            return h(b, 3e3) ? (b.throwError(a.extend({
                message: "Network recovery rejected: too soon"
            }, e)),
            !1) : (c.networkRecoveryTime !== d && (c.networkRecoveryTime = d,
            c.networkRecoveryCount = 0),
            b.hlsjs.startLoad(),
            c.networkRecoveryCount++,
            c.networkRecoveryStarted = new Date,
            e.recovery_attempts = c.networkRecoveryCount,
            b.throwError(a.extend({
                message: "Network recovery started"
            }, e)),
            b.el && b.el.play(),
            !0)
        }
        ,
        i._hlsjsErrorSetup = function(a) {
            var b = this;
            b._hlsjsErrorData = {
                networkRecoveryTime: "N/A",
                networkRecoveryCount: 0,
                networkRecoveryStarted: null,
                mediaRecoveryTime: "N/A",
                mediaRecoveryCount: 0,
                mediaRecoveryStarted: null,
                streamUrl: a
            }
        }
        ,
        i._hlsjsErrorHandle = function(a) {
            var c = this
              , d = c._hlsjsErrorData || {}
              , e = {
                type: "hlsjs",
                message: a.type + ": " + a.details,
                severity: "info",
                streamUrl: d.streamUrl,
                currentTime: c && c.topic("currentTime").read() || "N/A"
            };
            if (a.fatal) {
                var f;
                switch (a.type) {
                case b.ErrorTypes.NETWORK_ERROR:
                    f = i._hlsjsRecoverNetwork.call(c),
                    e.severity = a.fatal && !f ? "fatal" : "warning",
                    e.recovering = f,
                    e.recovery_attempts = d.networkRecoveryCount;
                    break;
                case b.ErrorTypes.MEDIA_ERROR:
                    f = i._hlsjsRecoverMedia.call(c),
                    e.severity = a.fatal && !f ? "fatal" : "warning",
                    e.recovering = f,
                    e.recovery_attempts = d.mediaRecoveryCount;
                    break;
                default:
                    e.severity = "fatal"
                }
            }
            switch (a.details) {
            case b.ErrorDetails.MANIFEST_LOAD_ERROR:
            case b.ErrorDetails.LEVEL_LOAD_ERROR:
                e.request_url = a.url,
                e.response_code = a.response && a.response.code,
                e.response_text = a.response && a.response.text;
                break;
            case b.ErrorDetails.MANIFEST_LOAD_TIMEOUT:
            case b.ErrorDetails.LEVEL_LOAD_TIMEOUT:
                e.request_url = a.url;
                break;
            case b.ErrorDetails.MANIFEST_PARSING_ERROR:
                e.request_url = a.url,
                e.reason = a.reason;
                break;
            case b.ErrorDetails.LEVEL_SWITCH_ERROR:
                e.hls_level = a.level,
                e.reason = a.reason;
                break;
            case b.ErrorDetails.FRAG_LOAD_ERROR:
            case b.ErrorDetails.FRAG_LOOP_LOADING_ERROR:
            case b.ErrorDetails.FRAG_LOAD_TIMEOUT:
                e.request_url = a.frag && a.frag.url,
                e.request_bytes_start = a.frag && a.frag.byteRangeStartOffset,
                e.request_bytes_end = a.frag && a.frag.byteRangeEndOffset,
                e.response_code = a.response && a.response.code,
                e.response_text = a.response && a.response.text;
                break;
            case b.ErrorDetails.FRAG_PARSING_ERROR:
                e.reason = a.reason;
                break;
            case b.ErrorDetails.MANIFEST_INCOMPATIBLE_CODECS_ERROR:
                e.media_url = a.url;
                break;
            case b.ErrorDetails.BUFFER_ADD_CODEC_ERROR:
                e.mse_error = a.err && a.err.message,
                e.mse_mime_type = a.mimeType;
                break;
            case b.ErrorDetails.BUFFER_APPEND_ERROR:
                e.request_url = a.frag && a.frag.url,
                e.request_bytes_start = a.frag && a.frag.byteRangeStartOffset,
                e.request_bytes_end = a.frag && a.frag.byteRangeEndOffset;
                break;
            case b.ErrorDetails.BUFFER_SEEK_OVER_HOLE:
                e.hole_duration = a.hole
            }
            c.throwError(e)
        }
        ,
        i._setSource = function(c) {
            var f = this;
            f._unsetSource(),
            f.topic("ready.sourceSetting").publishUnique(!0),
            f.topic("hlsjs.seekable").publishUnique(!0),
            f.topic("hlsjs.seeking").publishUnique(void 0);
            var g = a.extend({
                autoStartLoad: !1,
                capQualityToStage: f.options.capQualityToStage,
                capLevelController: d,
                startLevel: f.config.get("hlsjsStartLevel"),
                subtitleStreamController: !1,
                subtitleTrackController: !1,
                timelineController: !1,
                enableCEA708Captions: !1,
                enableWebVTT: !1
            }, f.options.hlsjsConfig || {});
            f.hlsjs = new b(g);
            var h = f.options.hlsjsEvents || {};
            for (var j in h)
                h.hasOwnProperty(j) && f.hlsjs.on(b.Events[j], function(a, b) {
                    h[j].call(f.hlsjs, b)
                });
            f.hlsjs.on(b.Events.MANIFEST_PARSED, function() {
                f.topic("ready.sourceSet").publishUnique(!0);
                var a = f.topic("ready.seeking").read();
                f.hlsjs.startLoad(a ? a : -1),
                f.topic("hlsjs.seekable").publishUnique(!1)
            }),
            f.hlsjs.on(b.Events.LEVEL_LOADED, function(a, b) {
                f.config.set("hlsjsStartLevel", b.level)
            }),
            f.hlsjs.on(b.Events.LEVEL_SWITCHING, function(a, b) {
                b && b.bitrate > 0 && f.topic("metricsData.bitrate").publishUnique(b.bitrate)
            }),
            i._hlsjsErrorSetup.call(f, c),
            f.hlsjs.on(b.Events.ERROR, function(a, b) {
                i._hlsjsErrorHandle.call(f, b)
            }),
            f.hlsjs.loadSource(c),
            f.hlsjs.attachMedia(f.el);
            var k = a(f.el);
            k.attr("crossorigin", "anonymous"),
            k.append(e.buildTracks(f.currentTalk))
        }
        ,
        i._unsetSource = function() {
            var b = this;
            b.hlsjs && (b.hlsjs.destroy(),
            delete b.hlsjs),
            b.el && a(b.el).removeAttr("crossorigin").attr("src", c).find("track").remove(),
            b.topic("ready.sourceSet").publishUnique(!1)
        }
        ,
        i.capQualityToStage = function(a) {
            this.hlsjs && (this.hlsjs.config.capQualityToStage = a)
        }
        ,
        i.seek = function(a) {
            var b = this;
            b.topic("hlsjs.seekable").read() ? b.el.currentTime = a : b.topic("hlsjs.seeking").publishUnique(a)
        }
        ,
        i._setSource.early = !0,
        i._unsetSource.early = !0,
        i.capQualityToStage.early = !0,
        i
    }),
    define("player/augmentTalks", ["jquery"], function(a) {
        "use strict";
        return function(b) {
            if (!b || !b.length)
                return [];
            for (var c, d = b.length, e = d; e--; ) {
                var f = String(b[e].resources && b[e].resources.hls && b[e].resources.hls.stream)
                  , g = f.indexOf("preroll=") === -1 || f.indexOf("preroll=Blank") > -1;
                c = a.extend({
                    index: e,
                    introDuration: 12.05116,
                    adDuration: g ? "3.6" : "0",
                    postAdDuration: g ? "0.2" : "0"
                }, b[e]),
                b[e] = c
            }
            return b
        }
    }),
    define("player/getFullScreenActions", ["jquery"], function(a) {
        "use strict";
        function b(b) {
            var c = document
              , d = b.fullScreenMode
              , e = f[d];
            b.topic("fullScreen").subscribe(function(a) {
                b.isFullScreen = a,
                b.topic(a ? "enterFullScreen" : "exitFullScreen").publish()
            }),
            "webkitVideo" === d ? a(b.el).on("webkitpresentationmodechanged", function() {
                b.topic("fullScreen").publishUnique("fullscreen" === b.el.webkitPresentationMode)
            }) : e && a(c).on(e.change, function() {
                c[e.element] === b.fullScreenElement ? b.topic("fullScreen").publishUnique(!0) : !c[e.element] && b.isFullScreen && b.topic("fullScreen").publishUnique(!1)
            })
        }
        function c(a) {
            function b() {
                c.webkitEnterFullscreen()
            }
            var c = a.el;
            c.readyState >= 1 ? b(a) : (c.addEventListener("loadedmetadata", b, !1),
            a.play())
        }
        function d(a) {
            var b = a.fullScreenMode
              , c = window.document;
            "webkitVideo" === b ? a.el.webkitExitFullscreen() : f[b] && c[f[b].cancel]()
        }
        function e(a) {
            var b = a.fullScreenMode;
            "webkitVideo" === b ? c(a) : f[b] ? a.fullScreenElement[f[b].request]() : a.throwError({
                type: "client",
                message: "Full screen mode not supported",
                severity: "warning"
            })
        }
        var f = {
            standard: {
                cancel: "cancelFullScreen",
                change: "fullscreenchange",
                enabled: "fullscreenEnabled",
                error: "fullscreenerror",
                element: "fullscreenElement",
                request: "requestFullScreen"
            },
            moz: {
                cancel: "mozCancelFullScreen",
                change: "mozfullscreenchange",
                enabled: "mozFullScreenEnabled",
                error: "mozfullscreenerror",
                element: "mozFullScreenElement",
                request: "mozRequestFullScreen"
            },
            ms: {
                cancel: "msExitFullscreen",
                change: "MSFullscreenChange",
                enabled: "msFullscreenEnabled",
                error: "MSFullscreenError",
                element: "msFullscreenElement",
                request: "msRequestFullscreen"
            },
            webkit: {
                cancel: "webkitCancelFullScreen",
                change: "webkitfullscreenchange",
                enabled: "webkitFullscreenEnabled",
                error: "webkitfullscreenerror",
                element: "webkitCurrentFullScreenElement",
                request: "webkitRequestFullScreen"
            }
        };
        return function(a) {
            return a.topic("ready.dom").subscribe(function() {
                b(a)
            }),
            {
                requestFullScreen: function(b) {
                    a.fullScreenElement || (a.fullScreenElement = b || a.el),
                    e(a)
                },
                cancelFullScreen: function() {
                    d(a)
                }
            }
        }
    }),
    define("player/reduceTalks", [], function() {
        "use strict";
        return function(a) {
            if (a.id)
                return String(a.id);
            for (var b = a.length, c = []; b--; )
                a[b].id && c.push(String(a[b].id));
            return c.reverse().join(",")
        }
    }),
    define("player/addActions", ["jquery", "./actionsFlash", "./actionsH264", "./actionsHls", "./actionsHlsjs", "./augmentTalks", "./clickOverlay", "./getTalk", "./getFullScreenActions", "./reduceTalks", "./postroll-client/index"], function(a, b, c, d, e, f, g, h, i, j, k) {
        "use strict";
        var l = {
            flash: b,
            h264: c,
            hls: d,
            hlsjs: e
        };
        return function(b) {
            function c(a, c) {
                var d = b.topic("ready").read()
                  , e = b.topic("ready.sourceSet").read();
                a.wiper && p.splice(0, p.length),
                a.sourcer && d && !e && !b.topic("ready.sourceSetting").read() ? a.apply(b, c) : a.early || d && e ? a.apply(b, c) : p.push({
                    callback: a,
                    args: c
                }),
                d && !e && a.resourcer && !b.topic("ready.sourceSetting").read() && b._setSourceFromCurrentTalk()
            }
            function d() {
                var a;
                if (q)
                    return !1;
                a = p.splice(0, p.length),
                q = !0;
                for (var d = -1, e = a.length; ++d < e; )
                    c(a[d].callback, a[d].args);
                return q = !1,
                b.topic("ready.dequeued").publish(!0),
                !0
            }
            function e(a) {
                return function() {
                    return c(a, [].slice.call(arguments)),
                    b
                }
            }
            function m() {
                var a = b.topic("ready").read()
                  , c = b.topic("ready.sourceSet").read();
                a && c && p.length && d()
            }
            var n = b.mode
              , o = l[n]
              , p = []
              , q = !1;
            if (!o)
                return void b.throwError({
                    type: "init",
                    message: "No actions found for unrecognized player mode: " + n,
                    severity: "fatal"
                });
            b.topic("ready.sourceSet").subscribe(m),
            b.topic("ready.dequeued").subscribe(m),
            b.topic("ready").subscribe(m),
            b.topic("play").subscribe(function() {
                b.lastPlayedTalkId = b.currentTalk && b.currentTalk.id
            }),
            o.play = function() {
                var a = o.play
                  , c = !1;
                return b.topic("ended").subscribe(function() {
                    c = !0
                }),
                b.topic("play").subscribe(function() {
                    c = !1
                }),
                function() {
                    c && o.seek(0),
                    a.call(b)
                }
            }(),
            o.playNext = function() {
                var a = h(b, b.currentTalk.id, 1);
                a && b.playTalk(a.id)
            }
            ,
            o.playPrev = function() {
                var a = h(b, b.currentTalk.id, -1);
                a && b.playTalk(a.id)
            }
            ,
            o.playbackRate = function(a) {
                b.topic("playbackRate").publish(a)
            }
            ,
            o.popOut = function(a) {
                b.canPopOut && b.el.webkitSetPresentationMode && b.el.webkitSetPresentationMode(a ? "picture-in-picture" : "inline")
            }
            ,
            o.volume = function() {
                var a = o.volume;
                return function(c) {
                    c = Math.round(1e3 * +c) / 1e3,
                    c < 0 && (c = 0),
                    c > 1 && (c = 1),
                    a.call(b, c),
                    b.topic("volume").publishUnique(c)
                }
            }(),
            o.mute = function() {
                var a = o.mute;
                return function(c) {
                    c = !!c,
                    a.call(b, c),
                    b.topic("muted").publishUnique(c)
                }
            }(),
            o.seek = function() {
                var a = o.seek
                  , c = 0;
                return b.topic("duration").subscribe(function(a) {
                    c = a
                }),
                function(d) {
                    d = +d,
                    d < 0 && (d = 0),
                    d > c - .5 && (d = c - .5),
                    a.call(b, d)
                }
            }(),
            o.seek = function() {
                function a(a) {
                    d = a,
                    b.topic("ready.seeking").publishUnique(a)
                }
                var c = o.seek
                  , d = !1
                  , e = !1;
                return b.topic("ready.seekable").subscribe(function(f) {
                    f && (d !== !1 && (c.call(b, d),
                    a(!1)),
                    e = !0)
                }),
                function(d) {
                    e ? c.call(b, d) : a(d)
                }
            }(),
            o.contentTime = function(a) {
                b.seek(a / 1e3 + (b.currentTalk && b.currentTalk.introDuration || 0))
            }
            ,
            o.toggle = function() {
                b.paused ? b.play() : b.pause()
            }
            ,
            o.capQualityToStage = function() {
                var c = o.capQualityToStage || a.noop;
                return function(a) {
                    b.options.capQualityToStage = !!a,
                    c.call(b, !!a)
                }
            }();
            var r = i(b);
            o.requestFullScreen = r.requestFullScreen,
            o.cancelFullScreen = r.cancelFullScreen,
            o.nativeControls = function(a) {
                b.canNativeControls && (a ? b.el.setAttribute("controls", "controls") : b.el.removeAttribute("controls"),
                b.topic("nativeControls").publishUnique(!!a))
            }
            ;
            var s;
            o.nativeFullScreen = function(a) {
                b.canNativeFullScreen && (a ? (s = b.el.getAttribute("controls"),
                o.requestFullScreen(b.el),
                o.nativeControls(!0)) : (s || o.nativeControls(!1),
                o.cancelFullScreen()))
            }
            ,
            o.setTalks = function(a) {
                if (a && a.length) {
                    b.oldTalks || (b.oldTalks = j(b.options.talks));
                    var c = j(a);
                    if (c === b.oldTalks)
                        return void window.console.warn("PaRappa ignoring duplicative setTalks request.");
                    b.topic("ready").publishUnique(!1),
                    b.topic("ready.seekable").publishUnique(!1),
                    b._unsetSource(),
                    g.forPlayer(b).hide(),
                    k.forPlayer(b).abandon(),
                    b.options.talks = f(a),
                    b.oldTalks = c,
                    b.topic("ad").publishUnique(null),
                    b.topic("contentTime").publishUnique(null),
                    b.topic("currentTime").publishUnique(null),
                    b.topic("duration").publishUnique(null),
                    b.topic("metricsData").publishUnique(null),
                    b.topic("postrollDuration").publishUnique(null),
                    b.topic("postrollRemaining").publishUnique(null),
                    b.topic("progress").publishUnique(null),
                    b.topic("subtitleCue").publishUnique(null);
                    var d = a[0];
                    b.currentTalk = d,
                    b._setSourceFromCurrentTalk()
                }
            }
            ,
            o.cancelFullScreen.early = !0,
            o.play.resourcer = !0,
            o.seek.resourcer = !0,
            o.contentTime.resourcer = !0,
            o.setTalks.sourcer = !0,
            o.playNext.sourcer = !0,
            o.playPrev.sourcer = !0,
            o.playTalk.sourcer = !0,
            o.playNext.wiper = !0,
            o.playPrev.wiper = !0,
            o.playTalk.wiper = !0,
            o.setTalks.wiper = !0;
            for (var t in o)
                o.hasOwnProperty(t) && (b[t] = e(o[t]))
        }
    }),
    define("player/addProperties", ["./clientChecks"], function(a) {
        "use strict";
        return function(b) {
            var c = b.options.mode
              , d = "hls" === c || "hlsjs" === c || "h264" === c;
            b.fullScreenMode = a.fullScreenMode(),
            b.canFullScreen = b.fullScreenMode !== !1,
            b.canNativeControls = d,
            b.canNativeFullScreen = b.canNativeControls && b.canFullScreen,
            b.canPlaybackRate = !!d && a.canPlaybackRate(),
            b.canPopOut = "flash" !== c && a.canPopOut(),
            b.canSubtitle = "flash" === c || "hls" === c || "hlsjs" === c && a.canHtml5Subtitle(),
            b.canVolume = "flash" === c || a.canVolume(),
            b.mode = c,
            b.talks = b.options.talks,
            b.postrolling = !1,
            b.paused = !0,
            b.on("play", function() {
                b.paused = !1
            }).on("pause", function() {
                b.paused = !0
            })
        }
    }),
    define("player/addPlaybackRate", [], function() {
        "use strict";
        var a = 1;
        return function(b) {
            function c() {
                return b.config.get("playbackRate")
            }
            function d() {
                g ? b._playbackRate(a) : b._playbackRate(c())
            }
            function e() {
                g = !1,
                d()
            }
            function f() {
                g = !0,
                d()
            }
            var g = !1;
            b.on("ready", function() {
                b.playbackRate(c())
            }),
            b.on("play", d),
            b.on("prerollStart", f),
            b.on("postrollStart", f),
            b.on("prerollComplete", e),
            b.on("postrollComplete", e),
            b.on("playbackRate", function(a) {
                b.config.set("playbackRate", a),
                d()
            })
        }
    }),
    define("player/addProlongedBuffering", [], function() {
        "use strict";
        function a(a) {
            function c() {
                l && (window.clearInterval(l),
                l = null)
            }
            function d() {
                var a, c = new Date - m, d = b.length, e = i && !k, f = e ? "prolongedRebuffer" : "prolongedBuffer";
                if (!j)
                    return void (m = new Date);
                for (n[f] = n[f] || []; d--; )
                    a = b[d],
                    c > a && n[f].indexOf(a) === -1 && (n[f].push(a),
                    o(f).publish(a))
            }
            function e() {
                c(),
                m = new Date,
                l = window.setInterval(d, 100)
            }
            function f() {
                c()
            }
            function g() {
                j = !0
            }
            function h() {
                j = !1
            }
            var i, j, k, l, m, n = {}, o = a.topic;
            o("talk").subscribe(function() {
                i = !1,
                n = {}
            }),
            o("bufferPlayable").subscribe(function() {
                i = !0
            }),
            o("seeking").subscribe(function() {
                k = !0
            }),
            o("seeked").subscribe(function() {
                window.setTimeout(function() {
                    k = !1
                }, 500)
            }),
            o("bufferUnplayable").subscribe(e),
            o("bufferPlayable").subscribe(f),
            o("play").subscribe(g),
            o("pause").subscribe(h),
            o("talk").subscribe(h),
            o("talkComplete").subscribe(f),
            o("talkComplete").subscribe(h),
            o("prolongedBuffer").subscribe(function(b) {
                b % 2e3 && a.throwError({
                    message: "Prolonged Buffer: " + b
                })
            }),
            o("prolongedRebuffer").subscribe(function(b) {
                b % 2e3 && a.throwError({
                    message: "Prolonged Rebuffer: " + b
                })
            })
        }
        var b = [5e3, 4e3, 3e3, 2e3, 1e3];
        return a
    }),
    define("player/addPlayToken", [], function() {
        "use strict";
        function a(b) {
            a.init(b)
        }
        var b = Math.pow(2, 53) - 1;
        return a.makeToken = function() {
            return ["001", Math.floor(Math.random() * b).toString(36), (new Date).getTime().toString(36)].join("-")
        }
        ,
        a.init = function(b) {
            var c = b.topic;
            c("ready.sourceSetting").subscribe(function(d) {
                if (d) {
                    var e = a.makeToken();
                    b.playToken = e,
                    c("playToken").publishUnique(e)
                }
            })
        }
        ,
        a
    }),
    define("player/addVolume", [], function() {
        "use strict";
        return function(a) {
            var b = !1;
            a.on("ready", function() {
                a.volume(a.config.get("volume")),
                a.mute(a.config.get("muted"))
            }).on("muted", function(c) {
                b = c,
                a.config.set("muted", c)
            }).on("volume", function(c) {
                a.config.set("volume", c),
                c > 0 && b && a.mute(!1)
            })
        }
    }),
    define("player/addInitPromise", ["jquery"], function(a) {
        "use strict";
        return function(b) {
            var c = new a.Deferred;
            b.on("error", function(a) {
                c.rejectWith(b, [a])
            }),
            b.on("ready", function() {
                "pending" === c.state() && c.resolveWith(b, [b])
            }),
            a.extend(b, c.promise())
        }
    }),
    define("player/addThrower", ["jquery", "./isMobile"], function(a, b) {
        "use strict";
        var c = window
          , d = c && c.console
          , e = d && d.log;
        return function(f) {
            var g = !0;
            f.one("play", function() {
                g = !1
            }),
            f.throwError = function(h) {
                var i = !!f
                  , j = i && f.mode
                  , k = {
                    context: "ted_player_wrapper",
                    type: "unknown",
                    message: "Something happened",
                    severity: "warning",
                    deviceType: b() ? "mobile" : "desktop",
                    playerMode: j,
                    playToken: i && f.playToken || "",
                    location: c && c.location.href,
                    currentTime: i && f.topic("currentTime").read() || "",
                    isPostrolling: i && !!f.postrolling,
                    pev: "004"
                }
                  , l = {};
                "hls" === j && f.el && (l.streamUrl = f.el.src),
                "hlsjs" === j && f.hlsjs && (l.levelLoad = f.hlsjs.loadLevel,
                l.streamUrl = f.hlsjs.url);
                var m = {};
                f && f.maiAd && (m.masterLineItemId = f.maiAd.lineItemId,
                m.masterCreativeId = f.maiAd.creativeId,
                m.masterTargetingValue = f.maiAd.companionTargetingValue);
                var n = a.extend({}, k, l, m, h || {});
                g && "fatal" === n.severity && (n.severity = "abortive");
                var o, p;
                switch (n.severity) {
                case "abortive":
                case "fatal":
                    o = 1,
                    p = "#F2D2CF";
                    break;
                case "warning":
                    o = 2,
                    p = "#FCF1CC";
                    break;
                default:
                    o = 3,
                    p = "#999999"
                }
                f.options && f.options.logLevel >= o && (a.post("https://error-collector.ted.com/", {
                    message: n
                }),
                f.options.logConsole > 0 && e && (1 === f.options.logConsole ? d.log("%cPaRappa: " + n.message, "color: " + p) : d.log(n))),
                f.topic("error").publish(n)
            }
            ,
            f.throwConsoleData = function(a) {
                e && f.options.logLevel >= 3 && f.options.logConsole >= 2 && d.log(a)
            }
        }
    }),
    define("player/Config", ["jquery"], function(a) {
        "use strict";
        function b(a) {
            this._options = a,
            this._inited = !1
        }
        return a.extend(b.prototype, {
            _init: function() {
                if (!this._inited) {
                    var b = this._options.storageAdapter.getObject(this._options.storageProperty);
                    this.internal = a.extend({}, this._options.defaults, b),
                    this._inited = !0
                }
            },
            get: function(a) {
                return this._init(),
                this.internal[a]
            },
            set: function(a, b) {
                this._init(),
                this.internal[a] = b,
                this._options.storageAdapter.setObject(this._options.storageProperty, this.internal)
            }
        }),
        b
    }),
    define("player/StorageAdapter", ["jquery"], function(a) {
        "use strict";
        function b(a) {
            if (!(a && a.getItem && a.setItem && window.JSON && JSON.parse && JSON.stringify))
                return !1;
            try {
                var b = Math.floor(99999 * Math.random()).toString(36)
                  , c = "parappa-test-" + b;
                if (a.setItem(c, b),
                a.getItem(c, b) !== b)
                    return !1;
                a.removeItem(c)
            } catch (a) {
                return !1
            }
            return !0
        }
        function c(a) {
            this.fallback = {},
            this.adapter = a,
            this.isStorable = b(a)
        }
        return a.extend(c.prototype, {
            getItem: function(a) {
                return this.isStorable ? this.adapter.getItem(a) : this.fallback[a]
            },
            getObject: function(b) {
                var c = this.getItem(b);
                try {
                    if (c = JSON.parse(c),
                    "object" === a.type(c))
                        return c
                } catch (a) {}
                return {}
            },
            setItem: function(a, b) {
                this.isStorable ? this.adapter.setItem(a, b) : this.fallback[a] = b
            },
            setObject: function(b, c) {
                "object" === a.type(c) && this.setItem(b, JSON.stringify(c))
            }
        }),
        c
    }),
    define("player/Player", ["jquery", "./topicFactory", "./replaceElement", "./getSupportedMode", "./checkRequiredParams", "./addHandlers", "./addActions", "./addProperties", "./addPlaybackRate", "./addProlongedBuffering", "./addPlayToken", "./addVolume", "./augmentTalks", "./isLastTalk", "./addInitPromise", "./addThrower", "./Config", "./masterAdInterface", "./StorageAdapter"], function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) {
        "use strict";
        function t(n) {
            var s = this;
            this.topic = b({
                bufferPlayable: void 0,
                bufferUnplayable: void 0,
                complete: void 0,
                ended: void 0,
                error: void 0,
                idle: void 0,
                prolongedBuffer: void 0,
                prolongedRebuffer: void 0,
                play: void 0,
                pause: void 0,
                prerollStart: void 0,
                prerollBlock: void 0,
                postrollStart: void 0,
                postrollEnd: void 0,
                postrollComplete: void 0,
                adBlock: void 0,
                seeked: void 0,
                seeking: void 0,
                talkComplete: void 0
            }),
            p(s);
            var t = !1;
            this.topic("error").subscribe(function(a) {
                "abortive" === a.severity && (t = !0)
            }),
            o(s),
            n = a.extend({}, w, n),
            this.options = n,
            e(n, s.throwError),
            n.mode = d(n),
            n.mode || s.throwError({
                type: "client",
                message: "Client does not support any player mode.",
                severity: "fatal"
            }),
            n.talks = m(n.talks),
            n.talks.length || s.throwError({
                type: "init",
                message: "No talks sent to player.",
                severity: "fatal"
            }),
            this.options = n,
            this.config = new q(a.extend({
                defaults: {
                    languageCode: !1,
                    muted: !1,
                    volume: n.defaultVolume,
                    playbackRate: n.defaultPlaybackRate,
                    hlsjsStartLevel: n.hlsjsConfig.startLevel,
                    popOut: !1
                }
            }, n)),
            h(this),
            g(s),
            l(s),
            i(s),
            j(s),
            k(s),
            t || (r.override(this.options.mai),
            this.topic("ready.dom").once(function() {
                function a() {
                    !t && b && c && s.topic("ready").publishUnique(!0)
                }
                var b = !1
                  , c = !1;
                window.setTimeout(function() {
                    f(s),
                    s.topic("ready.sourceSet").subscribe(function(c) {
                        b = c,
                        a()
                    }),
                    s.topic("ready.handlers").once(function() {
                        c = !0,
                        a()
                    })
                }, 10)
            }),
            c(this))
        }
        var u, v = function() {
            var a = document.createElement("video");
            return a && a.defaultPlaybackRate ? a.defaultPlaybackRate : 1
        }();
        try {
            u = window.localStorage
        } catch (a) {}
        u = new s(u);
        var w = {
            attrs: {},
            customSubtitles: !1,
            defaultSubtitles: !1,
            defaultPlaybackRate: v,
            defaultVolume: .5,
            el: null,
            flashVersion: "11.1.0",
            mai: !1,
            maiFlash: !1,
            maiAdUnitId: null,
            maiPostrollType: "imasdkish",
            maiUrlOverrides: !1,
            modes: void 0,
            nativeLanguage: "en",
            storageAdapter: u,
            storageProperty: "playerconfig",
            hlsjsConfig: {},
            hlsjsEvents: {},
            imasdkDebug: !1,
            logLevel: 2,
            logConsole: 1,
            capQualityToStage: !0,
            swf: "https://pb.tedcdn.com/assets/player/flash_hls/player_4_01_002.swf"
        };
        a.extend(t.prototype, {
            off: function(a, b) {
                return this.topic(a).unsubscribe(b),
                this
            },
            on: function(a, b) {
                return this.topic(a).subscribe(b),
                this
            },
            one: function(a, b) {
                return this.topic(a).once(b),
                this
            },
            isLastTalk: function() {
                return n(this)
            }
        }),
        t.getSupportedMode = function() {
            return d(w)
        }
        ;
        b();
        return t
    }),
    define("lib/focus-zone", ["jquery", "lodash", "jqueryui/core"], function(a, b) {
        "use strict";
        function c(b) {
            this.$el = a(b)
        }
        function d(a) {
            a.preventDefault()
        }
        var e = a(window);
        return c.__reset = function() {
            b.assign(c, {
                __active: void 0,
                __isListening: !1,
                __zones: []
            })
        }
        ,
        c.__addZone = function(a) {
            c.__zones.push(a),
            c.__setActive(),
            c.__startListening()
        }
        ,
        c.__removeZone = function(a) {
            c.__zones = b.without(c.__zones, a),
            c.__setActive(),
            c.__stopListening()
        }
        ,
        c.__setActive = function() {
            c.__active = b.last(c.__zones)
        }
        ,
        c.__startListening = function() {
            c.__isListening || c.__active && (c.__startListeningInner(),
            c.__isListening = !0)
        }
        ,
        c.__startListeningInner = function() {
            e.on("keydown", c.__keyDown)
        }
        ,
        c.__stopListening = function() {
            c.__isListening && (c.__active || (c.__stopListeningInner(),
            c.__isListening = !1))
        }
        ,
        c.__stopListeningInner = function() {
            e.off("keydown", c.__keyDown)
        }
        ,
        c.__keyDown = function(e) {
            var f = c.__active;
            if (f && e.keyCode === a.ui.keyCode.TAB) {
                var g = e.target
                  , h = f.$el
                  , i = h.find(":tabbable")
                  , j = i.filter(":first")
                  , k = i.filter(":last");
                g !== k[0] && g !== h[0] || e.shiftKey ? g !== j[0] && g !== h[0] || !e.shiftKey ? b.indexOf(i, g) === -1 && (j.focus(),
                d(e)) : (k.focus(),
                d(e)) : (j.focus(),
                d(e))
            }
        }
        ,
        b.assign(c.prototype, {
            activate: function() {
                return this._recordFocus(),
                c.__addZone(this),
                this
            },
            deactivate: function() {
                return c.__removeZone(this),
                this._restoreFocus(),
                this
            },
            _recordFocus: function() {
                this.$focus = a(":focus")
            },
            _restoreFocus: function() {
                this.$focus && this.$focus.length && this.$focus.focus()
            }
        }),
        c.__reset(),
        c
    }),
    function(a, b) {
        "object" == typeof exports ? module.exports = b() : "function" == typeof define && define.amd ? define("spinjs", b) : a.Spinner = b()
    }(this, function() {
        "use strict";
        function a(a, b) {
            var c, d = document.createElement(a || "div");
            for (c in b)
                d[c] = b[c];
            return d
        }
        function b(a) {
            for (var b = 1, c = arguments.length; b < c; b++)
                a.appendChild(arguments[b]);
            return a
        }
        function c(a, b, c, d) {
            var e = ["opacity", b, ~~(100 * a), c, d].join("-")
              , f = .01 + c / d * 100
              , g = Math.max(1 - (1 - a) / b * (100 - f), a)
              , h = k.substring(0, k.indexOf("Animation")).toLowerCase()
              , i = h && "-" + h + "-" || "";
            return m[e] || (n.insertRule("@" + i + "keyframes " + e + "{0%{opacity:" + g + "}" + f + "%{opacity:" + a + "}" + (f + .01) + "%{opacity:1}" + (f + b) % 100 + "%{opacity:" + a + "}100%{opacity:" + g + "}}", n.cssRules.length),
            m[e] = 1),
            e
        }
        function d(a, b) {
            var c, d, e = a.style;
            for (b = b.charAt(0).toUpperCase() + b.slice(1),
            d = 0; d < l.length; d++)
                if (c = l[d] + b,
                void 0 !== e[c])
                    return c;
            if (void 0 !== e[b])
                return b
        }
        function e(a, b) {
            for (var c in b)
                a.style[d(a, c) || c] = b[c];
            return a
        }
        function f(a) {
            for (var b = 1; b < arguments.length; b++) {
                var c = arguments[b];
                for (var d in c)
                    void 0 === a[d] && (a[d] = c[d])
            }
            return a
        }
        function g(a) {
            for (var b = {
                x: a.offsetLeft,
                y: a.offsetTop
            }; a = a.offsetParent; )
                b.x += a.offsetLeft,
                b.y += a.offsetTop;
            return b
        }
        function h(a, b) {
            return "string" == typeof a ? a : a[b % a.length]
        }
        function i(a) {
            return "undefined" == typeof this ? new i(a) : void (this.opts = f(a || {}, i.defaults, o))
        }
        function j() {
            function c(b, c) {
                return a("<" + b + ' xmlns="urn:schemas-microsoft.com:vml" class="spin-vml">', c)
            }
            n.addRule(".spin-vml", "behavior:url(#default#VML)"),
            i.prototype.lines = function(a, d) {
                function f() {
                    return e(c("group", {
                        coordsize: k + " " + k,
                        coordorigin: -j + " " + -j
                    }), {
                        width: k,
                        height: k
                    })
                }
                function g(a, g, i) {
                    b(m, b(e(f(), {
                        rotation: 360 / d.lines * a + "deg",
                        left: ~~g
                    }), b(e(c("roundrect", {
                        arcsize: d.corners
                    }), {
                        width: j,
                        height: d.width,
                        left: d.radius,
                        top: -d.width >> 1,
                        filter: i
                    }), c("fill", {
                        color: h(d.color, a),
                        opacity: d.opacity
                    }), c("stroke", {
                        opacity: 0
                    }))))
                }
                var i, j = d.length + d.width, k = 2 * j, l = 2 * -(d.width + d.length) + "px", m = e(f(), {
                    position: "absolute",
                    top: l,
                    left: l
                });
                if (d.shadow)
                    for (i = 1; i <= d.lines; i++)
                        g(i, -2, "progid:DXImageTransform.Microsoft.Blur(pixelradius=2,makeshadow=1,shadowopacity=.3)");
                for (i = 1; i <= d.lines; i++)
                    g(i);
                return b(a, m)
            }
            ,
            i.prototype.opacity = function(a, b, c, d) {
                var e = a.firstChild;
                d = d.shadow && d.lines || 0,
                e && b + d < e.childNodes.length && (e = e.childNodes[b + d],
                e = e && e.firstChild,
                e = e && e.firstChild,
                e && (e.opacity = c))
            }
        }
        var k, l = ["webkit", "Moz", "ms", "O"], m = {}, n = function() {
            var c = a("style", {
                type: "text/css"
            });
            return b(document.getElementsByTagName("head")[0], c),
            c.sheet || c.styleSheet
        }(), o = {
            lines: 12,
            length: 7,
            width: 5,
            radius: 10,
            rotate: 0,
            corners: 1,
            color: "#000",
            direction: 1,
            speed: 1,
            trail: 100,
            opacity: .25,
            fps: 20,
            zIndex: 2e9,
            className: "spinner",
            top: "auto",
            left: "auto",
            position: "relative"
        };
        i.defaults = {},
        f(i.prototype, {
            spin: function(b) {
                this.stop();
                var c, d, f = this, h = f.opts, i = f.el = e(a(0, {
                    className: h.className
                }), {
                    position: h.position,
                    width: 0,
                    zIndex: h.zIndex
                }), j = h.radius + h.length + h.width;
                if (b && (b.insertBefore(i, b.firstChild || null),
                d = g(b),
                c = g(i),
                e(i, {
                    left: ("auto" == h.left ? d.x - c.x + (b.offsetWidth >> 1) : parseInt(h.left, 10) + j) + "px",
                    top: ("auto" == h.top ? d.y - c.y + (b.offsetHeight >> 1) : parseInt(h.top, 10) + j) + "px"
                })),
                i.setAttribute("role", "progressbar"),
                f.lines(i, f.opts),
                !k) {
                    var l, m = 0, n = (h.lines - 1) * (1 - h.direction) / 2, o = h.fps, p = o / h.speed, q = (1 - h.opacity) / (p * h.trail / 100), r = p / h.lines;
                    !function a() {
                        m++;
                        for (var b = 0; b < h.lines; b++)
                            l = Math.max(1 - (m + (h.lines - b) * r) % p * q, h.opacity),
                            f.opacity(i, b * h.direction + n, l, h);
                        f.timeout = f.el && setTimeout(a, ~~(1e3 / o))
                    }()
                }
                return f
            },
            stop: function() {
                var a = this.el;
                return a && (clearTimeout(this.timeout),
                a.parentNode && a.parentNode.removeChild(a),
                this.el = void 0),
                this
            },
            lines: function(d, f) {
                function g(b, c) {
                    return e(a(), {
                        position: "absolute",
                        width: f.length + f.width + "px",
                        height: f.width + "px",
                        background: b,
                        boxShadow: c,
                        transformOrigin: "left",
                        transform: "rotate(" + ~~(360 / f.lines * j + f.rotate) + "deg) translate(" + f.radius + "px,0)",
                        borderRadius: (f.corners * f.width >> 1) + "px"
                    })
                }
                for (var i, j = 0, l = (f.lines - 1) * (1 - f.direction) / 2; j < f.lines; j++)
                    i = e(a(), {
                        position: "absolute",
                        top: 1 + ~(f.width / 2) + "px",
                        transform: f.hwaccel ? "translate3d(0,0,0)" : "",
                        opacity: f.opacity,
                        animation: k && c(f.opacity, f.trail, l + j * f.direction, f.lines) + " " + 1 / f.speed + "s linear infinite"
                    }),
                    f.shadow && b(i, e(g("#000", "0 0 4px #000"), {
                        top: "2px"
                    })),
                    b(d, b(i, g(h(f.color, j), "0 0 1px rgba(0,0,0,.1)")));
                return d
            },
            opacity: function(a, b, c) {
                b < a.childNodes.length && (a.childNodes[b].style.opacity = c)
            }
        });
        var p = e(a("group"), {
            behavior: "url(#default#VML)"
        });
        return !d(p, "transform") && p.adj ? j() : k = d(p, "animation"),
        i
    }),
    define("lib/widgets/hover", ["jquery", "lodash", "jqueryui/widget"], function(a, b) {
        "use strict";
        function c(a, b, c) {
            return Math.abs(a[0] - b[0]) > c || Math.abs(a[1] - b[1]) > c
        }
        function d(a) {
            a._hoverIsTouchTriggered = !1
        }
        var e = a(document);
        a.widget("ted.hover", {
            options: {
                hoverIdleDelay: 4e3,
                hoverStartDelay: 200,
                hoverStopDelay: 400,
                hoverSwipeTolerance: 5
            },
            hoverState: function(a) {
                return b.isUndefined(a) || this._hoverChangeState(null, !!a),
                this._hoverIsOn
            },
            _hoverIsClicking: !1,
            _hoverIsOn: !1,
            _hoverIsTouchTriggered: !1,
            _hoverLastCoords: null,
            _hoverStartTimeout: null,
            _hoverIdleTimeout: null,
            _hoverStopTimeout: null,
            _hoverChangeStateBound: null,
            _hoverMoveChangeBound: null,
            _hoverMouseMoveThrottled: null,
            _hoverTouchOutBound: null,
            _create: function() {
                this._hoverInit()
            },
            _hoverEvents: function() {
                return {
                    mouseenter: this._hoverMouseMoveThrottled,
                    mousemove: this._hoverMouseMoveThrottled,
                    mouseleave: this._hoverOut,
                    touchstart: this._hoverTouchStart,
                    touchend: this._hoverTouchEnd,
                    touchmove: this._hoverTouchMove,
                    touchcancel: this._hoverTouchCancel,
                    mousedown: this._hoverMouseDown,
                    mouseup: this._hoverMouseUp,
                    click: this._hoverMouseClick
                }
            },
            _hoverMove: function(a) {
                this._hoverIsOn ? this._hoverMoveChange(a) : this._hoverStartSetTimeout(a)
            },
            _hoverMoveChange: function(a) {
                var b = {
                    x: a.pageX || null,
                    y: a.pageY || null
                };
                "mousedown" !== a.type && "touchstart" !== a.type && this._hoverLastCoords && b.x && b.x === this._hoverLastCoords.x && b.y === this._hoverLastCoords.y || (this._hoverLastCoords = b,
                this._hoverChangeState(a, !0),
                this._hoverIdleSetTimeout(a))
            },
            _hoverOut: function(a) {
                this._hoverStartClearTimeout(),
                this._hoverStopSetTimeout(a)
            },
            _hoverMouseClick: function(a) {
                this._hoverIsTouchTriggered || this._hoverIsOn && this._trigger("tap", a)
            },
            _hoverMouseDown: function() {
                this._hoverIsTouchTriggered || (this._hoverIsClicking = !0,
                this._hoverIdleClearTimeout())
            },
            _hoverMouseMove: function(a) {
                this._hoverIsTouchTriggered || this._hoverMove(a)
            },
            _hoverMouseUp: function(a) {
                this._hoverIsTouchTriggered || (this._hoverIsClicking = !1,
                this._hoverIdleSetTimeout(a))
            },
            _hoverTouchStart: function() {
                this._hoverIsTouchTriggered = !0,
                this._hoverTouchStartCoords = null,
                this._hoverTouchEndCoords = null
            },
            _hoverTouchEnd: function(a) {
                this._hoverTouchSafetyTimeout && window.clearTimeout(this._hoverTouchSafetyTimeout),
                this._hoverTouchSafetyTimeout = b.delay(d, 600, this),
                this._hoverTouchEndCoords && c(this._hoverTouchStartCoords, this._hoverTouchEndCoords, this.options.hoverSwipeTolerance) || (this._hoverIsOn && this._trigger("tap", a),
                this._hoverMoveChange(a))
            },
            _hoverTouchCancel: function(a) {
                a.preventDefault()
            },
            _hoverTouchMove: function(a) {
                var b = a.originalEvent.touches[0]
                  , c = [b.pageX, b.pageY];
                null === this._hoverTouchStartCoords ? this._hoverTouchStartCoords = c : this._hoverTouchEndCoords = c,
                this._hoverIsOn && this._hoverMove(a)
            },
            _hoverTouchOut: function(b) {
                a(b.target).closest(this.element).length || this._hoverChangeState(b, !1)
            },
            _hoverChangeState: function(a, b) {
                b = !!b,
                this._hoverIdleClearTimeout(),
                this._hoverStartClearTimeout(),
                this._hoverStopClearTimeout(),
                !b && this._hoverIsClicking || b !== this._hoverIsOn && (this._hoverIsOn = b,
                this[b ? "_hoverStart" : "_hoverStop"](a),
                b ? this._on(e, {
                    touchstart: this._hoverTouchOutBound
                }) : this._off(e, "touchstart"))
            },
            _hoverStartSetTimeout: function(a) {
                this._hoverStartTimeout || (this._hoverStartTimeout = b.delay(this._hoverMoveChangeBound, this.options.hoverStartDelay, a))
            },
            _hoverStartClearTimeout: function() {
                this._hoverStartTimeout && (window.clearTimeout(this._hoverStartTimeout),
                this._hoverStartTimeout = null)
            },
            _hoverStopSetTimeout: function(a) {
                this._hoverStopClearTimeout(),
                this._hoverStopTimeout = b.delay(this._hoverChangeStateBound, this.options.hoverStopDelay, a, !1)
            },
            _hoverStopClearTimeout: function() {
                this._hoverStopTimeout && (window.clearTimeout(this._hoverStopTimeout),
                this._hoverStopTimeout = null)
            },
            _hoverIdleSetTimeout: function(a) {
                this._hoverIdleClearTimeout(),
                !this._hoverIsClicking && this.options.hoverIdleDelay && (this._hoverIdleTimeout = b.delay(this._hoverChangeStateBound, this.options.hoverIdleDelay, a, !1))
            },
            _hoverIdleClearTimeout: function() {
                this._hoverIdleTimeout && (window.clearTimeout(this._hoverIdleTimeout),
                this._hoverIdleTimeout = null)
            },
            _hoverInit: function() {
                this._hoverChangeStateBound = b.bind(this._hoverChangeState, this),
                this._hoverMoveChangeBound = b.bind(this._hoverMoveChange, this),
                this._hoverTouchOutBound = b.bind(this._hoverTouchOut, this),
                this._hoverMouseMoveThrottled = b.throttle(b.bind(this._hoverMouseMove, this), 100, {
                    leading: !0,
                    trailing: !1
                }),
                this._on(this._hoverEvents())
            },
            _hoverDestroy: function() {
                this._off(this._hoverEvents())
            },
            _hoverStart: function(a) {
                this._trigger("start", a)
            },
            _hoverStop: function(a) {
                this._trigger("stop", a)
            }
        })
    }),
    define("lib/widgets/player", ["jquery", "lodash", "lib/widgets/player/ga-tracker", "lib/widgets/player/ted-tracker", "lib/widgets/player/cs-tracker", "lib/widgets/player/qa-tracker", "lib/utils/f", "lib/utils/is_mobile", "lib/utils/query_param", "lib/utils/ted", "player/Player", "lib/browserDetect", "lib/pubSub", "lib/focus-zone", "Cookies", "spinjs", "jqueryui/widget", "lib/widgets/hover", "lib/resize"], function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) {
        "use strict";
        function q() {
            return i("playerMode") || null
        }
        function r(a) {
            a.preventDefault(),
            a.stopPropagation()
        }
        var s = "player"
          , t = s + "--paused"
          , u = s + "--playing"
          , v = s + "--fullscreen"
          , w = s + "--uncropped"
          , x = s + "--show-cursor"
          , y = s + "__container"
          , z = y + "__cursor-killer"
          , A = y + "__focus"
          , B = y + "__placeholder"
          , C = y + "__video"
          , D = a("<div></div>")
          , E = b.once(function(c, d) {
            window.onYouTubeIframeAPIReady = b.bind(c, d),
            a.getScript("//www.youtube.com/iframe_api")
        });
        return a.widget("ted.player", a.ted.hover, {
            options: {
                breakpoint: !0,
                currentTalk: null,
                defaultSubtitles: !1,
                flashVars: {},
                hlsjsConfig: {
                    maxStarvationDelay: 2
                },
                hlsjsEvents: {},
                logLevel: 2,
                metricsKey: null,
                mai: !0,
                maiAdUnitId: null,
                maiPostrollType: "stitched",
                mode: q(),
                nativeLanguage: "en",
                startTrackingAt: 0,
                swf: j("playerPath"),
                talks: null,
                capQualityToStage: !0,
                hideCursorDelay: 1e3,
                uncropped: !0,
                soonThreshold: .1,
                recordInIdentity: !0
            },
            _isPlayerInitialized: !1,
            _isPlaying: !1,
            _addElements: function() {
                var a = this.element.find("div." + y);
                a.length || (a = D.clone().addClass(y).appendTo(this.element));
                var b = a.find("div." + B);
                b.length || (b = D.clone().addClass(B).appendTo(a)),
                b.wrap(D.clone().addClass(A));
                var c = b.closest("div." + A).addClass(C).attr({
                    href: "#",
                    role: "button",
                    "aria-label": "Play/Pause"
                })
                  , d = a.find("div." + z);
                d.length || (d = D.clone().addClass(z).appendTo(a)),
                this.elements = {
                    container: a,
                    focal: c,
                    placeholder: b,
                    cursorKiller: d
                }
            },
            _breakpoint: function(a) {
                this.options.breakpoint && (a < 1024 ? this.video.attr("controls", "controls") : this.video.removeAttr("controls"))
            },
            _create: function() {
                this.options.currentTalk || (this.options.currentTalk = this.options.talks[0]),
                this._on({
                    playerplay: function() {
                        this._isPlaying = !0,
                        this.element.addClass(u).removeClass(t)
                    },
                    playerpause: function() {
                        this._isPlaying = !1,
                        this.element.addClass(t).removeClass(u)
                    },
                    playerended: function() {
                        this._isPlaying = !1,
                        this.element.removeClass(t).removeClass(u)
                    }
                }),
                this._isInternal = !this.talk().external,
                this.options.hoverStopDelay = this.options.hideCursorDelay,
                new c(this),
                new d(this),
                new e(this),
                new f(this),
                this._initializePlayer()
            },
            _initializePlayer: function() {
                this._isPlayerInitialized || (this._isPlayerInitialized = !0,
                this.element.addClass(s + " " + (this.options.uncropped ? w : "")),
                this._addElements(),
                this._isInternal ? this._initializeInternalPlayer() : "YouTube" === this.talk().external.service && this._initializeYouTubePlayer(),
                this._hoverInit())
            },
            _initializeYouTubePlayer: function() {
                E(this._youTubeApiReady, this),
                this._on({
                    playerrequestplay: function() {
                        this._ytPlayer && this._ytPlayer.playVideo && this._ytPlayer.playVideo()
                    }
                })
            },
            _youTubeApiReady: function() {
                var b = this
                  , c = this.talk()
                  , d = "//www.youtube.com/embed/" + c.external.code + "?showinfo=0&enablejsapi=1&autoplay=0&origin=" + location.origin;
                c.external.startTime && (d += "&start=" + c.external.startTime);
                var e = a("<iframe class=" + C + " src=" + d + " frameborder=0 allowfullscreen></iframe>");
                b.elements.placeholder.replaceWith(e),
                b._ytPlayer = new YT.Player(e.get(0),{
                    events: {}
                }),
                b._trigger("domready")
            },
            _getMaiUrlOverrides: function() {
                return "staging" === j("env") || "development" === j("env")
            },
            _getPlayerModes: function() {
                return ["hls", "hlsjs", "flash", "h264"]
            },
            _initializeInternalPlayer: function() {
                var c = i("dfptest")
                  , d = i("maiAdUnitId");
                d && (this.options.maiAdUnitId = d);
                var e = i("maiPostrollType");
                e && (this.options.maiPostrollType = e),
                this.options.talks = this.options.talks.map(function(a) {
                    if (c) {
                        var b = encodeURIComponent(c);
                        a.resources.hls.adUrl = a.resources.hls.adUrl.replace(/(cust_params=[^&]+)&/, "$1%26dfptest%3D" + b + "&"),
                        a.resources.hls.maiTargeting.dfptest = c
                    }
                    var d = Number(a.introDuration);
                    return a.introDuration = Math.min(d, 11.82),
                    a.adDuration = 0 === d ? 0 : 3.33,
                    a.postAdDuration = 0 === d ? 0 : .83,
                    a
                });
                var f = {
                    class: C,
                    playsinline: "playsinline"
                };
                this.player = new k({
                    attrs: f,
                    defaultSubtitles: this.options.defaultSubtitles,
                    el: this.elements.placeholder.get(0),
                    flashVars: this.options.flashVars,
                    hlsjsConfig: this.options.hlsjsConfig,
                    hlsjsEvents: this.options.hlsjsEvents,
                    logLevel: this.options.logLevel,
                    mai: this.options.mai,
                    maiAdUnitId: this.options.maiAdUnitId,
                    maiPostrollType: this.options.maiPostrollType,
                    maiUrlOverrides: this._getMaiUrlOverrides(),
                    metricsKey: this.options.metricsKey,
                    mode: this.options.mode,
                    modes: this._getPlayerModes(),
                    nativeLanguage: this.options.nativeLanguage,
                    capQualityToStage: this.options.capQualityToStage,
                    swf: this.options.swf,
                    talks: this.options.talks
                }),
                this.element.addClass(s + "--" + this.mode()),
                h() && this.element.addClass(s + "--is-mobile"),
                this._subscribeToPlayerEvents(),
                this._subscribeToKeyboardEvents(),
                this.player.one("ready.dom", b.bind(this._playerDomReady, this)),
                this.player.canFullScreen && (this.player.on("enterFullScreen", b.bind(this._playerEnterFullScreen, this)),
                this.player.on("exitFullScreen", b.bind(this._playerExitFullScreen, this))),
                this.player.on("talk", b.bind(function(a) {
                    this.options.currentTalk = a,
                    this._trigger("talk", null, a)
                }, this)),
                this.player.on("bufferUnplayable", b.bind(this._bufferingStarted, this)),
                this.player.on("bufferPlayable", b.bind(this._bufferingStopped, this)),
                this.player.on("prolongedBuffer", b.bind(function(a) {
                    this._trigger("prolongedBuffer", null, {
                        duration: a
                    })
                }, this)),
                this.player.on("prolongedRebuffer", b.bind(function(a) {
                    this._trigger("prolongedRebuffer", null, {
                        duration: a
                    })
                }, this)),
                this._on({
                    playercurrenttime: function(a, b) {
                        this._currentTime = b.currentTime
                    },
                    playerplaybackrate: function(a, b) {
                        this._playbackRate = b.playbackRate
                    },
                    playerpopout: function(a, b) {
                        this._popOut = b.popOut
                    },
                    playervolume: function(a, b) {
                        this._volume = b.volume
                    },
                    playerprogress: function() {
                        var a;
                        return function(b, c) {
                            !a && c.progress > 1 - this.options.soonThreshold && this.player.isLastTalk() && (a = !0,
                            this._trigger("soon"))
                        }
                    }(),
                    playerpostrollcomplete: function() {
                        this.player.isLastTalk() && !this._queuedTalkId && (this._queuedTalkId = this.options.currentTalk.id)
                    },
                    playerrequestplay: function() {
                        var c = a("*:focus");
                        c.closest(this.elements.focal).length || (this._oldFocus = c),
                        this.elements.focal.attr("tabindex", "1"),
                        this._queuedTalkId ? (a(this.player.el).attr("preload", ""),
                        this.player.playTalk(this._queuedTalkId),
                        this._queuedTalkId = null,
                        b.delay(g(this.player, "play"))) : this.player.play()
                    },
                    playerplay: function() {
                        this.elements.focal.focus()
                    },
                    playerrequestpause: function() {
                        this.player.postrolling || this.player.pause()
                    }
                })
            },
            _destroy: function() {
                this.options.breakpoint && m("breakpoint").unsubscribe(this._breakpoint)
            },
            _playerDomReady: function() {
                var c = this
                  , d = a(c.player.el);
                if (c.video = d,
                c.options.breakpoint && m("breakpoint").subscribe(b.bind(c._breakpoint, c)),
                "hlsjs" === c.player.mode) {
                    var e = "player-menu-" + Math.round(1e3 * Math.random())
                      , f = a('<menu type="context" id="' + e + '"></menu>')
                      , g = a("<menuitem label=Metrics></menuitem>");
                    g.on("click", function() {
                        c._trigger("metricsToggle")
                    }),
                    f.append(g),
                    d.append(f),
                    d.attr("contextmenu", e)
                }
                c._trigger("domready")
            },
            _playerEnterFullScreen: function() {
                this.element.addClass(v),
                this._fullscreenZone("activate")
            },
            _playerExitFullScreen: function() {
                this.element.removeClass(v),
                this._fullscreenZone("deactivate")
            },
            _playerOption: function(a) {
                return this.player && this.player.options && this.player.options[a] || null
            },
            _subscribeToKeyboardEvents: function() {
                this._on(this.elements.focal, {
                    keydown: this._keyDown,
                    keyup: this._keyUp
                })
            },
            _subscribeToPlayerEvents: function() {
                var a, c = this;
                this._on({
                    playerrequestplay: function() {
                        a = !0,
                        c._hasPlayBeenRequested || (c._hasPlayBeenRequested = !0,
                        c._showBuffering())
                    },
                    playerplay: function() {
                        a = !1
                    }
                }),
                b.forEach(["ad", "currentTime", "duration", "ended", "enterFullScreen", "error", "exitFullScreen", "pause", "play", "progress", "ready", "seeked", "seeking", "volume", "muted", "idle", "complete", "talkComplete", "prerollStart", "prerollBlock", "postrollStart", "postrollComplete", "postrollDuration", "postrollRemaining", "adBlock", "bufferPlayable", "bufferUnplayable", "subtitle", "playbackRate", "popOut", "playToken", "metricsData", "metricsToggle"], function(b) {
                    c.player.on(b, function(d) {
                        var e = {};
                        "play" !== b || a || c._trigger("requestplay"),
                        e[b] = d,
                        c._trigger(b, null, e),
                        c["_" + b] = d
                    })
                })
            },
            _hoverStart: function(a) {
                this.element.addClass(x),
                this._trigger("hoverstart", a)
            },
            _hoverStop: function(a) {
                this.element.removeClass(x),
                this._trigger("hoverstop", a)
            },
            _showBuffering: function() {
                this._spinner || (this._spinner = new p({
                    lines: 13,
                    length: 13,
                    width: 5,
                    radius: 16,
                    color: "#FFF",
                    trail: 50,
                    shadow: !0
                })),
                this._isBuffering && this._hasPlayBeenRequested ? this._spinner.spin(this.element.get(0)) : this._spinner.stop()
            },
            _bufferingStarted: function() {
                this._isBuffering = !0,
                this._showBuffering()
            },
            _bufferingStopped: function() {
                this._isBuffering = !1,
                this._showBuffering()
            },
            _keyDown: function(b) {
                var c = a.ui.keyCode
                  , d = b.ctrlKey || b.shiftKey || b.altKey
                  , e = this
                  , f = e.options.currentTalk && e.options.currentTalk.duration || 0
                  , g = e._currentTime || 0
                  , h = e.volume() || 0;
                switch (b.keyCode) {
                case c.ENTER:
                case c.NUMPAD_ENTER:
                case c.SPACE:
                    e.toggle(),
                    r(b);
                    break;
                case c.DOWN:
                    d ? e.mute(!0) : e.volume(h - .1),
                    r(b);
                    break;
                case c.UP:
                    d ? e.mute(!1) : e.volume(h + .1),
                    r(b);
                    break;
                case c.LEFT:
                    d ? e.seek(g - .1 * f) : e.seek(g - 15),
                    r(b);
                    break;
                case c.RIGHT:
                    d ? e.seek(g + .1 * f) : e.seek(g + 15),
                    r(b);
                    break;
                case c.HOME:
                    e.seek(0),
                    r(b);
                    break;
                case c.END:
                    e.seek(f - 1),
                    r(b);
                    break;
                case c.TAB:
                    var i = this._oldFocus;
                    this._tabDown || !i || i.is(":hidden") || i.is(":disabled") || (i.focus(),
                    r(b)),
                    this._oldFocus = null,
                    this._tabDown = !0
                }
            },
            _keyUp: function(b) {
                b.keyCode === a.ui.keyCode.TAB && (this._tabDown = !1)
            },
            _fullscreenZone: function(a) {
                var b = this.player.fullScreenElement
                  , c = this._fullscreenZoneObj;
                b && (c || (c = new n(b),
                this._fullscreenZoneObj = c),
                c[a]())
            },
            mode: function() {
                return this._isInternal ? this.player.options.mode : "external"
            },
            talk: function(a) {
                return arguments.length && (this.queue(a),
                this._trigger("requestplay")),
                this.options.currentTalk
            },
            talks: function() {
                return this.player.talks
            },
            toggle: function() {
                this[this._isPlaying ? "pause" : "play"]()
            },
            play: function() {
                this._trigger("requestplay")
            },
            playNext: function() {
                this._trigger("requestnext"),
                this.player.playNext()
            },
            playPrev: function() {
                this._trigger("requestprev"),
                this.player.playPrev()
            },
            pause: function() {
                this._trigger("requestpause")
            },
            _playbackRate: null,
            playbackRate: function(a) {
                return arguments.length && (this.player.playbackRate(a),
                this._playbackRate = a),
                this._playbackRate
            },
            _popOut: !1,
            popOut: function(a) {
                return arguments.length && (this.player.popOut(a),
                this._popOut = a),
                this._popOut
            },
            queue: function(a) {
                this._queuedTalkId = a
            },
            sendAds: function(a) {
                this.player.sendAds(a)
            },
            seek: function(a, b) {
                this.options.startTrackingAt = b ? a : 0,
                this.player.seek(a)
            },
            _subtitle: null,
            subtitle: function(a) {
                if (arguments.length) {
                    var c = !!a && b.find(this.talk().languages, {
                        languageCode: a
                    });
                    this.player.subtitle(a),
                    this._subtitle = c
                }
                return this._subtitle
            },
            _volume: null,
            volume: function(a) {
                return arguments.length && this.player.volume(a),
                this._volume
            },
            _muted: null,
            mute: function(a) {
                return arguments.length && this.player.mute(a),
                this._muted
            },
            toggleFullScreen: function() {
                var b = a("html,body")
                  , c = a(document).scrollTop()
                  , d = a(this.element)
                  , e = d.offset().top;
                c > e && b.scrollTop(e),
                this[this.player.isFullScreen ? "cancelFullScreen" : "requestFullScreen"](this.elements.container.get(0))
            },
            requestFullScreen: function(a) {
                this.player.requestFullScreen(a)
            },
            cancelFullScreen: function(a) {
                this.player.cancelFullScreen(a)
            },
            isControllable: function() {
                return this._isInternal
            },
            isFullScreen: function() {
                return !!this._isInternal && this.player.isFullScreen
            },
            isMai: function() {
                var a = this.mode();
                return !("hls" !== a && "hlsjs" !== a || !this._playerOption("mai") || !this._playerOption("maiAdUnitId"))
            },
            canFullScreen: function() {
                return !!this._isInternal && this.player.canFullScreen
            },
            canPlaybackRate: function() {
                return !!this._isInternal && this.player.canPlaybackRate
            },
            canPopOut: function() {
                return !!this._isInternal && this.player.canPopOut
            },
            canSubtitle: function() {
                return this._isInternal && !!this.player.canSubtitle
            },
            canVolume: function() {
                return this._isInternal && !!this.player.canVolume
            },
            capQualityToStage: function(a) {
                this.options.capQualityToStage = a,
                this.player.capQualityToStage(a)
            },
            maiAdUnitId: function() {
                return this._playerOption("maiAdUnitId")
            }
        }),
        function(b, c) {
            return a(b).player(c)
        }
    }),
    define("components/embeddable/views/player", ["jquery", "lodash", "./base", "lib/utils/is_mobile", "hbs!components/embeddable/templates/player", "lib/widgets/player"], function(a, b, c, d, e) {
        "use strict";
        var f = c.extend({
            play: function() {
                this.state.set("activated", !0),
                this.$player.player("play")
            },
            pause: function() {
                this.$player.player("pause")
            },
            talk: function(a) {
                this.$player.player("talk", a.get("id"))
            },
            mute: function() {
                this.$player.player("mute", !0)
            },
            unmute: function() {
                this.$player.player("mute", !1)
            },
            volume: function(a) {
                this.$player.player("volume", a)
            },
            subtitle: function(a) {
                this.$player.player("subtitle", a)
            },
            fullscreen: function() {
                this.$player.player("requestFullScreen", this.fullscreenElement || this.el)
            },
            smallscreen: function() {
                this.$player.player("cancelFullScreen", this.fullscreenElement || this.el)
            },
            seek: function(a) {
                this.$player.player("seek", a)
            },
            fullscreenElement: null,
            className: "Embeddable__player",
            events: {
                playererror: function(a, b) {
                    var c = b.error
                      , d = "client" === c.type ? "client" : null;
                    "abortive" === c.severity && this.state.set("error", d || "init"),
                    "fatal" === c.severity && this.state.set("error", d || "fatal")
                },
                playerready: function() {
                    this.state.set("ready", !0),
                    this._checkCapabilities()
                },
                playerplay: function() {
                    this.state.set("playing", !0),
                    this.state.set("paused", !1),
                    this.state.set("ended", !1)
                },
                playerpause: function() {
                    this.state.set("paused", !0),
                    this.state.set("playing", !1)
                },
                playerduration: function(a, b) {
                    var c = this.$player.player("talk").id
                      , d = this.talks.get(c);
                    d.set("duration", b.duration),
                    this.state.set("duration", b.duration)
                },
                playercurrenttime: function(a, b) {
                    this.state.set("currentTime", b.currentTime)
                },
                playertalk: function(a, b) {
                    this.state.set("postrolling", !1),
                    this.state.set("talk", this.talks.get(b.id))
                },
                playerended: function() {
                    this.state.set("paused", !1),
                    this.state.set("playing", !1),
                    this.state.set("ended", !0)
                },
                playervolume: function(a, b) {
                    this.state.set("volume", b.volume)
                },
                playermuted: function(a, b) {
                    this.state.set("muted", b.muted)
                },
                playersubtitle: function(a, b) {
                    this.state.set("subtitle", b && b.subtitle && b.subtitle.languageCode)
                },
                playerenterfullscreen: function() {
                    this.state.set("fullscreen", !0)
                },
                playerexitfullscreen: function() {
                    this.state.set("fullscreen", !1)
                },
                playerpostrollstart: function() {
                    this.state.set("postrolling", !0)
                },
                playerpostrollcomplete: function() {
                    this.state.set("postrolling", !1)
                }
            },
            propsDefaults: {
                defaultSubtitles: !1,
                nativeLanguage: "en",
                maiAdUnitId: void 0
            },
            stateDefaults: {
                nativeControls: !1,
                activated: !1,
                ended: !1,
                error: !1,
                ready: !1,
                playing: !1,
                paused: !1,
                duration: null,
                currentTime: null,
                talk: null,
                volume: .5,
                canVolume: !1,
                muted: !1,
                subtitle: !1,
                canSubtitle: !1,
                fullscreen: !1,
                canFullscreen: !1,
                postrolling: !1
            },
            stateEvents: {
                "change:nativeControls": function(a, b) {
                    b ? this.find("video").attr("controls", "controls") : this.find("video").removeAttr("controls")
                },
                "on:activated": function() {
                    this.$el.addClass("Embeddable__player--activated")
                }
            },
            initialize: function(a) {
                this.talks = a.talks,
                this.fullscreenElement = a.fullscreenElement || null,
                this.initializeState(),
                this.initializeProps()
            },
            render: function() {
                return this.$el.html(e()),
                this.$player = this.$el.find("div.Embeddable__player__object"),
                this.$player.player({
                    breakpoint: !1,
                    defaultSubtitles: this.props.get("defaultSubtitles"),
                    maiAdUnitId: this.props.get("maiAdUnitId"),
                    nativeLanguage: this.props.get("nativeLanguage"),
                    talks: this.talks.toPlayer(),
                    recordInIdentity: !1,
                    uncropped: !1
                }),
                this
            },
            _canFullscreen: function() {
                return !!this.$player.player("canFullScreen") && !d()
            },
            _checkCapabilities: function() {
                var a = this._canFullscreen()
                  , b = this.$player.player("canSubtitle")
                  , c = this.$player.player("canVolume");
                this.state.set("canFullscreen", a),
                this.state.set("canVolume", c),
                this.state.set("canSubtitle", b)
            }
        });
        return f
    }),
    define("components/embeddable/views/canonball", ["./base"], function(a) {
        "use strict";
        var b = a.extend({
            className: "Embeddable__canonball ted-logo",
            tagName: "a",
            attributes: {
                href: "#",
                target: "_blank"
            },
            propsDefaults: {
                enabled: !1,
                visible: !1,
                url: "https://www.ted.com/"
            },
            propsEvents: {
                "change:url": "render",
                "change:enabled": function(a, b) {
                    this.$el[b ? "addClass" : "removeClass"]("Embeddable__canonball--enabled")
                },
                "change:visible": function(a, b) {
                    this.$el[b ? "addClass" : "removeClass"]("Embeddable__canonball--visible")
                }
            },
            render: function() {
                var a = this.props.get("url") || this.propsDefaults.url;
                this.$el.attr("href", a)
            }
        });
        return b
    }),
    define("hbs!components/embeddable/templates/ended", ["hbs", "hbs/handlebars"], function(a, b) {
        var c = b.template({
            1: function(a, b, c, d) {
                var e;
                return '        <div class="m2">\n          Enjoy watching TED talks?<br>\n          <a href="https://www.ted.com/newsletter' + (null != (e = b.unless.call(a, null != a ? a.disableCampaigns : a, {
                    name: "unless",
                    hash: {},
                    fn: this.program(2, d, 0),
                    inverse: this.noop,
                    data: d
                })) ? e : "") + '" target="_blank">Get new talks in your inbox</a>\n        </div>\n'
            },
            2: function(a, b, c, d) {
                return "?utm_source=embedPlayer&utm_medium=referral&utm_campaign=embed_newsletter"
            },
            compiler: [6, ">= 2.0.0-beta.1"],
            main: function(a, b, c, d) {
                var e;
                return '\n<div class="vc">\n  <div class="vc__wrap">\n    <div class="hpad2 inverse text-center">\n' + (null != (e = b.unless.call(a, null != a ? a.hideNewsletter : a, {
                    name: "unless",
                    hash: {},
                    fn: this.program(1, d, 0),
                    inverse: this.noop,
                    data: d
                })) ? e : "") + '\n      <a hre="#" class="Embeddable__ended__rewatch button button--highlight" role="button">Rewatch</a>\n    </div>\n  </div>\n</div>\n'
            },
            useData: !0
        });
        return b.registerPartial("components/embeddable/templates/ended", c),
        c
    }),
    define("components/embeddable/views/ended", ["./base", "hbs!components/embeddable/templates/ended"], function(a, b) {
        "use strict";
        var c = a.extend({
            className: "Embeddable__ended",
            events: {
                "click a.Embeddable__ended__rewatch": function() {
                    this.state.set("rewatchPending", !0)
                }
            },
            propsDefaults: {
                activated: !1,
                disableCampaigns: !1,
                hideNewsletter: !1
            },
            propsEvents: {
                "change:activated": function(a, b) {
                    this.$el[b ? "addClass" : "removeClass"]("Embeddable__ended--activated"),
                    this.state.set("rewatchPending", !1)
                },
                "change:disableCampaigns": function() {
                    this.render()
                },
                "change:hideNewsletter": function() {
                    this.render()
                }
            },
            stateDefaults: {
                rewatchPending: !1
            },
            stateEvents: {
                "change:rewatchPending": function(a, b) {
                    this.$el[b ? "addClass" : "removeClass"]("Embeddable__ended--rewatching")
                }
            },
            render: function() {
                this.$el.html(b(this.props.toJSON()))
            }
        });
        return c
    }),
    define("components/embeddable/index", ["jquery", "lodash", "lib/ads", "hbs!components/embeddable/templates/error", "components/embeddable/collections/talks", "components/embeddable/views/chrome", "components/embeddable/views/player", "components/embeddable/views/canonball", "components/embeddable/views/ended", "lib/widgets/hover"], function(a, b, c, d, e, f, g, h, i) {
        "use strict";
        function j(b) {
            function c() {
                o.props.set("enabled", n.props.get("activated") && !n.props.get("postrolling") && !n.props.get("hideBranding")),
                o.props.set("visible", n.props.get("hovering") && !n.props.get("fullscreen") || m.state.get("paused"))
            }
            function j() {
                n.props.set("visible", n.props.get("hovering") || m.state.get("paused"))
            }
            var k = a(b.el)
              , l = new e(b.talks)
              , m = new g({
                fullscreenElement: b.el,
                talks: l
            })
              , n = new f({
                talks: l
            })
              , o = new h
              , p = new i;
            n.props.set("hideBranding", b.hideBranding),
            p.props.set("hideNewsletter", b.hideNewsletter),
            p.props.set("disableCampaigns", b.disableCampaigns),
            m.props.set("nativeLanguage", b.nativeLanguage),
            m.props.set("defaultSubtitles", b.defaultSubtitles),
            m.props.set("maiAdUnitId", b.maiAdUnitId),
            o.props.set("url", b.canonicalUrl),
            n.props.set("url", b.canonicalUrl),
            m.state.on("change:error", function(a, c) {
                k.html(d({
                    isClient: "client" === c,
                    isInit: "init" === c,
                    isFatal: "fatal" === c,
                    url: b.canonicalUrl
                }))
            }),
            m.state.on("change:nativeControls", function(a, b) {
                n.props.set("enabled", !b)
            }),
            m.state.on("change:activated", function(a, b) {
                k.addClass("Embeddable--activated"),
                k.removeClass("Embeddable--activating"),
                n.props.set("activated", b)
            }),
            m.state.on("change:playing", function(a, b) {
                n.props.set("playing", b)
            }),
            m.state.on("change:paused", function(a, b) {
                n.props.set("paused", b)
            }),
            m.state.on("change:duration", function(a, b) {
                n.props.set("duration", b)
            }),
            m.state.on("change:currentTime", function(a, b) {
                n.props.set("currentTime", b)
            }),
            m.state.on("change:ended", function(a, b) {
                p.props.set("activated", b)
            }),
            m.state.on("change:talk", function(a, b) {
                n.props.set("talk", b),
                n.props.set("next", l.after(b) || null),
                n.props.set("prev", l.before(b) || null)
            }),
            m.state.on("change:volume", function(a, b) {
                n.props.set("volume", b)
            }),
            m.state.on("change:canVolume", function(a, b) {
                n.props.set("canVolume", b)
            }),
            m.state.on("change:muted", function(a, b) {
                n.props.set("muted", b)
            }),
            m.state.on("change:subtitle", function(a, b) {
                n.props.set("subtitle", b)
            }),
            m.state.on("change:canSubtitle", function(a, b) {
                n.props.set("canSubtitle", b)
            }),
            m.state.on("change:fullscreen", function(a, b) {
                n.props.set("fullscreen", b)
            }),
            m.state.on("change:canFullscreen", function(a, b) {
                n.props.set("canFullscreen", b)
            }),
            m.state.on("change:postrolling", function(a, b) {
                n.props.set("postrolling", b)
            }),
            n.state.on("change:playPending", function(a, b) {
                b && m.play()
            }),
            n.state.on("change:pausePending", function(a, b) {
                b && m.pause()
            }),
            n.state.on("change:pendingTalk", function(a, b) {
                b && m.talk(b)
            }),
            n.state.on("change:mutePending", function(a, b) {
                b && m.mute()
            }),
            n.state.on("change:unmutePending", function(a, b) {
                b && m.unmute()
            }),
            n.state.on("change:pendingVolume", function(a, b) {
                null != b && m.volume(b)
            }),
            n.state.on("change:pendingSubtitle", function(a, b) {
                null !== b && (b ? m.subtitle(b) : m.subtitle(!1))
            }),
            n.state.on("change:fullscreenPending", function(a, b) {
                b && m.fullscreen()
            }),
            n.state.on("change:smallscreenPending", function(a, b) {
                b && m.smallscreen()
            }),
            n.state.on("change:pendingSeek", function(a, b) {
                null != b && m.seek(b)
            }),
            p.state.on("change:rewatchPending", function(a, b) {
                b && (m.seek(0),
                m.play())
            }),
            n.props.on("change:activated", c),
            n.props.on("change:hovering", c),
            n.props.on("change:postrolling", c),
            n.props.on("change:fullscreen", c),
            m.state.on("change:paused", c),
            n.props.on("change:hovering", j),
            n.state.on("change:paused", j),
            k.hover().on("hoverstart", function() {
                n.props.set("hovering", !0)
            }).on("hoverstop", function() {
                n.props.set("hovering", !1)
            }),
            this.$el = k,
            this.talks = l,
            this.player = m,
            this.chrome = n,
            this.canonball = o,
            this.ended = p
        }
        return b.extend(j.prototype, {
            activate: function() {
                this.$el.addClass("Embeddable--activating"),
                this.player.play()
            },
            render: function() {
                this.$el.prepend(this.player.$el),
                this.$el.append(this.canonball.$el),
                this.$el.append(this.chrome.$el),
                this.$el.append(this.ended.$el),
                this.ended.render(),
                this.chrome.render(),
                this.player.render(),
                c.initPlayer(this.player.$player)
            }
        }),
        j.init = function(a) {
            var c = new j({
                defaultSubtitles: !!a.defaultSubtitles,
                el: a.el,
                canonicalUrl: a.canonicalUrl,
                disableCampaigns: !!a.disableCampaigns,
                hideBranding: !!a.hideBranding,
                hideNewsletter: !!a.hideNewsletter,
                maiAdUnitId: a.maiAdUnitId,
                nativeLanguage: a.nativeLanguage,
                talks: a.talks
            });
            c.$el.data("embeddable", c),
            c.render(),
            c.player.state.once("change:ready", function() {
                window[a.activate] = b.once(function() {
                    c.activate()
                }),
                c.$el.hasClass("Embeddable--activating") && window[a.activate]()
            })
        }
        ,
        j
    }),
    define("screens/embed", ["dq", "components/embeddable/index", "lib/ads"], function(a, b, c) {
        "use strict";
        a({
            q: window._q,
            modules: {
                embeddable: b
            }
        }),
        a({
            q: window._g,
            modules: {
                ads: c
            }
        })
    })
}();
